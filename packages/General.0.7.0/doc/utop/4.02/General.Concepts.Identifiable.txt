module Identifiable: sig
  module Operators = General.Traits.Equatable.Operators
  module type S0 = sig
    type t
    val equal: t -> t -> bool
    val different: t -> t -> bool
    module O: sig
      val (=): t -> t -> bool
      val (<>): t -> t -> bool
    end
    val repr: t -> bytes
  end
  module type S1 = sig
    type 'a t
    val equal: 'a t -> 'a t -> equal_a:('a -> 'a -> bool) -> bool
    val different: 'a t -> 'a t -> equal_a:('a -> 'a -> bool) -> bool
    val repr: 'a t -> repr_a:('a -> bytes) -> bytes
  end
  module type S2 = sig
    type ('a, 'b) t
    val equal: ('a, 'b) t -> ('a, 'b) t -> equal_a:('a -> 'a -> bool) -> equal_b:('b -> 'b -> bool) -> bool
    val different: ('a, 'b) t -> ('a, 'b) t -> equal_a:('a -> 'a -> bool) -> equal_b:('b -> 'b -> bool) -> bool
    val repr: ('a, 'b) t -> repr_a:('a -> bytes) -> repr_b:('b -> bytes) -> bytes
  end
  module type S3 = sig
    type ('a, 'b, 'c) t
    val equal: ('a, 'b, 'c) t -> ('a, 'b, 'c) t -> equal_a:('a -> 'a -> bool) -> equal_b:('b -> 'b -> bool) -> equal_c:('c -> 'c -> bool) -> bool
    val different: ('a, 'b, 'c) t -> ('a, 'b, 'c) t -> equal_a:('a -> 'a -> bool) -> equal_b:('b -> 'b -> bool) -> equal_c:('c -> 'c -> bool) -> bool
    val repr: ('a, 'b, 'c) t -> repr_a:('a -> bytes) -> repr_b:('b -> bytes) -> repr_c:('c -> bytes) -> bytes
  end
  module type S4 = sig
    type ('a, 'b, 'c, 'd) t
    val equal: ('a, 'b, 'c, 'd) t -> ('a, 'b, 'c, 'd) t -> equal_a:('a -> 'a -> bool) -> equal_b:('b -> 'b -> bool) -> equal_c:('c -> 'c -> bool) -> equal_d:('d -> 'd -> bool) -> bool
    val different: ('a, 'b, 'c, 'd) t -> ('a, 'b, 'c, 'd) t -> equal_a:('a -> 'a -> bool) -> equal_b:('b -> 'b -> bool) -> equal_c:('c -> 'c -> bool) -> equal_d:('d -> 'd -> bool) -> bool
    val repr: ('a, 'b, 'c, 'd) t -> repr_a:('a -> bytes) -> repr_b:('b -> bytes) -> repr_c:('c -> bytes) -> repr_d:('d -> bytes) -> bytes
  end
  module type S5 = sig
    type ('a, 'b, 'c, 'd, 'e) t
    val equal: ('a, 'b, 'c, 'd, 'e) t -> ('a, 'b, 'c, 'd, 'e) t -> equal_a:('a -> 'a -> bool) -> equal_b:('b -> 'b -> bool) -> equal_c:('c -> 'c -> bool) -> equal_d:('d -> 'd -> bool) -> equal_e:('e -> 'e -> bool) -> bool
    val different: ('a, 'b, 'c, 'd, 'e) t -> ('a, 'b, 'c, 'd, 'e) t -> equal_a:('a -> 'a -> bool) -> equal_b:('b -> 'b -> bool) -> equal_c:('c -> 'c -> bool) -> equal_d:('d -> 'd -> bool) -> equal_e:('e -> 'e -> bool) -> bool
    val repr: ('a, 'b, 'c, 'd, 'e) t -> repr_a:('a -> bytes) -> repr_b:('b -> bytes) -> repr_c:('c -> bytes) -> repr_d:('d -> bytes) -> repr_e:('e -> bytes) -> bytes
  end
end
