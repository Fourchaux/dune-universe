module IntOption: sig
  type t = int option
  val some_if: bool -> int lazy_t -> t
  val some_if': bool -> int -> t
  val is_some: t -> bool
  val is_none: t -> bool
  val value_def: t -> def:int -> int
  val value: ?exc:exn -> t -> int
  val or_failure: ('a, unit, string, string, string, t -> int) format6 -> 'a
  val map: t -> f:(int -> 'a) -> 'a option
  val iter: t -> f:(int -> unit) -> unit
  val filter: t -> f:(int -> bool) -> t
  val filter_map: t -> f:(int -> 'a option) -> 'a option
  val value_map: t -> def:'a -> f:(int -> 'a) -> 'a
end
