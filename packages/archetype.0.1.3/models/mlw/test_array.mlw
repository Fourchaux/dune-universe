module Flag

  use int.Int
  use ref.Ref
  use array.Array
  use array.ArraySwap
  use array.ArrayPermut

  type color = Blue | White | Red

  predicate monochrome (a: array color) (i: int) (j: int) (c: color) =
    forall k: int. i <= k < j -> a[k]=c

  let dutch_flag (a: array color)
    requires { 0 <= length a }
    ensures  { true }
  =
    let b = ref 0 in
    let i = ref 0 in
    let r = ref (length a) in
    while !i < !r do
      invariant { true }
      match a[!i] with
      | Blue ->
        swap a !b !i;
        b := !b + 1;
        i := !i + 1
      | White ->
        i := !i + 1
      | Red ->
        r := !r - 1;
        swap a !r !i
      end
    done

end
