(env
 (dev
  (flags
   (:standard -g -strict-formats -strict-sequence -short-paths -w "-63")))
 ; -63 to handle Menhir/dune problems
 (release
  (flags
   (:standard -w "-63"))
  (ocamlopt_flags
   (:standard -O3))))

(executable
 (public_name electrod)
 (package electrod)
 (promote
  (until-clean)
  (into ..))
 (modules
  ("Main" electrod))
 (libraries electrod.libelectrod dune-build-info cmdliner fmt fmt.cli fmt.tty
   logs.cli logs.fmt stdlib-shims))

(library
 (name libelectrod)
 (public_name electrod.libelectrod)
 (modules
  (:standard
   \
   ("Main" electrod)))
 (libraries containers containers-data containers.unix fmt fmt.tty gen
   hashcons logs.fmt mtime.clock.os printbox iter stdcompat stdlib-shims)
 (preprocess
  (pps ppx_deriving visitors.ppx)))

; Generate Scripts.ml file

(rule
 (targets Scripts.ml)
 (action
  (chdir
   %{workspace_root}
   (with-stdout-to
    %{targets}
    (progn
     (echo "let nuXmv_default_script = {|\n")
     (cat "res/nuxmv-default-script.scr")
     (echo "|}\n")
     (echo "let nuSMV_default_script = {|\n")
     (cat "res/nusmv-default-script.scr")
     (echo "|}\n")
     (echo "let nuXmv_default_bmc_script = {|\n")
     (cat "res/nuxmv-default-bmc-script.scr")
     (echo "|}\n")
     (echo "let nuSMV_default_bmc_script = {|\n")
     (cat "res/nusmv-default-bmc-script.scr")
     (echo "|}\n"))))))

(ocamllex Scanner Smv_trace_scanner)

;;; Electrod parser

(menhir
 (modules Parser))

;;; SMV trace parser

(menhir
 (flags (--only-tokens))
 (modules Smv_trace_tokens))

(menhir
 (merge_into Smv_trace_parser)
 (flags
  (--external-tokens Smv_trace_tokens))
 (modules Smv_trace_parser Smv_trace_tokens))
