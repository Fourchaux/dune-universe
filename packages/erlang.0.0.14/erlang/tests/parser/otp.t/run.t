  $ erldump parse binary.erl
  ((Module_comment (Comment %)) (Module_comment (Comment "% %CopyrightBegin%"))
    (Module_comment (Comment %))
    (Module_comment
      (Comment "% Copyright Ericsson AB 2010-2020. All Rights Reserved."))
    (Module_comment (Comment %))
    (Module_comment
      (Comment
        "% Licensed under the Apache License, Version 2.0 (the \"License\");"))
    (Module_comment
      (Comment
        "% you may not use this file except in compliance with the License."))
    (Module_comment (Comment "% You may obtain a copy of the License at"))
    (Module_comment (Comment %))
    (Module_comment
      (Comment "%     http://www.apache.org/licenses/LICENSE-2.0"))
    (Module_comment (Comment %))
    (Module_comment
      (Comment
        "% Unless required by applicable law or agreed to in writing, software"))
    (Module_comment
      (Comment
        "% distributed under the License is distributed on an \"AS IS\" BASIS,"))
    (Module_comment
      (Comment
        "% WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."))
    (Module_comment
      (Comment
        "% See the License for the specific language governing permissions and"))
    (Module_comment (Comment "% limitations under the License."))
    (Module_comment (Comment %)) (Module_comment (Comment "% %CopyrightEnd%"))
    (Module_comment (Comment %))
    (Module_attribute
      ((atr_name (Atom module))
        (atr_value (Expr_literal (Lit_atom (Atom binary))))))
    (Module_comment (Comment %))
    (Module_comment (Comment "% Implemented in this module:"))
    (Module_attribute
      ((atr_name (Atom export))
        (atr_value
          (Expr_list
            ((Expr_tuple
               ((Expr_literal (Lit_atom (Atom replace)))
                 (Expr_literal (Lit_integer 3))))
              (Expr_tuple
                ((Expr_literal (Lit_atom (Atom replace)))
                  (Expr_literal (Lit_integer 4)))))))))
    (Module_attribute
      ((atr_name (Atom export_type))
        (atr_value
          (Expr_list
            ((Expr_tuple
               ((Expr_literal (Lit_atom (Atom cp)))
                 (Expr_literal (Lit_integer 0)))))))))
    (Type_decl
      ((typ_expr
         (Type_tuple
           ((Type_variant
              ((Type_const (Lit_atom (Atom am)))
                (Type_const (Lit_atom (Atom bm)))))
             (Type_constr
               ((tc_name (Atom_name (Atom reference))) (tc_args ()))))))
        (typ_kind Opaque) (typ_name (Atom cp)) (typ_params ())))
    (Type_decl
      ((typ_expr
         (Type_tuple
           ((Type_constr
              ((tc_name (Atom_name (Atom non_neg_integer))) (tc_args ())))
             (Type_constr ((tc_name (Atom_name (Atom integer))) (tc_args ()))))))
        (typ_kind Type) (typ_name (Atom part)) (typ_params ())))
    (Module_comment (Comment "%% BIFs."))
    (Module_attribute
      ((atr_name (Atom export))
        (atr_value
          (Expr_list
            ((Expr_tuple
               ((Expr_literal (Lit_atom (Atom at)))
                 (Expr_literal (Lit_integer 2))))
              (Expr_tuple
                ((Expr_literal (Lit_atom (Atom bin_to_list)))
                  (Expr_literal (Lit_integer 1))))
              (Expr_tuple
                ((Expr_literal (Lit_atom (Atom bin_to_list)))
                  (Expr_literal (Lit_integer 2))))
              (Expr_tuple
                ((Expr_literal (Lit_atom (Atom bin_to_list)))
                  (Expr_literal (Lit_integer 3))))
              (Expr_tuple
                ((Expr_literal (Lit_atom (Atom compile_pattern)))
                  (Expr_literal (Lit_integer 1))))
              (Expr_tuple
                ((Expr_literal (Lit_atom (Atom copy)))
                  (Expr_literal (Lit_integer 1))))
              (Expr_tuple
                ((Expr_literal (Lit_atom (Atom copy)))
                  (Expr_literal (Lit_integer 2))))
              (Expr_tuple
                ((Expr_literal (Lit_atom (Atom decode_unsigned)))
                  (Expr_literal (Lit_integer 1))))
              (Expr_tuple
                ((Expr_literal (Lit_atom (Atom decode_unsigned)))
                  (Expr_literal (Lit_integer 2))))
              (Expr_tuple
                ((Expr_literal (Lit_atom (Atom encode_unsigned)))
                  (Expr_literal (Lit_integer 1))))
              (Expr_tuple
                ((Expr_literal (Lit_atom (Atom encode_unsigned)))
                  (Expr_literal (Lit_integer 2))))
              (Expr_tuple
                ((Expr_literal (Lit_atom (Atom first)))
                  (Expr_literal (Lit_integer 1))))
              (Expr_tuple
                ((Expr_literal (Lit_atom (Atom last)))
                  (Expr_literal (Lit_integer 1))))
              (Expr_tuple
                ((Expr_literal (Lit_atom (Atom list_to_bin)))
                  (Expr_literal (Lit_integer 1))))
              (Expr_tuple
                ((Expr_literal (Lit_atom (Atom longest_common_prefix)))
                  (Expr_literal (Lit_integer 1))))
              (Expr_tuple
                ((Expr_literal (Lit_atom (Atom longest_common_suffix)))
                  (Expr_literal (Lit_integer 1))))
              (Expr_tuple
                ((Expr_literal (Lit_atom (Atom match)))
                  (Expr_literal (Lit_integer 2))))
              (Expr_tuple
                ((Expr_literal (Lit_atom (Atom match)))
                  (Expr_literal (Lit_integer 3))))
              (Expr_tuple
                ((Expr_literal (Lit_atom (Atom matches)))
                  (Expr_literal (Lit_integer 2))))
              (Expr_tuple
                ((Expr_literal (Lit_atom (Atom matches)))
                  (Expr_literal (Lit_integer 3))))
              (Expr_tuple
                ((Expr_literal (Lit_atom (Atom part)))
                  (Expr_literal (Lit_integer 2))))
              (Expr_tuple
                ((Expr_literal (Lit_atom (Atom part)))
                  (Expr_literal (Lit_integer 3))))
              (Expr_tuple
                ((Expr_literal (Lit_atom (Atom referenced_byte_size)))
                  (Expr_literal (Lit_integer 1))))
              (Expr_tuple
                ((Expr_literal (Lit_atom (Atom split)))
                  (Expr_literal (Lit_integer 2))))
              (Expr_tuple
                ((Expr_literal (Lit_atom (Atom split)))
                  (Expr_literal (Lit_integer 3)))))))))
    (Type_decl
      ((typ_expr
         (Type_constr ((tc_name (Atom_name (Atom byte))) (tc_args ()))))
        (typ_kind Spec) (typ_name (Atom at))
        (typ_params
          ((Type_variable (Var_name Subject)) (Type_variable (Var_name Pos))))))
    (Function_decl
      ((fd_name (Atom at)) (fd_arity 2)
        (fd_cases
          (((c_lhs
              ((Pattern_binding (Var_name _)) (Pattern_binding (Var_name _))))
             (c_guard ())
             (c_rhs
               (Expr_apply
                 ((fa_name
                    (Expr_name
                      (Qualified_name (n_mod (Atom_name (Atom erlang)))
                        (n_name (Atom_name (Atom nif_error))))))
                   (fa_args ((Expr_literal (Lit_atom (Atom undef)))))))))))
        (fd_spec ())))
    (Type_decl
      ((typ_expr
         (Type_list
           (Type_constr ((tc_name (Atom_name (Atom byte))) (tc_args ())))))
        (typ_kind Spec) (typ_name (Atom bin_to_list))
        (typ_params ((Type_variable (Var_name Subject))))))
    (Function_decl
      ((fd_name (Atom bin_to_list)) (fd_arity 1)
        (fd_cases
          (((c_lhs ((Pattern_binding (Var_name Subject)))) (c_guard ())
             (c_rhs
               (Expr_apply
                 ((fa_name (Expr_name (Atom_name (Atom binary_to_list))))
                   (fa_args ((Expr_name (Var_name Subject))))))))))
        (fd_spec ())))
    (Type_decl
      ((typ_expr
         (Type_list
           (Type_constr ((tc_name (Atom_name (Atom byte))) (tc_args ())))))
        (typ_kind Spec) (typ_name (Atom bin_to_list))
        (typ_params
          ((Type_variable (Var_name Subject))
            (Type_variable (Var_name PosLen))))))
    (Function_decl
      ((fd_name (Atom bin_to_list)) (fd_arity 2)
        (fd_cases
          (((c_lhs
              ((Pattern_binding (Var_name Subject))
                (Pattern_tuple
                  ((Pattern_binding (Var_name Pos))
                    (Pattern_binding (Var_name Len))))))
             (c_guard ())
             (c_rhs
               (Expr_apply
                 ((fa_name (Expr_name (Atom_name (Atom bin_to_list))))
                   (fa_args
                     ((Expr_name (Var_name Subject)) (Expr_name (Var_name Pos))
                       (Expr_name (Var_name Len))))))))
            ((c_lhs
               ((Pattern_binding (Var_name _Subject))
                 (Pattern_binding (Var_name _BadArg))))
              (c_guard ())
              (c_rhs
                (Expr_apply
                  ((fa_name
                     (Expr_name
                       (Qualified_name (n_mod (Atom_name (Atom erlang)))
                         (n_name (Atom_name (Atom error))))))
                    (fa_args ((Expr_literal (Lit_atom (Atom badarg)))))))))))
        (fd_spec ())))
    (Type_decl
      ((typ_expr
         (Type_list
           (Type_constr ((tc_name (Atom_name (Atom byte))) (tc_args ())))))
        (typ_kind Spec) (typ_name (Atom bin_to_list))
        (typ_params
          ((Type_variable (Var_name Subject)) (Type_variable (Var_name Pos))
            (Type_variable (Var_name Len))))))
    (Function_decl
      ((fd_name (Atom bin_to_list)) (fd_arity 3)
        (fd_cases
          (((c_lhs
              ((Pattern_binding (Var_name Subject))
                (Pattern_binding (Var_name Pos))
                (Pattern_binding (Var_name Len))))
             (c_guard
               (((Expr_apply
                   ((fa_name
                      (Expr_name
                        (Qualified_name (n_mod (Atom_name (Atom erlang)))
                          (n_name (Atom_name (Atom not))))))
                     (fa_args
                       ((Expr_apply
                          ((fa_name (Expr_name (Atom_name (Atom is_binary))))
                            (fa_args ((Expr_name (Var_name Subject))))))))))
                  (Expr_apply
                    ((fa_name
                       (Expr_name
                         (Qualified_name (n_mod (Atom_name (Atom erlang)))
                           (n_name (Atom_name (Atom not))))))
                      (fa_args
                        ((Expr_apply
                           ((fa_name (Expr_name (Atom_name (Atom is_integer))))
                             (fa_args ((Expr_name (Var_name Pos))))))))))
                  (Expr_apply
                    ((fa_name
                       (Expr_name
                         (Qualified_name (n_mod (Atom_name (Atom erlang)))
                           (n_name (Atom_name (Atom not))))))
                      (fa_args
                        ((Expr_apply
                           ((fa_name (Expr_name (Atom_name (Atom is_integer))))
                             (fa_args ((Expr_name (Var_name Len)))))))))))))
             (c_rhs
               (Expr_comment
                 (Comment
                   "% binary_to_list/3 allows bitstrings as long as the slice fits, and we")
                 (Expr_comment
                   (Comment
                     "% want to badarg when Pos/Len aren't integers instead of raising badarith")
                   (Expr_comment
                     (Comment "% when adjusting args for binary_to_list/3.")
                     (Expr_apply
                       ((fa_name
                          (Expr_name
                            (Qualified_name (n_mod (Atom_name (Atom erlang)))
                              (n_name (Atom_name (Atom error))))))
                         (fa_args ((Expr_literal (Lit_atom (Atom badarg))))))))))))
            ((c_lhs
               ((Pattern_binding (Var_name Subject))
                 (Pattern_binding (Var_name Pos))
                 (Pattern_match (Lit_integer 0))))
              (c_guard
                (((Expr_apply
                    ((fa_name
                       (Expr_name
                         (Qualified_name (n_mod (Atom_name (Atom erlang)))
                           (n_name (Atom_name (Atom '>='))))))
                      (fa_args
                        ((Expr_name (Var_name Pos))
                          (Expr_literal (Lit_integer 0))))))
                   (Expr_apply
                     ((fa_name
                        (Expr_name
                          (Qualified_name (n_mod (Atom_name (Atom erlang)))
                            (n_name (Atom_name (Atom '=<'))))))
                       (fa_args
                         ((Expr_name (Var_name Pos))
                           (Expr_apply
                             ((fa_name
                                (Expr_name (Atom_name (Atom byte_size))))
                               (fa_args ((Expr_name (Var_name Subject)))))))))))))
              (c_rhs
                (Expr_comment
                  (Comment "% binary_to_list/3 doesn't handle this case.")
                  (Expr_list ()))))
            ((c_lhs
               ((Pattern_binding (Var_name _Subject))
                 (Pattern_binding (Var_name _Pos))
                 (Pattern_match (Lit_integer 0))))
              (c_guard ())
              (c_rhs
                (Expr_apply
                  ((fa_name
                     (Expr_name
                       (Qualified_name (n_mod (Atom_name (Atom erlang)))
                         (n_name (Atom_name (Atom error))))))
                    (fa_args ((Expr_literal (Lit_atom (Atom badarg)))))))))
            ((c_lhs
               ((Pattern_binding (Var_name Subject))
                 (Pattern_binding (Var_name Pos))
                 (Pattern_binding (Var_name Len))))
              (c_guard
                (((Expr_apply
                    ((fa_name
                       (Expr_name
                         (Qualified_name (n_mod (Atom_name (Atom erlang)))
                           (n_name (Atom_name (Atom '<'))))))
                      (fa_args
                        ((Expr_name (Var_name Len))
                          (Expr_literal (Lit_integer 0)))))))))
              (c_rhs
                (Expr_apply
                  ((fa_name (Expr_name (Atom_name (Atom bin_to_list))))
                    (fa_args
                      ((Expr_name (Var_name Subject))
                        (Expr_apply
                          ((fa_name
                             (Expr_name
                               (Qualified_name
                                 (n_mod (Atom_name (Atom erlang)))
                                 (n_name (Atom_name (Atom '+'))))))
                            (fa_args
                              ((Expr_name (Var_name Pos))
                                (Expr_name (Var_name Len))))))
                        (Expr_apply
                          ((fa_name
                             (Expr_name
                               (Qualified_name
                                 (n_mod (Atom_name (Atom erlang)))
                                 (n_name (Atom_name (Atom '-'))))))
                            (fa_args ((Expr_name (Var_name Len))))))))))))
            ((c_lhs
               ((Pattern_binding (Var_name Subject))
                 (Pattern_binding (Var_name Pos))
                 (Pattern_binding (Var_name Len))))
              (c_guard
                (((Expr_apply
                    ((fa_name
                       (Expr_name
                         (Qualified_name (n_mod (Atom_name (Atom erlang)))
                           (n_name (Atom_name (Atom '>'))))))
                      (fa_args
                        ((Expr_name (Var_name Len))
                          (Expr_literal (Lit_integer 0)))))))))
              (c_rhs
                (Expr_apply
                  ((fa_name (Expr_name (Atom_name (Atom binary_to_list))))
                    (fa_args
                      ((Expr_name (Var_name Subject))
                        (Expr_apply
                          ((fa_name
                             (Expr_name
                               (Qualified_name
                                 (n_mod (Atom_name (Atom erlang)))
                                 (n_name (Atom_name (Atom '+'))))))
                            (fa_args
                              ((Expr_name (Var_name Pos))
                                (Expr_literal (Lit_integer 1))))))
                        (Expr_apply
                          ((fa_name
                             (Expr_name
                               (Qualified_name
                                 (n_mod (Atom_name (Atom erlang)))
                                 (n_name (Atom_name (Atom '+'))))))
                            (fa_args
                              ((Expr_name (Var_name Pos))
                                (Expr_name (Var_name Len))))))))))))))
        (fd_spec ())))
    (Type_decl
      ((typ_expr (Type_constr ((tc_name (Atom_name (Atom cp))) (tc_args ()))))
        (typ_kind Spec) (typ_name (Atom compile_pattern))
        (typ_params ((Type_variable (Var_name Pattern))))))
    (Function_decl
      ((fd_name (Atom compile_pattern)) (fd_arity 1)
        (fd_cases
          (((c_lhs ((Pattern_binding (Var_name _)))) (c_guard ())
             (c_rhs
               (Expr_apply
                 ((fa_name
                    (Expr_name
                      (Qualified_name (n_mod (Atom_name (Atom erlang)))
                        (n_name (Atom_name (Atom nif_error))))))
                   (fa_args ((Expr_literal (Lit_atom (Atom undef)))))))))))
        (fd_spec ())))
    (Type_decl
      ((typ_expr
         (Type_constr ((tc_name (Atom_name (Atom binary))) (tc_args ()))))
        (typ_kind Spec) (typ_name (Atom copy))
        (typ_params ((Type_variable (Var_name Subject))))))
    (Function_decl
      ((fd_name (Atom copy)) (fd_arity 1)
        (fd_cases
          (((c_lhs ((Pattern_binding (Var_name _)))) (c_guard ())
             (c_rhs
               (Expr_apply
                 ((fa_name
                    (Expr_name
                      (Qualified_name (n_mod (Atom_name (Atom erlang)))
                        (n_name (Atom_name (Atom nif_error))))))
                   (fa_args ((Expr_literal (Lit_atom (Atom undef)))))))))))
        (fd_spec ())))
    (Type_decl
      ((typ_expr
         (Type_constr ((tc_name (Atom_name (Atom binary))) (tc_args ()))))
        (typ_kind Spec) (typ_name (Atom copy))
        (typ_params
          ((Type_variable (Var_name Subject)) (Type_variable (Var_name N))))))
    (Function_decl
      ((fd_name (Atom copy)) (fd_arity 2)
        (fd_cases
          (((c_lhs
              ((Pattern_binding (Var_name _)) (Pattern_binding (Var_name _))))
             (c_guard ())
             (c_rhs
               (Expr_apply
                 ((fa_name
                    (Expr_name
                      (Qualified_name (n_mod (Atom_name (Atom erlang)))
                        (n_name (Atom_name (Atom nif_error))))))
                   (fa_args ((Expr_literal (Lit_atom (Atom undef)))))))))))
        (fd_spec ())))
    (Type_decl
      ((typ_expr (Type_variable (Var_name Unsigned))) (typ_kind Spec)
        (typ_name (Atom decode_unsigned))
        (typ_params ((Type_variable (Var_name Subject))))))
    (Function_decl
      ((fd_name (Atom decode_unsigned)) (fd_arity 1)
        (fd_cases
          (((c_lhs ((Pattern_binding (Var_name _)))) (c_guard ())
             (c_rhs
               (Expr_apply
                 ((fa_name
                    (Expr_name
                      (Qualified_name (n_mod (Atom_name (Atom erlang)))
                        (n_name (Atom_name (Atom nif_error))))))
                   (fa_args ((Expr_literal (Lit_atom (Atom undef)))))))))))
        (fd_spec ())))
    (Type_decl
      ((typ_expr (Type_variable (Var_name Unsigned))) (typ_kind Spec)
        (typ_name (Atom decode_unsigned))
        (typ_params
          ((Type_variable (Var_name Subject))
            (Type_variable (Var_name Endianness))))))
    (Function_decl
      ((fd_name (Atom decode_unsigned)) (fd_arity 2)
        (fd_cases
          (((c_lhs
              ((Pattern_binding (Var_name _)) (Pattern_binding (Var_name _))))
             (c_guard ())
             (c_rhs
               (Expr_apply
                 ((fa_name
                    (Expr_name
                      (Qualified_name (n_mod (Atom_name (Atom erlang)))
                        (n_name (Atom_name (Atom nif_error))))))
                   (fa_args ((Expr_literal (Lit_atom (Atom undef)))))))))))
        (fd_spec ())))
    (Type_decl
      ((typ_expr
         (Type_constr ((tc_name (Atom_name (Atom binary))) (tc_args ()))))
        (typ_kind Spec) (typ_name (Atom encode_unsigned))
        (typ_params ((Type_variable (Var_name Unsigned))))))
    (Function_decl
      ((fd_name (Atom encode_unsigned)) (fd_arity 1)
        (fd_cases
          (((c_lhs ((Pattern_binding (Var_name _)))) (c_guard ())
             (c_rhs
               (Expr_apply
                 ((fa_name
                    (Expr_name
                      (Qualified_name (n_mod (Atom_name (Atom erlang)))
                        (n_name (Atom_name (Atom nif_error))))))
                   (fa_args ((Expr_literal (Lit_atom (Atom undef)))))))))))
        (fd_spec ())))
    (Type_decl
      ((typ_expr
         (Type_constr ((tc_name (Atom_name (Atom binary))) (tc_args ()))))
        (typ_kind Spec) (typ_name (Atom encode_unsigned))
        (typ_params
          ((Type_variable (Var_name Unsigned))
            (Type_variable (Var_name Endianness))))))
    (Function_decl
      ((fd_name (Atom encode_unsigned)) (fd_arity 2)
        (fd_cases
          (((c_lhs
              ((Pattern_binding (Var_name _)) (Pattern_binding (Var_name _))))
             (c_guard ())
             (c_rhs
               (Expr_apply
                 ((fa_name
                    (Expr_name
                      (Qualified_name (n_mod (Atom_name (Atom erlang)))
                        (n_name (Atom_name (Atom nif_error))))))
                   (fa_args ((Expr_literal (Lit_atom (Atom undef)))))))))))
        (fd_spec ())))
    (Type_decl
      ((typ_expr
         (Type_constr ((tc_name (Atom_name (Atom byte))) (tc_args ()))))
        (typ_kind Spec) (typ_name (Atom first))
        (typ_params ((Type_variable (Var_name Subject))))))
    (Function_decl
      ((fd_name (Atom first)) (fd_arity 1)
        (fd_cases
          (((c_lhs ((Pattern_binding (Var_name _)))) (c_guard ())
             (c_rhs
               (Expr_apply
                 ((fa_name
                    (Expr_name
                      (Qualified_name (n_mod (Atom_name (Atom erlang)))
                        (n_name (Atom_name (Atom nif_error))))))
                   (fa_args ((Expr_literal (Lit_atom (Atom undef)))))))))))
        (fd_spec ())))
    (Type_decl
      ((typ_expr
         (Type_constr ((tc_name (Atom_name (Atom byte))) (tc_args ()))))
        (typ_kind Spec) (typ_name (Atom last))
        (typ_params ((Type_variable (Var_name Subject))))))
    (Function_decl
      ((fd_name (Atom last)) (fd_arity 1)
        (fd_cases
          (((c_lhs ((Pattern_binding (Var_name _)))) (c_guard ())
             (c_rhs
               (Expr_apply
                 ((fa_name
                    (Expr_name
                      (Qualified_name (n_mod (Atom_name (Atom erlang)))
                        (n_name (Atom_name (Atom nif_error))))))
                   (fa_args ((Expr_literal (Lit_atom (Atom undef)))))))))))
        (fd_spec ())))
    (Type_decl
      ((typ_expr
         (Type_constr ((tc_name (Atom_name (Atom binary))) (tc_args ()))))
        (typ_kind Spec) (typ_name (Atom list_to_bin))
        (typ_params ((Type_variable (Var_name ByteList))))))
    (Function_decl
      ((fd_name (Atom list_to_bin)) (fd_arity 1)
        (fd_cases
          (((c_lhs ((Pattern_binding (Var_name _)))) (c_guard ())
             (c_rhs
               (Expr_apply
                 ((fa_name
                    (Expr_name
                      (Qualified_name (n_mod (Atom_name (Atom erlang)))
                        (n_name (Atom_name (Atom nif_error))))))
                   (fa_args ((Expr_literal (Lit_atom (Atom undef)))))))))))
        (fd_spec ())))
    (Type_decl
      ((typ_expr
         (Type_constr
           ((tc_name (Atom_name (Atom non_neg_integer))) (tc_args ()))))
        (typ_kind Spec) (typ_name (Atom longest_common_prefix))
        (typ_params ((Type_variable (Var_name Binaries))))))
    (Function_decl
      ((fd_name (Atom longest_common_prefix)) (fd_arity 1)
        (fd_cases
          (((c_lhs ((Pattern_binding (Var_name _)))) (c_guard ())
             (c_rhs
               (Expr_apply
                 ((fa_name
                    (Expr_name
                      (Qualified_name (n_mod (Atom_name (Atom erlang)))
                        (n_name (Atom_name (Atom nif_error))))))
                   (fa_args ((Expr_literal (Lit_atom (Atom undef)))))))))))
        (fd_spec ())))
    (Type_decl
      ((typ_expr
         (Type_constr
           ((tc_name (Atom_name (Atom non_neg_integer))) (tc_args ()))))
        (typ_kind Spec) (typ_name (Atom longest_common_suffix))
        (typ_params ((Type_variable (Var_name Binaries))))))
    (Function_decl
      ((fd_name (Atom longest_common_suffix)) (fd_arity 1)
        (fd_cases
          (((c_lhs ((Pattern_binding (Var_name _)))) (c_guard ())
             (c_rhs
               (Expr_apply
                 ((fa_name
                    (Expr_name
                      (Qualified_name (n_mod (Atom_name (Atom erlang)))
                        (n_name (Atom_name (Atom nif_error))))))
                   (fa_args ((Expr_literal (Lit_atom (Atom undef)))))))))))
        (fd_spec ())))
    (Type_decl
      ((typ_expr
         (Type_variant
           ((Type_variable (Var_name Found))
             (Type_const (Lit_atom (Atom nomatch))))))
        (typ_kind Spec) (typ_name (Atom match))
        (typ_params
          ((Type_variable (Var_name Subject))
            (Type_variable (Var_name Pattern))))))
    (Function_decl
      ((fd_name (Atom match)) (fd_arity 2)
        (fd_cases
          (((c_lhs
              ((Pattern_binding (Var_name _)) (Pattern_binding (Var_name _))))
             (c_guard ())
             (c_rhs
               (Expr_apply
                 ((fa_name
                    (Expr_name
                      (Qualified_name (n_mod (Atom_name (Atom erlang)))
                        (n_name (Atom_name (Atom nif_error))))))
                   (fa_args ((Expr_literal (Lit_atom (Atom undef)))))))))))
        (fd_spec ())))
    (Type_decl
      ((typ_expr
         (Type_variant
           ((Type_variable (Var_name Found))
             (Type_const (Lit_atom (Atom nomatch))))))
        (typ_kind Spec) (typ_name (Atom match))
        (typ_params
          ((Type_variable (Var_name Subject))
            (Type_variable (Var_name Pattern))
            (Type_variable (Var_name Options))))))
    (Function_decl
      ((fd_name (Atom match)) (fd_arity 3)
        (fd_cases
          (((c_lhs
              ((Pattern_binding (Var_name _)) (Pattern_binding (Var_name _))
                (Pattern_binding (Var_name _))))
             (c_guard ())
             (c_rhs
               (Expr_apply
                 ((fa_name
                    (Expr_name
                      (Qualified_name (n_mod (Atom_name (Atom erlang)))
                        (n_name (Atom_name (Atom nif_error))))))
                   (fa_args ((Expr_literal (Lit_atom (Atom undef)))))))))))
        (fd_spec ())))
    (Type_decl
      ((typ_expr (Type_variable (Var_name Found))) (typ_kind Spec)
        (typ_name (Atom matches))
        (typ_params
          ((Type_variable (Var_name Subject))
            (Type_variable (Var_name Pattern))))))
    (Function_decl
      ((fd_name (Atom matches)) (fd_arity 2)
        (fd_cases
          (((c_lhs
              ((Pattern_binding (Var_name _)) (Pattern_binding (Var_name _))))
             (c_guard ())
             (c_rhs
               (Expr_apply
                 ((fa_name
                    (Expr_name
                      (Qualified_name (n_mod (Atom_name (Atom erlang)))
                        (n_name (Atom_name (Atom nif_error))))))
                   (fa_args ((Expr_literal (Lit_atom (Atom undef)))))))))))
        (fd_spec ())))
    (Type_decl
      ((typ_expr (Type_variable (Var_name Found))) (typ_kind Spec)
        (typ_name (Atom matches))
        (typ_params
          ((Type_variable (Var_name Subject))
            (Type_variable (Var_name Pattern))
            (Type_variable (Var_name Options))))))
    (Function_decl
      ((fd_name (Atom matches)) (fd_arity 3)
        (fd_cases
          (((c_lhs
              ((Pattern_binding (Var_name _)) (Pattern_binding (Var_name _))
                (Pattern_binding (Var_name _))))
             (c_guard ())
             (c_rhs
               (Expr_apply
                 ((fa_name
                    (Expr_name
                      (Qualified_name (n_mod (Atom_name (Atom erlang)))
                        (n_name (Atom_name (Atom nif_error))))))
                   (fa_args ((Expr_literal (Lit_atom (Atom undef)))))))))))
        (fd_spec ())))
    (Type_decl
      ((typ_expr
         (Type_constr ((tc_name (Atom_name (Atom binary))) (tc_args ()))))
        (typ_kind Spec) (typ_name (Atom part))
        (typ_params
          ((Type_variable (Var_name Subject))
            (Type_variable (Var_name PosLen))))))
    (Function_decl
      ((fd_name (Atom part)) (fd_arity 2)
        (fd_cases
          (((c_lhs
              ((Pattern_binding (Var_name _)) (Pattern_binding (Var_name _))))
             (c_guard ())
             (c_rhs
               (Expr_apply
                 ((fa_name
                    (Expr_name
                      (Qualified_name (n_mod (Atom_name (Atom erlang)))
                        (n_name (Atom_name (Atom nif_error))))))
                   (fa_args ((Expr_literal (Lit_atom (Atom undef)))))))))))
        (fd_spec ())))
    (Type_decl
      ((typ_expr
         (Type_constr ((tc_name (Atom_name (Atom binary))) (tc_args ()))))
        (typ_kind Spec) (typ_name (Atom part))
        (typ_params
          ((Type_variable (Var_name Subject)) (Type_variable (Var_name Pos))
            (Type_variable (Var_name Len))))))
    (Function_decl
      ((fd_name (Atom part)) (fd_arity 3)
        (fd_cases
          (((c_lhs
              ((Pattern_binding (Var_name _)) (Pattern_binding (Var_name _))
                (Pattern_binding (Var_name _))))
             (c_guard ())
             (c_rhs
               (Expr_apply
                 ((fa_name
                    (Expr_name
                      (Qualified_name (n_mod (Atom_name (Atom erlang)))
                        (n_name (Atom_name (Atom nif_error))))))
                   (fa_args ((Expr_literal (Lit_atom (Atom undef)))))))))))
        (fd_spec ())))
    (Type_decl
      ((typ_expr
         (Type_constr
           ((tc_name (Atom_name (Atom non_neg_integer))) (tc_args ()))))
        (typ_kind Spec) (typ_name (Atom referenced_byte_size))
        (typ_params ((Type_variable (Var_name Binary))))))
    (Function_decl
      ((fd_name (Atom referenced_byte_size)) (fd_arity 1)
        (fd_cases
          (((c_lhs ((Pattern_binding (Var_name _)))) (c_guard ())
             (c_rhs
               (Expr_apply
                 ((fa_name
                    (Expr_name
                      (Qualified_name (n_mod (Atom_name (Atom erlang)))
                        (n_name (Atom_name (Atom nif_error))))))
                   (fa_args ((Expr_literal (Lit_atom (Atom undef)))))))))))
        (fd_spec ())))
    (Type_decl
      ((typ_expr (Type_variable (Var_name Parts))) (typ_kind Spec)
        (typ_name (Atom split))
        (typ_params
          ((Type_variable (Var_name Subject))
            (Type_variable (Var_name Pattern))))))
    (Function_decl
      ((fd_name (Atom split)) (fd_arity 2)
        (fd_cases
          (((c_lhs
              ((Pattern_binding (Var_name _)) (Pattern_binding (Var_name _))))
             (c_guard ())
             (c_rhs
               (Expr_apply
                 ((fa_name
                    (Expr_name
                      (Qualified_name (n_mod (Atom_name (Atom erlang)))
                        (n_name (Atom_name (Atom nif_error))))))
                   (fa_args ((Expr_literal (Lit_atom (Atom undef)))))))))))
        (fd_spec ())))
    (Type_decl
      ((typ_expr (Type_variable (Var_name Parts))) (typ_kind Spec)
        (typ_name (Atom split))
        (typ_params
          ((Type_variable (Var_name Subject))
            (Type_variable (Var_name Pattern))
            (Type_variable (Var_name Options))))))
    (Function_decl
      ((fd_name (Atom split)) (fd_arity 3)
        (fd_cases
          (((c_lhs
              ((Pattern_binding (Var_name _)) (Pattern_binding (Var_name _))
                (Pattern_binding (Var_name _))))
             (c_guard ())
             (c_rhs
               (Expr_apply
                 ((fa_name
                    (Expr_name
                      (Qualified_name (n_mod (Atom_name (Atom erlang)))
                        (n_name (Atom_name (Atom nif_error))))))
                   (fa_args ((Expr_literal (Lit_atom (Atom undef)))))))))))
        (fd_spec ())))
    (Module_comment (Comment "%% End of BIFs."))
    (Module_comment (Comment %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%))
    (Module_comment (Comment "% replace"))
    (Module_comment (Comment %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%))
    (Type_decl
      ((typ_expr (Type_variable (Var_name Result))) (typ_kind Spec)
        (typ_name (Atom replace))
        (typ_params
          ((Type_variable (Var_name Subject))
            (Type_variable (Var_name Pattern))
            (Type_variable (Var_name Replacement))))))
    (Function_decl
      ((fd_name (Atom replace)) (fd_arity 3)
        (fd_cases
          (((c_lhs
              ((Pattern_binding (Var_name H)) (Pattern_binding (Var_name N))
                (Pattern_binding (Var_name R))))
             (c_guard ())
             (c_rhs
               (Expr_apply
                 ((fa_name (Expr_name (Atom_name (Atom replace))))
                   (fa_args
                     ((Expr_name (Var_name H)) (Expr_name (Var_name N))
                       (Expr_name (Var_name R)) (Expr_list ())))))))))
        (fd_spec ())))
    (Type_decl
      ((typ_expr (Type_variable (Var_name Result))) (typ_kind Spec)
        (typ_name (Atom replace))
        (typ_params
          ((Type_variable (Var_name Subject))
            (Type_variable (Var_name Pattern))
            (Type_variable (Var_name Replacement))
            (Type_variable (Var_name Options))))))
    (Function_decl
      ((fd_name (Atom replace)) (fd_arity 4)
        (fd_cases
          (((c_lhs
              ((Pattern_binding (Var_name Haystack))
                (Pattern_binding (Var_name Needles))
                (Pattern_binding (Var_name Replacement))
                (Pattern_binding (Var_name Options))))
             (c_guard ())
             (c_rhs
               (Expr_try
                 ((try_expr
                    (Expr_let
                      ((lb_lhs (Pattern_match (Lit_atom (Atom true))))
                        (lb_rhs
                          (Expr_apply
                            ((fa_name (Expr_name (Atom_name (Atom is_binary))))
                              (fa_args ((Expr_name (Var_name Replacement))))))))
                      (Expr_comment
                        (Comment " Make badarg instead of function clause")
                        (Expr_let
                          ((lb_lhs
                             (Pattern_tuple
                               ((Pattern_binding (Var_name Part))
                                 (Pattern_binding (Var_name Global))
                                 (Pattern_binding (Var_name Insert)))))
                            (lb_rhs
                              (Expr_apply
                                ((fa_name
                                   (Expr_name
                                     (Atom_name (Atom get_opts_replace))))
                                  (fa_args
                                    ((Expr_name (Var_name Options))
                                      (Expr_tuple
                                        ((Expr_literal (Lit_atom (Atom no)))
                                          (Expr_literal
                                            (Lit_atom (Atom false)))
                                          (Expr_list ())))))))))
                          (Expr_let
                            ((lb_lhs (Pattern_binding (Var_name Moptlist)))
                              (lb_rhs
                                (Expr_case (Expr_name (Var_name Part))
                                  (((c_lhs
                                      ((Pattern_match (Lit_atom (Atom no)))))
                                     (c_guard ()) (c_rhs (Expr_list ())))
                                    ((c_lhs
                                       ((Pattern_tuple
                                          ((Pattern_binding (Var_name A))
                                            (Pattern_binding (Var_name B))))))
                                      (c_guard ())
                                      (c_rhs
                                        (Expr_list
                                          ((Expr_tuple
                                             ((Expr_literal
                                                (Lit_atom (Atom scope)))
                                               (Expr_tuple
                                                 ((Expr_name (Var_name A))
                                                   (Expr_name (Var_name B))))))))))))))
                            (Expr_let
                              ((lb_lhs (Pattern_binding (Var_name MList)))
                                (lb_rhs
                                  (Expr_if
                                    (((((Expr_name (Var_name Global))))
                                       (Expr_apply
                                         ((fa_name
                                            (Expr_name
                                              (Qualified_name
                                                (n_mod
                                                  (Atom_name (Atom binary)))
                                                (n_name
                                                  (Atom_name (Atom matches))))))
                                           (fa_args
                                             ((Expr_name (Var_name Haystack))
                                               (Expr_name (Var_name Needles))
                                               (Expr_name (Var_name Moptlist)))))))
                                      ((((Expr_literal (Lit_atom (Atom true)))))
                                        (Expr_case
                                          (Expr_apply
                                            ((fa_name
                                               (Expr_name
                                                 (Qualified_name
                                                   (n_mod
                                                     (Atom_name (Atom binary)))
                                                   (n_name
                                                     (Atom_name (Atom match))))))
                                              (fa_args
                                                ((Expr_name
                                                   (Var_name Haystack))
                                                  (Expr_name
                                                    (Var_name Needles))
                                                  (Expr_name
                                                    (Var_name Moptlist))))))
                                          (((c_lhs
                                              ((Pattern_match
                                                 (Lit_atom (Atom nomatch)))))
                                             (c_guard ())
                                             (c_rhs (Expr_list ())))
                                            ((c_lhs
                                               ((Pattern_binding
                                                  (Var_name Match))))
                                              (c_guard ())
                                              (c_rhs
                                                (Expr_list
                                                  ((Expr_name (Var_name Match)))))))))))))
                              (Expr_let
                                ((lb_lhs (Pattern_binding (Var_name ReplList)))
                                  (lb_rhs
                                    (Expr_case (Expr_name (Var_name Insert))
                                      (((c_lhs ((Pattern_list ())))
                                         (c_guard ())
                                         (c_rhs
                                           (Expr_name (Var_name Replacement))))
                                        ((c_lhs
                                           ((Pattern_binding (Var_name Y))))
                                          (c_guard
                                            (((Expr_apply
                                                ((fa_name
                                                   (Expr_name
                                                     (Atom_name
                                                       (Atom is_integer))))
                                                  (fa_args
                                                    ((Expr_name (Var_name Y)))))))))
                                          (c_rhs
                                            (Expr_apply
                                              ((fa_name
                                                 (Expr_name
                                                   (Atom_name (Atom splitat))))
                                                (fa_args
                                                  ((Expr_name
                                                     (Var_name Replacement))
                                                    (Expr_literal
                                                      (Lit_integer 0))
                                                    (Expr_list
                                                      ((Expr_name (Var_name Y))))))))))
                                        ((c_lhs
                                           ((Pattern_binding (Var_name Li))))
                                          (c_guard
                                            (((Expr_apply
                                                ((fa_name
                                                   (Expr_name
                                                     (Atom_name (Atom is_list))))
                                                  (fa_args
                                                    ((Expr_name (Var_name Li)))))))))
                                          (c_rhs
                                            (Expr_apply
                                              ((fa_name
                                                 (Expr_name
                                                   (Atom_name (Atom splitat))))
                                                (fa_args
                                                  ((Expr_name
                                                     (Var_name Replacement))
                                                    (Expr_literal
                                                      (Lit_integer 0))
                                                    (Expr_apply
                                                      ((fa_name
                                                         (Expr_name
                                                           (Qualified_name
                                                             (n_mod
                                                               (Atom_name
                                                                 (Atom lists)))
                                                             (n_name
                                                               (Atom_name
                                                                 (Atom sort))))))
                                                        (fa_args
                                                          ((Expr_name
                                                             (Var_name Li))))))))))))))))
                                (Expr_apply
                                  ((fa_name
                                     (Expr_name
                                       (Qualified_name
                                         (n_mod (Atom_name (Atom erlang)))
                                         (n_name
                                           (Atom_name (Atom iolist_to_binary))))))
                                    (fa_args
                                      ((Expr_apply
                                         ((fa_name
                                            (Expr_name
                                              (Atom_name (Atom do_replace))))
                                           (fa_args
                                             ((Expr_name (Var_name Haystack))
                                               (Expr_name (Var_name MList))
                                               (Expr_name (Var_name ReplList))
                                               (Expr_literal (Lit_integer 0)))))))))))))))))
                   (try_catch
                     ((((c_lhs
                          ((Pattern_catch ((Var_name _))
                             (Pattern_binding (Var_name _)) ())))
                         (c_guard ())
                         (c_rhs
                           (Expr_apply
                             ((fa_name
                                (Expr_name
                                  (Qualified_name
                                    (n_mod (Atom_name (Atom erlang)))
                                    (n_name (Atom_name (Atom error))))))
                               (fa_args
                                 ((Expr_literal (Lit_atom (Atom badarg))))))))))))
                   (try_after ())))))))
        (fd_spec ())))
    (Function_decl
      ((fd_name (Atom do_replace)) (fd_arity 4)
        (fd_cases
          (((c_lhs
              ((Pattern_binding (Var_name H)) (Pattern_list ())
                (Pattern_binding (Var_name _)) (Pattern_binding (Var_name N))))
             (c_guard ())
             (c_rhs
               (Expr_list
                 ((Expr_apply
                    ((fa_name
                       (Expr_name
                         (Qualified_name (n_mod (Atom_name (Atom binary)))
                           (n_name (Atom_name (Atom part))))))
                      (fa_args
                        ((Expr_name (Var_name H))
                          (Expr_tuple
                            ((Expr_name (Var_name N))
                              (Expr_apply
                                ((fa_name
                                   (Expr_name
                                     (Qualified_name
                                       (n_mod (Atom_name (Atom erlang)))
                                       (n_name (Atom_name (Atom '-'))))))
                                  (fa_args
                                    ((Expr_apply
                                       ((fa_name
                                          (Expr_name
                                            (Atom_name (Atom byte_size))))
                                         (fa_args ((Expr_name (Var_name H))))))
                                      (Expr_name (Var_name N))))))))))))))))
            ((c_lhs
               ((Pattern_binding (Var_name H))
                 (Pattern_cons
                   ((Pattern_tuple
                      ((Pattern_binding (Var_name A))
                        (Pattern_binding (Var_name B)))))
                   (Pattern_binding (Var_name T)))
                 (Pattern_binding (Var_name Replacement))
                 (Pattern_binding (Var_name N))))
              (c_guard ())
              (c_rhs
                (Expr_cons
                  ((Expr_apply
                     ((fa_name
                        (Expr_name
                          (Qualified_name (n_mod (Atom_name (Atom binary)))
                            (n_name (Atom_name (Atom part))))))
                       (fa_args
                         ((Expr_name (Var_name H))
                           (Expr_tuple
                             ((Expr_name (Var_name N))
                               (Expr_apply
                                 ((fa_name
                                    (Expr_name
                                      (Qualified_name
                                        (n_mod (Atom_name (Atom erlang)))
                                        (n_name (Atom_name (Atom '-'))))))
                                   (fa_args
                                     ((Expr_name (Var_name A))
                                       (Expr_name (Var_name N))))))))))))
                    (Expr_if
                      (((((Expr_apply
                            ((fa_name (Expr_name (Atom_name (Atom is_list))))
                              (fa_args ((Expr_name (Var_name Replacement))))))))
                         (Expr_apply
                           ((fa_name (Expr_name (Atom_name (Atom do_insert))))
                             (fa_args
                               ((Expr_name (Var_name Replacement))
                                 (Expr_apply
                                   ((fa_name
                                      (Expr_name
                                        (Qualified_name
                                          (n_mod (Atom_name (Atom binary)))
                                          (n_name (Atom_name (Atom part))))))
                                     (fa_args
                                       ((Expr_name (Var_name H))
                                         (Expr_tuple
                                           ((Expr_name (Var_name A))
                                             (Expr_name (Var_name B)))))))))))))
                        ((((Expr_literal (Lit_atom (Atom true)))))
                          (Expr_name (Var_name Replacement))))))
                  (Expr_apply
                    ((fa_name (Expr_name (Atom_name (Atom do_replace))))
                      (fa_args
                        ((Expr_name (Var_name H)) (Expr_name (Var_name T))
                          (Expr_name (Var_name Replacement))
                          (Expr_apply
                            ((fa_name
                               (Expr_name
                                 (Qualified_name
                                   (n_mod (Atom_name (Atom erlang)))
                                   (n_name (Atom_name (Atom '+'))))))
                              (fa_args
                                ((Expr_name (Var_name A))
                                  (Expr_name (Var_name B)))))))))))))))
        (fd_spec ())))
    (Function_decl
      ((fd_name (Atom do_insert)) (fd_arity 2)
        (fd_cases
          (((c_lhs
              ((Pattern_list ((Pattern_binding (Var_name X))))
                (Pattern_binding (Var_name _))))
             (c_guard ()) (c_rhs (Expr_list ((Expr_name (Var_name X))))))
            ((c_lhs
               ((Pattern_cons ((Pattern_binding (Var_name H)))
                  (Pattern_binding (Var_name T)))
                 (Pattern_binding (Var_name R))))
              (c_guard ())
              (c_rhs
                (Expr_cons ((Expr_name (Var_name H)) (Expr_name (Var_name R)))
                  (Expr_apply
                    ((fa_name (Expr_name (Atom_name (Atom do_insert))))
                      (fa_args
                        ((Expr_name (Var_name T)) (Expr_name (Var_name R)))))))))))
        (fd_spec ())))
    (Function_decl
      ((fd_name (Atom splitat)) (fd_arity 3)
        (fd_cases
          (((c_lhs
              ((Pattern_binding (Var_name H)) (Pattern_binding (Var_name N))
                (Pattern_list ())))
             (c_guard ())
             (c_rhs
               (Expr_list
                 ((Expr_apply
                    ((fa_name
                       (Expr_name
                         (Qualified_name (n_mod (Atom_name (Atom binary)))
                           (n_name (Atom_name (Atom part))))))
                      (fa_args
                        ((Expr_name (Var_name H))
                          (Expr_tuple
                            ((Expr_name (Var_name N))
                              (Expr_apply
                                ((fa_name
                                   (Expr_name
                                     (Qualified_name
                                       (n_mod (Atom_name (Atom erlang)))
                                       (n_name (Atom_name (Atom '-'))))))
                                  (fa_args
                                    ((Expr_apply
                                       ((fa_name
                                          (Expr_name
                                            (Atom_name (Atom byte_size))))
                                         (fa_args ((Expr_name (Var_name H))))))
                                      (Expr_name (Var_name N))))))))))))))))
            ((c_lhs
               ((Pattern_binding (Var_name H)) (Pattern_binding (Var_name N))
                 (Pattern_cons ((Pattern_binding (Var_name I)))
                   (Pattern_binding (Var_name T)))))
              (c_guard ())
              (c_rhs
                (Expr_cons
                  ((Expr_apply
                     ((fa_name
                        (Expr_name
                          (Qualified_name (n_mod (Atom_name (Atom binary)))
                            (n_name (Atom_name (Atom part))))))
                       (fa_args
                         ((Expr_name (Var_name H))
                           (Expr_tuple
                             ((Expr_name (Var_name N))
                               (Expr_apply
                                 ((fa_name
                                    (Expr_name
                                      (Qualified_name
                                        (n_mod (Atom_name (Atom erlang)))
                                        (n_name (Atom_name (Atom '-'))))))
                                   (fa_args
                                     ((Expr_name (Var_name I))
                                       (Expr_name (Var_name N)))))))))))))
                  (Expr_apply
                    ((fa_name (Expr_name (Atom_name (Atom splitat))))
                      (fa_args
                        ((Expr_name (Var_name H)) (Expr_name (Var_name I))
                          (Expr_name (Var_name T)))))))))))
        (fd_spec ())))
    (Module_comment (Comment %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%))
    (Module_comment (Comment "% Simple helper functions"))
    (Module_comment (Comment %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%))
    (Function_decl
      ((fd_name (Atom get_opts_replace)) (fd_arity 2)
        (fd_cases
          (((c_lhs
              ((Pattern_list ())
                (Pattern_tuple
                  ((Pattern_binding (Var_name Part))
                    (Pattern_binding (Var_name Global))
                    (Pattern_binding (Var_name Insert))))))
             (c_guard ())
             (c_rhs
               (Expr_tuple
                 ((Expr_name (Var_name Part)) (Expr_name (Var_name Global))
                   (Expr_name (Var_name Insert))))))
            ((c_lhs
               ((Pattern_cons
                  ((Pattern_tuple
                     ((Pattern_match (Lit_atom (Atom scope)))
                       (Pattern_tuple
                         ((Pattern_binding (Var_name A))
                           (Pattern_binding (Var_name B)))))))
                  (Pattern_binding (Var_name T)))
                 (Pattern_tuple
                   ((Pattern_binding (Var_name _Part))
                     (Pattern_binding (Var_name Global))
                     (Pattern_binding (Var_name Insert))))))
              (c_guard ())
              (c_rhs
                (Expr_apply
                  ((fa_name (Expr_name (Atom_name (Atom get_opts_replace))))
                    (fa_args
                      ((Expr_name (Var_name T))
                        (Expr_tuple
                          ((Expr_tuple
                             ((Expr_name (Var_name A))
                               (Expr_name (Var_name B))))
                            (Expr_name (Var_name Global))
                            (Expr_name (Var_name Insert))))))))))
            ((c_lhs
               ((Pattern_cons ((Pattern_match (Lit_atom (Atom global))))
                  (Pattern_binding (Var_name T)))
                 (Pattern_tuple
                   ((Pattern_binding (Var_name Part))
                     (Pattern_binding (Var_name _Global))
                     (Pattern_binding (Var_name Insert))))))
              (c_guard ())
              (c_rhs
                (Expr_apply
                  ((fa_name (Expr_name (Atom_name (Atom get_opts_replace))))
                    (fa_args
                      ((Expr_name (Var_name T))
                        (Expr_tuple
                          ((Expr_name (Var_name Part))
                            (Expr_literal (Lit_atom (Atom true)))
                            (Expr_name (Var_name Insert))))))))))
            ((c_lhs
               ((Pattern_cons
                  ((Pattern_tuple
                     ((Pattern_match (Lit_atom (Atom insert_replaced)))
                       (Pattern_binding (Var_name N)))))
                  (Pattern_binding (Var_name T)))
                 (Pattern_tuple
                   ((Pattern_binding (Var_name Part))
                     (Pattern_binding (Var_name Global))
                     (Pattern_binding (Var_name _Insert))))))
              (c_guard ())
              (c_rhs
                (Expr_apply
                  ((fa_name (Expr_name (Atom_name (Atom get_opts_replace))))
                    (fa_args
                      ((Expr_name (Var_name T))
                        (Expr_tuple
                          ((Expr_name (Var_name Part))
                            (Expr_name (Var_name Global))
                            (Expr_name (Var_name N))))))))))
            ((c_lhs
               ((Pattern_binding (Var_name _)) (Pattern_binding (Var_name _))))
              (c_guard ())
              (c_rhs
                (Expr_apply
                  ((fa_name
                     (Expr_name
                       (Qualified_name (n_mod (Atom_name (Atom erlang)))
                         (n_name (Atom_name (Atom throw))))))
                    (fa_args ((Expr_literal (Lit_atom (Atom badopt)))))))))))
        (fd_spec ()))))
  $ erldump parse lists.erl
  ((Module_comment (Comment %)) (Module_comment (Comment "% %CopyrightBegin%"))
    (Module_comment (Comment %))
    (Module_comment
      (Comment "% Copyright Ericsson AB 1996-2018. All Rights Reserved."))
    (Module_comment (Comment %))
    (Module_comment
      (Comment
        "% Licensed under the Apache License, Version 2.0 (the \"License\");"))
    (Module_comment
      (Comment
        "% you may not use this file except in compliance with the License."))
    (Module_comment (Comment "% You may obtain a copy of the License at"))
    (Module_comment (Comment %))
    (Module_comment
      (Comment "%     http://www.apache.org/licenses/LICENSE-2.0"))
    (Module_comment (Comment %))
    (Module_comment
      (Comment
        "% Unless required by applicable law or agreed to in writing, software"))
    (Module_comment
      (Comment
        "% distributed under the License is distributed on an \"AS IS\" BASIS,"))
    (Module_comment
      (Comment
        "% WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."))
    (Module_comment
      (Comment
        "% See the License for the specific language governing permissions and"))
    (Module_comment (Comment "% limitations under the License."))
    (Module_comment (Comment %)) (Module_comment (Comment "% %CopyrightEnd%"))
    (Module_comment (Comment %))
    (Module_attribute
      ((atr_name (Atom module))
        (atr_value (Expr_literal (Lit_atom (Atom lists))))))
    (Module_attribute
      ((atr_name (Atom compile))
        (atr_value
          (Expr_tuple
            ((Expr_literal (Lit_atom (Atom no_auto_import)))
              (Expr_list
                ((Expr_apply
                   ((fa_name
                      (Expr_name
                        (Qualified_name (n_mod (Atom_name (Atom erlang)))
                          (n_name (Atom_name (Atom '/'))))))
                     (fa_args
                       ((Expr_literal (Lit_atom (Atom max)))
                         (Expr_literal (Lit_integer 2)))))))))))))
    (Module_attribute
      ((atr_name (Atom compile))
        (atr_value
          (Expr_tuple
            ((Expr_literal (Lit_atom (Atom no_auto_import)))
              (Expr_list
                ((Expr_apply
                   ((fa_name
                      (Expr_name
                        (Qualified_name (n_mod (Atom_name (Atom erlang)))
                          (n_name (Atom_name (Atom '/'))))))
                     (fa_args
                       ((Expr_literal (Lit_atom (Atom min)))
                         (Expr_literal (Lit_integer 2)))))))))))))
    (Module_attribute
      ((atr_name (Atom export))
        (atr_value
          (Expr_list
            ((Expr_tuple
               ((Expr_literal (Lit_atom (Atom append)))
                 (Expr_literal (Lit_integer 2))))
              (Expr_tuple
                ((Expr_literal (Lit_atom (Atom append)))
                  (Expr_literal (Lit_integer 1))))
              (Expr_tuple
                ((Expr_literal (Lit_atom (Atom subtract)))
                  (Expr_literal (Lit_integer 2))))
              (Expr_tuple
                ((Expr_literal (Lit_atom (Atom reverse)))
                  (Expr_literal (Lit_integer 1))))
              (Expr_tuple
                ((Expr_literal (Lit_atom (Atom nth)))
                  (Expr_literal (Lit_integer 2))))
              (Expr_tuple
                ((Expr_literal (Lit_atom (Atom nthtail)))
                  (Expr_literal (Lit_integer 2))))
              (Expr_tuple
                ((Expr_literal (Lit_atom (Atom prefix)))
                  (Expr_literal (Lit_integer 2))))
              (Expr_tuple
                ((Expr_literal (Lit_atom (Atom suffix)))
                  (Expr_literal (Lit_integer 2))))
              (Expr_tuple
                ((Expr_literal (Lit_atom (Atom droplast)))
                  (Expr_literal (Lit_integer 1))))
              (Expr_tuple
                ((Expr_literal (Lit_atom (Atom last)))
                  (Expr_literal (Lit_integer 1))))
              (Expr_tuple
                ((Expr_literal (Lit_atom (Atom seq)))
                  (Expr_literal (Lit_integer 2))))
              (Expr_tuple
                ((Expr_literal (Lit_atom (Atom seq)))
                  (Expr_literal (Lit_integer 3))))
              (Expr_tuple
                ((Expr_literal (Lit_atom (Atom sum)))
                  (Expr_literal (Lit_integer 1))))
              (Expr_tuple
                ((Expr_literal (Lit_atom (Atom duplicate)))
                  (Expr_literal (Lit_integer 2))))
              (Expr_tuple
                ((Expr_literal (Lit_atom (Atom min)))
                  (Expr_literal (Lit_integer 1))))
              (Expr_tuple
                ((Expr_literal (Lit_atom (Atom max)))
                  (Expr_literal (Lit_integer 1))))
              (Expr_tuple
                ((Expr_literal (Lit_atom (Atom sublist)))
                  (Expr_literal (Lit_integer 2))))
              (Expr_tuple
                ((Expr_literal (Lit_atom (Atom sublist)))
                  (Expr_literal (Lit_integer 3))))
              (Expr_tuple
                ((Expr_literal (Lit_atom (Atom delete)))
                  (Expr_literal (Lit_integer 2))))
              (Expr_tuple
                ((Expr_literal (Lit_atom (Atom unzip)))
                  (Expr_literal (Lit_integer 1))))
              (Expr_tuple
                ((Expr_literal (Lit_atom (Atom unzip3)))
                  (Expr_literal (Lit_integer 1))))
              (Expr_tuple
                ((Expr_literal (Lit_atom (Atom zip)))
                  (Expr_literal (Lit_integer 2))))
              (Expr_tuple
                ((Expr_literal (Lit_atom (Atom zip3)))
                  (Expr_literal (Lit_integer 3))))
              (Expr_tuple
                ((Expr_literal (Lit_atom (Atom zipwith)))
                  (Expr_literal (Lit_integer 3))))
              (Expr_tuple
                ((Expr_literal (Lit_atom (Atom zipwith3)))
                  (Expr_literal (Lit_integer 4))))
              (Expr_tuple
                ((Expr_literal (Lit_atom (Atom sort)))
                  (Expr_literal (Lit_integer 1))))
              (Expr_tuple
                ((Expr_literal (Lit_atom (Atom merge)))
                  (Expr_literal (Lit_integer 1))))
              (Expr_tuple
                ((Expr_literal (Lit_atom (Atom merge)))
                  (Expr_literal (Lit_integer 2))))
              (Expr_tuple
                ((Expr_literal (Lit_atom (Atom rmerge)))
                  (Expr_literal (Lit_integer 2))))
              (Expr_tuple
                ((Expr_literal (Lit_atom (Atom merge3)))
                  (Expr_literal (Lit_integer 3))))
              (Expr_tuple
                ((Expr_literal (Lit_atom (Atom rmerge3)))
                  (Expr_literal (Lit_integer 3))))
              (Expr_tuple
                ((Expr_literal (Lit_atom (Atom usort)))
                  (Expr_literal (Lit_integer 1))))
              (Expr_tuple
                ((Expr_literal (Lit_atom (Atom umerge)))
                  (Expr_literal (Lit_integer 1))))
              (Expr_tuple
                ((Expr_literal (Lit_atom (Atom umerge3)))
                  (Expr_literal (Lit_integer 3))))
              (Expr_tuple
                ((Expr_literal (Lit_atom (Atom umerge)))
                  (Expr_literal (Lit_integer 2))))
              (Expr_tuple
                ((Expr_literal (Lit_atom (Atom rumerge3)))
                  (Expr_literal (Lit_integer 3))))
              (Expr_tuple
                ((Expr_literal (Lit_atom (Atom rumerge)))
                  (Expr_literal (Lit_integer 2))))
              (Expr_tuple
                ((Expr_literal (Lit_atom (Atom concat)))
                  (Expr_literal (Lit_integer 1))))
              (Expr_tuple
                ((Expr_literal (Lit_atom (Atom flatten)))
                  (Expr_literal (Lit_integer 1))))
              (Expr_tuple
                ((Expr_literal (Lit_atom (Atom flatten)))
                  (Expr_literal (Lit_integer 2))))
              (Expr_tuple
                ((Expr_literal (Lit_atom (Atom flatlength)))
                  (Expr_literal (Lit_integer 1))))
              (Expr_tuple
                ((Expr_literal (Lit_atom (Atom keydelete)))
                  (Expr_literal (Lit_integer 3))))
              (Expr_tuple
                ((Expr_literal (Lit_atom (Atom keyreplace)))
                  (Expr_literal (Lit_integer 4))))
              (Expr_tuple
                ((Expr_literal (Lit_atom (Atom keytake)))
                  (Expr_literal (Lit_integer 3))))
              (Expr_tuple
                ((Expr_literal (Lit_atom (Atom keystore)))
                  (Expr_literal (Lit_integer 4))))
              (Expr_tuple
                ((Expr_literal (Lit_atom (Atom keysort)))
                  (Expr_literal (Lit_integer 2))))
              (Expr_tuple
                ((Expr_literal (Lit_atom (Atom keymerge)))
                  (Expr_literal (Lit_integer 3))))
              (Expr_tuple
                ((Expr_literal (Lit_atom (Atom rkeymerge)))
                  (Expr_literal (Lit_integer 3))))
              (Expr_tuple
                ((Expr_literal (Lit_atom (Atom rukeymerge)))
                  (Expr_literal (Lit_integer 3))))
              (Expr_tuple
                ((Expr_literal (Lit_atom (Atom ukeysort)))
                  (Expr_literal (Lit_integer 2))))
              (Expr_tuple
                ((Expr_literal (Lit_atom (Atom ukeymerge)))
                  (Expr_literal (Lit_integer 3))))
              (Expr_tuple
                ((Expr_literal (Lit_atom (Atom keymap)))
                  (Expr_literal (Lit_integer 3)))))))))
    (Module_attribute
      ((atr_name (Atom export))
        (atr_value
          (Expr_list
            ((Expr_tuple
               ((Expr_literal (Lit_atom (Atom merge)))
                 (Expr_literal (Lit_integer 3))))
              (Expr_tuple
                ((Expr_literal (Lit_atom (Atom rmerge)))
                  (Expr_literal (Lit_integer 3))))
              (Expr_tuple
                ((Expr_literal (Lit_atom (Atom sort)))
                  (Expr_literal (Lit_integer 2))))
              (Expr_tuple
                ((Expr_literal (Lit_atom (Atom umerge)))
                  (Expr_literal (Lit_integer 3))))
              (Expr_tuple
                ((Expr_literal (Lit_atom (Atom rumerge)))
                  (Expr_literal (Lit_integer 3))))
              (Expr_tuple
                ((Expr_literal (Lit_atom (Atom usort)))
                  (Expr_literal (Lit_integer 2)))))))))
    (Module_attribute
      ((atr_name (Atom export))
        (atr_value
          (Expr_list
            ((Expr_tuple
               ((Expr_literal (Lit_atom (Atom all)))
                 (Expr_literal (Lit_integer 2))))
              (Expr_tuple
                ((Expr_literal (Lit_atom (Atom any)))
                  (Expr_literal (Lit_integer 2))))
              (Expr_tuple
                ((Expr_literal (Lit_atom (Atom map)))
                  (Expr_literal (Lit_integer 2))))
              (Expr_tuple
                ((Expr_literal (Lit_atom (Atom flatmap)))
                  (Expr_literal (Lit_integer 2))))
              (Expr_tuple
                ((Expr_literal (Lit_atom (Atom foldl)))
                  (Expr_literal (Lit_integer 3))))
              (Expr_tuple
                ((Expr_literal (Lit_atom (Atom foldr)))
                  (Expr_literal (Lit_integer 3))))
              (Expr_tuple
                ((Expr_literal (Lit_atom (Atom filter)))
                  (Expr_literal (Lit_integer 2))))
              (Expr_tuple
                ((Expr_literal (Lit_atom (Atom partition)))
                  (Expr_literal (Lit_integer 2))))
              (Expr_tuple
                ((Expr_literal (Lit_atom (Atom zf)))
                  (Expr_literal (Lit_integer 2))))
              (Expr_tuple
                ((Expr_literal (Lit_atom (Atom filtermap)))
                  (Expr_literal (Lit_integer 2))))
              (Expr_tuple
                ((Expr_literal (Lit_atom (Atom mapfoldl)))
                  (Expr_literal (Lit_integer 3))))
              (Expr_tuple
                ((Expr_literal (Lit_atom (Atom mapfoldr)))
                  (Expr_literal (Lit_integer 3))))
              (Expr_tuple
                ((Expr_literal (Lit_atom (Atom foreach)))
                  (Expr_literal (Lit_integer 2))))
              (Expr_tuple
                ((Expr_literal (Lit_atom (Atom takewhile)))
                  (Expr_literal (Lit_integer 2))))
              (Expr_tuple
                ((Expr_literal (Lit_atom (Atom dropwhile)))
                  (Expr_literal (Lit_integer 2))))
              (Expr_tuple
                ((Expr_literal (Lit_atom (Atom search)))
                  (Expr_literal (Lit_integer 2))))
              (Expr_tuple
                ((Expr_literal (Lit_atom (Atom splitwith)))
                  (Expr_literal (Lit_integer 2))))
              (Expr_tuple
                ((Expr_literal (Lit_atom (Atom split)))
                  (Expr_literal (Lit_integer 2))))
              (Expr_tuple
                ((Expr_literal (Lit_atom (Atom join)))
                  (Expr_literal (Lit_integer 2)))))))))
    (Module_comment (Comment "%% BIFs"))
    (Module_attribute
      ((atr_name (Atom export))
        (atr_value
          (Expr_list
            ((Expr_tuple
               ((Expr_literal (Lit_atom (Atom keyfind)))
                 (Expr_literal (Lit_integer 3))))
              (Expr_tuple
                ((Expr_literal (Lit_atom (Atom keymember)))
                  (Expr_literal (Lit_integer 3))))
              (Expr_tuple
                ((Expr_literal (Lit_atom (Atom keysearch)))
                  (Expr_literal (Lit_integer 3))))
              (Expr_tuple
                ((Expr_literal (Lit_atom (Atom member)))
                  (Expr_literal (Lit_integer 2))))
              (Expr_tuple
                ((Expr_literal (Lit_atom (Atom reverse)))
                  (Expr_literal (Lit_integer 2)))))))))
    (Module_comment (Comment "% Shadowed by erl_bif_types: lists:keyfind/3"))
    (Type_decl
      ((typ_expr
         (Type_variant
           ((Type_variable (Var_name Tuple))
             (Type_const (Lit_atom (Atom false))))))
        (typ_kind Spec) (typ_name (Atom keyfind))
        (typ_params
          ((Type_variable (Var_name Key)) (Type_variable (Var_name N))
            (Type_variable (Var_name TupleList))))))
    (Function_decl
      ((fd_name (Atom keyfind)) (fd_arity 3)
        (fd_cases
          (((c_lhs
              ((Pattern_binding (Var_name _)) (Pattern_binding (Var_name _))
                (Pattern_binding (Var_name _))))
             (c_guard ())
             (c_rhs
               (Expr_apply
                 ((fa_name
                    (Expr_name
                      (Qualified_name (n_mod (Atom_name (Atom erlang)))
                        (n_name (Atom_name (Atom nif_error))))))
                   (fa_args ((Expr_literal (Lit_atom (Atom undef)))))))))))
        (fd_spec ())))
    (Module_comment (Comment "% Shadowed by erl_bif_types: lists:keymember/3"))
    (Type_decl
      ((typ_expr
         (Type_constr ((tc_name (Atom_name (Atom boolean))) (tc_args ()))))
        (typ_kind Spec) (typ_name (Atom keymember))
        (typ_params
          ((Type_variable (Var_name Key)) (Type_variable (Var_name N))
            (Type_variable (Var_name TupleList))))))
    (Function_decl
      ((fd_name (Atom keymember)) (fd_arity 3)
        (fd_cases
          (((c_lhs
              ((Pattern_binding (Var_name _)) (Pattern_binding (Var_name _))
                (Pattern_binding (Var_name _))))
             (c_guard ())
             (c_rhs
               (Expr_apply
                 ((fa_name
                    (Expr_name
                      (Qualified_name (n_mod (Atom_name (Atom erlang)))
                        (n_name (Atom_name (Atom nif_error))))))
                   (fa_args ((Expr_literal (Lit_atom (Atom undef)))))))))))
        (fd_spec ())))
    (Module_comment (Comment "% Shadowed by erl_bif_types: lists:keysearch/3"))
    (Type_decl
      ((typ_expr
         (Type_variant
           ((Type_tuple
              ((Type_const (Lit_atom (Atom value)))
                (Type_variable (Var_name Tuple))))
             (Type_const (Lit_atom (Atom false))))))
        (typ_kind Spec) (typ_name (Atom keysearch))
        (typ_params
          ((Type_variable (Var_name Key)) (Type_variable (Var_name N))
            (Type_variable (Var_name TupleList))))))
    (Function_decl
      ((fd_name (Atom keysearch)) (fd_arity 3)
        (fd_cases
          (((c_lhs
              ((Pattern_binding (Var_name _)) (Pattern_binding (Var_name _))
                (Pattern_binding (Var_name _))))
             (c_guard ())
             (c_rhs
               (Expr_apply
                 ((fa_name
                    (Expr_name
                      (Qualified_name (n_mod (Atom_name (Atom erlang)))
                        (n_name (Atom_name (Atom nif_error))))))
                   (fa_args ((Expr_literal (Lit_atom (Atom undef)))))))))))
        (fd_spec ())))
    (Module_comment (Comment "% Shadowed by erl_bif_types: lists:member/2"))
    (Type_decl
      ((typ_expr
         (Type_constr ((tc_name (Atom_name (Atom boolean))) (tc_args ()))))
        (typ_kind Spec) (typ_name (Atom member))
        (typ_params
          ((Type_variable (Var_name Elem)) (Type_variable (Var_name List))))))
    (Function_decl
      ((fd_name (Atom member)) (fd_arity 2)
        (fd_cases
          (((c_lhs
              ((Pattern_binding (Var_name _)) (Pattern_binding (Var_name _))))
             (c_guard ())
             (c_rhs
               (Expr_apply
                 ((fa_name
                    (Expr_name
                      (Qualified_name (n_mod (Atom_name (Atom erlang)))
                        (n_name (Atom_name (Atom nif_error))))))
                   (fa_args ((Expr_literal (Lit_atom (Atom undef)))))))))))
        (fd_spec ())))
    (Module_comment (Comment "% Shadowed by erl_bif_types: lists:reverse/2"))
    (Type_decl
      ((typ_expr (Type_variable (Var_name List2))) (typ_kind Spec)
        (typ_name (Atom reverse))
        (typ_params
          ((Type_variable (Var_name List1)) (Type_variable (Var_name Tail))))))
    (Function_decl
      ((fd_name (Atom reverse)) (fd_arity 2)
        (fd_cases
          (((c_lhs
              ((Pattern_binding (Var_name _)) (Pattern_binding (Var_name _))))
             (c_guard ())
             (c_rhs
               (Expr_apply
                 ((fa_name
                    (Expr_name
                      (Qualified_name (n_mod (Atom_name (Atom erlang)))
                        (n_name (Atom_name (Atom nif_error))))))
                   (fa_args ((Expr_literal (Lit_atom (Atom undef)))))))))))
        (fd_spec ())))
    (Module_comment (Comment "%% End of BIFs"))
    (Module_comment (Comment "% member(X, L) -> (true | false)"))
    (Module_comment (Comment "%  test if X is a member of the list L"))
    (Module_comment (Comment "%  Now a BIF!"))
    (Module_comment (Comment "member(X, [X|_]) -> true;"))
    (Module_comment (Comment "member(X, [_|Y]) ->"))
    (Module_comment (Comment "\tmember(X, Y);"))
    (Module_comment (Comment "member(X, []) -> false."))
    (Module_comment (Comment "% append(X, Y) appends lists X and Y"))
    (Type_decl
      ((typ_expr (Type_variable (Var_name List3))) (typ_kind Spec)
        (typ_name (Atom append))
        (typ_params
          ((Type_variable (Var_name List1)) (Type_variable (Var_name List2))))))
    (Function_decl
      ((fd_name (Atom append)) (fd_arity 2)
        (fd_cases
          (((c_lhs
              ((Pattern_binding (Var_name L1)) (Pattern_binding (Var_name L2))))
             (c_guard ())
             (c_rhs
               (Expr_apply
                 ((fa_name
                    (Expr_name
                      (Qualified_name (n_mod (Atom_name (Atom erlang)))
                        (n_name (Atom_name (Atom '++'))))))
                   (fa_args
                     ((Expr_name (Var_name L1)) (Expr_name (Var_name L2))))))))))
        (fd_spec ())))
    (Module_comment (Comment "% append(L) appends the list of lists L"))
    (Type_decl
      ((typ_expr (Type_variable (Var_name List1))) (typ_kind Spec)
        (typ_name (Atom append))
        (typ_params ((Type_variable (Var_name ListOfLists))))))
    (Function_decl
      ((fd_name (Atom append)) (fd_arity 1)
        (fd_cases
          (((c_lhs ((Pattern_list ((Pattern_binding (Var_name E))))))
             (c_guard ()) (c_rhs (Expr_name (Var_name E))))
            ((c_lhs
               ((Pattern_cons ((Pattern_binding (Var_name H)))
                  (Pattern_binding (Var_name T)))))
              (c_guard ())
              (c_rhs
                (Expr_apply
                  ((fa_name
                     (Expr_name
                       (Qualified_name (n_mod (Atom_name (Atom erlang)))
                         (n_name (Atom_name (Atom '++'))))))
                    (fa_args
                      ((Expr_name (Var_name H))
                        (Expr_apply
                          ((fa_name (Expr_name (Atom_name (Atom append))))
                            (fa_args ((Expr_name (Var_name T))))))))))))
            ((c_lhs ((Pattern_list ()))) (c_guard ()) (c_rhs (Expr_list ())))))
        (fd_spec ())))
    (Module_comment
      (Comment
        "% subtract(List1, List2) subtract elements in List2 form List1."))
    (Type_decl
      ((typ_expr (Type_variable (Var_name List3))) (typ_kind Spec)
        (typ_name (Atom subtract))
        (typ_params
          ((Type_variable (Var_name List1)) (Type_variable (Var_name List2))))))
    (Function_decl
      ((fd_name (Atom subtract)) (fd_arity 2)
        (fd_cases
          (((c_lhs
              ((Pattern_binding (Var_name L1)) (Pattern_binding (Var_name L2))))
             (c_guard ())
             (c_rhs
               (Expr_apply
                 ((fa_name
                    (Expr_name
                      (Qualified_name (n_mod (Atom_name (Atom erlang)))
                        (n_name (Atom_name (Atom '--'))))))
                   (fa_args
                     ((Expr_name (Var_name L1)) (Expr_name (Var_name L2))))))))))
        (fd_spec ())))
    (Module_comment
      (Comment
        "% reverse(L) reverse all elements in the list L. reverse/2 is now a BIF!"))
    (Type_decl
      ((typ_expr (Type_variable (Var_name List2))) (typ_kind Spec)
        (typ_name (Atom reverse))
        (typ_params ((Type_variable (Var_name List1))))))
    (Function_decl
      ((fd_name (Atom reverse)) (fd_arity 1)
        (fd_cases
          (((c_lhs
              ((Pattern_with_name (Pattern_list ())
                 (Pattern_binding (Var_name L)))))
             (c_guard ()) (c_rhs (Expr_name (Var_name L))))
            ((c_lhs
               ((Pattern_with_name
                  (Pattern_list ((Pattern_binding (Var_name _))))
                  (Pattern_binding (Var_name L)))))
              (c_guard ()) (c_rhs (Expr_name (Var_name L))))
            ((c_lhs
               ((Pattern_list
                  ((Pattern_binding (Var_name A))
                    (Pattern_binding (Var_name B))))))
              (c_guard ())
              (c_rhs
                (Expr_list ((Expr_name (Var_name B)) (Expr_name (Var_name A))))))
            ((c_lhs
               ((Pattern_cons
                  ((Pattern_binding (Var_name A))
                    (Pattern_binding (Var_name B)))
                  (Pattern_binding (Var_name L)))))
              (c_guard ())
              (c_rhs
                (Expr_apply
                  ((fa_name
                     (Expr_name
                       (Qualified_name (n_mod (Atom_name (Atom lists)))
                         (n_name (Atom_name (Atom reverse))))))
                    (fa_args
                      ((Expr_name (Var_name L))
                        (Expr_list
                          ((Expr_name (Var_name B)) (Expr_name (Var_name A))))))))))))
        (fd_spec ())))
    (Module_comment (Comment "reverse([H|T], Y) ->"))
    (Module_comment (Comment "    reverse(T, [H|Y]);"))
    (Module_comment (Comment "reverse([], X) -> X."))
    (Module_comment
      (Comment "% nth(N, L) returns the N`th element of the list L"))
    (Module_comment
      (Comment "% nthtail(N, L) returns the N`th tail of the list L"))
    (Type_decl
      ((typ_expr (Type_variable (Var_name Elem))) (typ_kind Spec)
        (typ_name (Atom nth))
        (typ_params
          ((Type_variable (Var_name N)) (Type_variable (Var_name List))))))
    (Function_decl
      ((fd_name (Atom nth)) (fd_arity 2)
        (fd_cases
          (((c_lhs
              ((Pattern_match (Lit_integer 1))
                (Pattern_cons ((Pattern_binding (Var_name H)))
                  (Pattern_binding (Var_name _)))))
             (c_guard ()) (c_rhs (Expr_name (Var_name H))))
            ((c_lhs
               ((Pattern_binding (Var_name N))
                 (Pattern_cons ((Pattern_binding (Var_name _)))
                   (Pattern_binding (Var_name T)))))
              (c_guard
                (((Expr_apply
                    ((fa_name
                       (Expr_name
                         (Qualified_name (n_mod (Atom_name (Atom erlang)))
                           (n_name (Atom_name (Atom '>'))))))
                      (fa_args
                        ((Expr_name (Var_name N))
                          (Expr_literal (Lit_integer 1)))))))))
              (c_rhs
                (Expr_apply
                  ((fa_name (Expr_name (Atom_name (Atom nth))))
                    (fa_args
                      ((Expr_apply
                         ((fa_name
                            (Expr_name
                              (Qualified_name (n_mod (Atom_name (Atom erlang)))
                                (n_name (Atom_name (Atom '-'))))))
                           (fa_args
                             ((Expr_name (Var_name N))
                               (Expr_literal (Lit_integer 1))))))
                        (Expr_name (Var_name T))))))))))
        (fd_spec ())))
    (Type_decl
      ((typ_expr (Type_variable (Var_name Tail))) (typ_kind Spec)
        (typ_name (Atom nthtail))
        (typ_params
          ((Type_variable (Var_name N)) (Type_variable (Var_name List))))))
    (Function_decl
      ((fd_name (Atom nthtail)) (fd_arity 2)
        (fd_cases
          (((c_lhs
              ((Pattern_match (Lit_integer 1))
                (Pattern_cons ((Pattern_binding (Var_name _)))
                  (Pattern_binding (Var_name T)))))
             (c_guard ()) (c_rhs (Expr_name (Var_name T))))
            ((c_lhs
               ((Pattern_binding (Var_name N))
                 (Pattern_cons ((Pattern_binding (Var_name _)))
                   (Pattern_binding (Var_name T)))))
              (c_guard
                (((Expr_apply
                    ((fa_name
                       (Expr_name
                         (Qualified_name (n_mod (Atom_name (Atom erlang)))
                           (n_name (Atom_name (Atom '>'))))))
                      (fa_args
                        ((Expr_name (Var_name N))
                          (Expr_literal (Lit_integer 1)))))))))
              (c_rhs
                (Expr_apply
                  ((fa_name (Expr_name (Atom_name (Atom nthtail))))
                    (fa_args
                      ((Expr_apply
                         ((fa_name
                            (Expr_name
                              (Qualified_name (n_mod (Atom_name (Atom erlang)))
                                (n_name (Atom_name (Atom '-'))))))
                           (fa_args
                             ((Expr_name (Var_name N))
                               (Expr_literal (Lit_integer 1))))))
                        (Expr_name (Var_name T))))))))
            ((c_lhs
               ((Pattern_match (Lit_integer 0)) (Pattern_binding (Var_name L))))
              (c_guard
                (((Expr_apply
                    ((fa_name (Expr_name (Atom_name (Atom is_list))))
                      (fa_args ((Expr_name (Var_name L)))))))))
              (c_rhs (Expr_name (Var_name L))))))
        (fd_spec ())))
    (Module_comment (Comment "% prefix(Prefix, List) -> (true | false)"))
    (Type_decl
      ((typ_expr
         (Type_constr ((tc_name (Atom_name (Atom boolean))) (tc_args ()))))
        (typ_kind Spec) (typ_name (Atom prefix))
        (typ_params
          ((Type_variable (Var_name List1)) (Type_variable (Var_name List2))))))
    (Function_decl
      ((fd_name (Atom prefix)) (fd_arity 2)
        (fd_cases
          (((c_lhs
              ((Pattern_cons ((Pattern_binding (Var_name X)))
                 (Pattern_binding (Var_name PreTail)))
                (Pattern_cons ((Pattern_binding (Var_name X)))
                  (Pattern_binding (Var_name Tail)))))
             (c_guard ())
             (c_rhs
               (Expr_apply
                 ((fa_name (Expr_name (Atom_name (Atom prefix))))
                   (fa_args
                     ((Expr_name (Var_name PreTail))
                       (Expr_name (Var_name Tail))))))))
            ((c_lhs ((Pattern_list ()) (Pattern_binding (Var_name List))))
              (c_guard
                (((Expr_apply
                    ((fa_name (Expr_name (Atom_name (Atom is_list))))
                      (fa_args ((Expr_name (Var_name List)))))))))
              (c_rhs (Expr_literal (Lit_atom (Atom true)))))
            ((c_lhs
               ((Pattern_cons ((Pattern_binding (Var_name _)))
                  (Pattern_binding (Var_name _)))
                 (Pattern_binding (Var_name List))))
              (c_guard
                (((Expr_apply
                    ((fa_name (Expr_name (Atom_name (Atom is_list))))
                      (fa_args ((Expr_name (Var_name List)))))))))
              (c_rhs (Expr_literal (Lit_atom (Atom false)))))))
        (fd_spec ())))
    (Module_comment (Comment "% suffix(Suffix, List) -> (true | false)"))
    (Type_decl
      ((typ_expr
         (Type_constr ((tc_name (Atom_name (Atom boolean))) (tc_args ()))))
        (typ_kind Spec) (typ_name (Atom suffix))
        (typ_params
          ((Type_variable (Var_name List1)) (Type_variable (Var_name List2))))))
    (Function_decl
      ((fd_name (Atom suffix)) (fd_arity 2)
        (fd_cases
          (((c_lhs
              ((Pattern_binding (Var_name Suffix))
                (Pattern_binding (Var_name List))))
             (c_guard ())
             (c_rhs
               (Expr_let
                 ((lb_lhs (Pattern_binding (Var_name Delta)))
                   (lb_rhs
                     (Expr_apply
                       ((fa_name
                          (Expr_name
                            (Qualified_name (n_mod (Atom_name (Atom erlang)))
                              (n_name (Atom_name (Atom '-'))))))
                         (fa_args
                           ((Expr_apply
                              ((fa_name (Expr_name (Atom_name (Atom length))))
                                (fa_args ((Expr_name (Var_name List))))))
                             (Expr_apply
                               ((fa_name (Expr_name (Atom_name (Atom length))))
                                 (fa_args ((Expr_name (Var_name Suffix))))))))))))
                 (Expr_apply
                   ((fa_name
                      (Expr_name
                        (Qualified_name (n_mod (Atom_name (Atom erlang)))
                          (n_name (Atom_name (Atom '>='))))))
                     (fa_args
                       ((Expr_name (Var_name Delta))
                         (Expr_apply
                           ((fa_name
                              (Expr_name
                                (Qualified_name
                                  (n_mod (Atom_name (Atom erlang)))
                                  (n_name (Atom_name (Atom andalso))))))
                             (fa_args
                               ((Expr_literal (Lit_integer 0))
                                 (Expr_apply
                                   ((fa_name
                                      (Expr_name
                                        (Qualified_name
                                          (n_mod (Atom_name (Atom erlang)))
                                          (n_name (Atom_name (Atom '=:='))))))
                                     (fa_args
                                       ((Expr_apply
                                          ((fa_name
                                             (Expr_name
                                               (Atom_name (Atom nthtail))))
                                            (fa_args
                                              ((Expr_name (Var_name Delta))
                                                (Expr_name (Var_name List))))))
                                         (Expr_name (Var_name Suffix)))))))))))))))))))
        (fd_spec ())))
    (Module_comment
      (Comment "% droplast(List) returns the list dropping its last element"))
    (Type_decl
      ((typ_expr (Type_variable (Var_name InitList))) (typ_kind Spec)
        (typ_name (Atom droplast))
        (typ_params ((Type_variable (Var_name List))))))
    (Module_comment (Comment "% This is the simple recursive implementation"))
    (Module_comment
      (Comment "% reverse(tl(reverse(L))) is faster on average,"))
    (Module_comment (Comment "% but creates more garbage."))
    (Function_decl
      ((fd_name (Atom droplast)) (fd_arity 1)
        (fd_cases
          (((c_lhs ((Pattern_list ((Pattern_binding (Var_name _T))))))
             (c_guard ()) (c_rhs (Expr_list ())))
            ((c_lhs
               ((Pattern_cons ((Pattern_binding (Var_name H)))
                  (Pattern_binding (Var_name T)))))
              (c_guard ())
              (c_rhs
                (Expr_cons ((Expr_name (Var_name H)))
                  (Expr_apply
                    ((fa_name (Expr_name (Atom_name (Atom droplast))))
                      (fa_args ((Expr_name (Var_name T)))))))))))
        (fd_spec ())))
    (Module_comment
      (Comment "% last(List) returns the last element in a list."))
    (Type_decl
      ((typ_expr (Type_variable (Var_name Last))) (typ_kind Spec)
        (typ_name (Atom last)) (typ_params ((Type_variable (Var_name List))))))
    (Function_decl
      ((fd_name (Atom last)) (fd_arity 1)
        (fd_cases
          (((c_lhs
              ((Pattern_cons ((Pattern_binding (Var_name E)))
                 (Pattern_binding (Var_name Es)))))
             (c_guard ())
             (c_rhs
               (Expr_apply
                 ((fa_name (Expr_name (Atom_name (Atom last))))
                   (fa_args
                     ((Expr_name (Var_name E)) (Expr_name (Var_name Es))))))))))
        (fd_spec ())))
    (Function_decl
      ((fd_name (Atom last)) (fd_arity 2)
        (fd_cases
          (((c_lhs
              ((Pattern_binding (Var_name _))
                (Pattern_cons ((Pattern_binding (Var_name E)))
                  (Pattern_binding (Var_name Es)))))
             (c_guard ())
             (c_rhs
               (Expr_apply
                 ((fa_name (Expr_name (Atom_name (Atom last))))
                   (fa_args
                     ((Expr_name (Var_name E)) (Expr_name (Var_name Es))))))))
            ((c_lhs ((Pattern_binding (Var_name E)) (Pattern_list ())))
              (c_guard ()) (c_rhs (Expr_name (Var_name E))))))
        (fd_spec ())))
    (Module_comment (Comment "% seq(Min, Max) -> [Min,Min+1, ..., Max]"))
    (Module_comment
      (Comment "% seq(Min, Max, Incr) -> [Min,Min+Incr, ..., Max]"))
    (Module_comment (Comment "%  returns the sequence Min..Max"))
    (Module_comment (Comment "%  Min <= Max and Min and Max must be integers"))
    (Type_decl
      ((typ_expr (Type_variable (Var_name Seq))) (typ_kind Spec)
        (typ_name (Atom seq))
        (typ_params
          ((Type_variable (Var_name From)) (Type_variable (Var_name To))))))
    (Function_decl
      ((fd_name (Atom seq)) (fd_arity 2)
        (fd_cases
          (((c_lhs
              ((Pattern_binding (Var_name First))
                (Pattern_binding (Var_name Last))))
             (c_guard
               (((Expr_apply
                   ((fa_name (Expr_name (Atom_name (Atom is_integer))))
                     (fa_args ((Expr_name (Var_name First))))))
                  (Expr_apply
                    ((fa_name (Expr_name (Atom_name (Atom is_integer))))
                      (fa_args ((Expr_name (Var_name Last))))))
                  (Expr_apply
                    ((fa_name
                       (Expr_name
                         (Qualified_name (n_mod (Atom_name (Atom erlang)))
                           (n_name (Atom_name (Atom '-'))))))
                      (fa_args
                        ((Expr_name (Var_name First))
                          (Expr_apply
                            ((fa_name
                               (Expr_name
                                 (Qualified_name
                                   (n_mod (Atom_name (Atom erlang)))
                                   (n_name (Atom_name (Atom '=<'))))))
                              (fa_args
                                ((Expr_literal (Lit_integer 1))
                                  (Expr_name (Var_name Last)))))))))))))
             (c_rhs
               (Expr_apply
                 ((fa_name (Expr_name (Atom_name (Atom seq_loop))))
                   (fa_args
                     ((Expr_apply
                        ((fa_name
                           (Expr_name
                             (Qualified_name (n_mod (Atom_name (Atom erlang)))
                               (n_name (Atom_name (Atom '-'))))))
                          (fa_args
                            ((Expr_name (Var_name Last))
                              (Expr_apply
                                ((fa_name
                                   (Expr_name
                                     (Qualified_name
                                       (n_mod (Atom_name (Atom erlang)))
                                       (n_name (Atom_name (Atom '+'))))))
                                  (fa_args
                                    ((Expr_name (Var_name First))
                                      (Expr_literal (Lit_integer 1))))))))))
                       (Expr_name (Var_name Last)) (Expr_list ())))))))))
        (fd_spec ())))
    (Function_decl
      ((fd_name (Atom seq_loop)) (fd_arity 3)
        (fd_cases
          (((c_lhs
              ((Pattern_binding (Var_name N)) (Pattern_binding (Var_name X))
                (Pattern_binding (Var_name L))))
             (c_guard
               (((Expr_apply
                   ((fa_name
                      (Expr_name
                        (Qualified_name (n_mod (Atom_name (Atom erlang)))
                          (n_name (Atom_name (Atom '>='))))))
                     (fa_args
                       ((Expr_name (Var_name N))
                         (Expr_literal (Lit_integer 4)))))))))
             (c_rhs
               (Expr_apply
                 ((fa_name (Expr_name (Atom_name (Atom seq_loop))))
                   (fa_args
                     ((Expr_apply
                        ((fa_name
                           (Expr_name
                             (Qualified_name (n_mod (Atom_name (Atom erlang)))
                               (n_name (Atom_name (Atom '-'))))))
                          (fa_args
                            ((Expr_name (Var_name N))
                              (Expr_literal (Lit_integer 4))))))
                       (Expr_apply
                         ((fa_name
                            (Expr_name
                              (Qualified_name (n_mod (Atom_name (Atom erlang)))
                                (n_name (Atom_name (Atom '-'))))))
                           (fa_args
                             ((Expr_name (Var_name X))
                               (Expr_literal (Lit_integer 4))))))
                       (Expr_cons
                         ((Expr_apply
                            ((fa_name
                               (Expr_name
                                 (Qualified_name
                                   (n_mod (Atom_name (Atom erlang)))
                                   (n_name (Atom_name (Atom '-'))))))
                              (fa_args
                                ((Expr_name (Var_name X))
                                  (Expr_literal (Lit_integer 3))))))
                           (Expr_apply
                             ((fa_name
                                (Expr_name
                                  (Qualified_name
                                    (n_mod (Atom_name (Atom erlang)))
                                    (n_name (Atom_name (Atom '-'))))))
                               (fa_args
                                 ((Expr_name (Var_name X))
                                   (Expr_literal (Lit_integer 2))))))
                           (Expr_apply
                             ((fa_name
                                (Expr_name
                                  (Qualified_name
                                    (n_mod (Atom_name (Atom erlang)))
                                    (n_name (Atom_name (Atom '-'))))))
                               (fa_args
                                 ((Expr_name (Var_name X))
                                   (Expr_literal (Lit_integer 1))))))
                           (Expr_name (Var_name X)))
                         (Expr_name (Var_name L)))))))))
            ((c_lhs
               ((Pattern_binding (Var_name N)) (Pattern_binding (Var_name X))
                 (Pattern_binding (Var_name L))))
              (c_guard
                (((Expr_apply
                    ((fa_name
                       (Expr_name
                         (Qualified_name (n_mod (Atom_name (Atom erlang)))
                           (n_name (Atom_name (Atom '>='))))))
                      (fa_args
                        ((Expr_name (Var_name N))
                          (Expr_literal (Lit_integer 2)))))))))
              (c_rhs
                (Expr_apply
                  ((fa_name (Expr_name (Atom_name (Atom seq_loop))))
                    (fa_args
                      ((Expr_apply
                         ((fa_name
                            (Expr_name
                              (Qualified_name (n_mod (Atom_name (Atom erlang)))
                                (n_name (Atom_name (Atom '-'))))))
                           (fa_args
                             ((Expr_name (Var_name N))
                               (Expr_literal (Lit_integer 2))))))
                        (Expr_apply
                          ((fa_name
                             (Expr_name
                               (Qualified_name
                                 (n_mod (Atom_name (Atom erlang)))
                                 (n_name (Atom_name (Atom '-'))))))
                            (fa_args
                              ((Expr_name (Var_name X))
                                (Expr_literal (Lit_integer 2))))))
                        (Expr_cons
                          ((Expr_apply
                             ((fa_name
                                (Expr_name
                                  (Qualified_name
                                    (n_mod (Atom_name (Atom erlang)))
                                    (n_name (Atom_name (Atom '-'))))))
                               (fa_args
                                 ((Expr_name (Var_name X))
                                   (Expr_literal (Lit_integer 1))))))
                            (Expr_name (Var_name X)))
                          (Expr_name (Var_name L)))))))))
            ((c_lhs
               ((Pattern_match (Lit_integer 1)) (Pattern_binding (Var_name X))
                 (Pattern_binding (Var_name L))))
              (c_guard ())
              (c_rhs
                (Expr_cons ((Expr_name (Var_name X))) (Expr_name (Var_name L)))))
            ((c_lhs
               ((Pattern_match (Lit_integer 0)) (Pattern_binding (Var_name _))
                 (Pattern_binding (Var_name L))))
              (c_guard ()) (c_rhs (Expr_name (Var_name L))))))
        (fd_spec ())))
    (Type_decl
      ((typ_expr (Type_variable (Var_name Seq))) (typ_kind Spec)
        (typ_name (Atom seq))
        (typ_params
          ((Type_variable (Var_name From)) (Type_variable (Var_name To))
            (Type_variable (Var_name Incr))))))
    (Function_decl
      ((fd_name (Atom seq)) (fd_arity 3)
        (fd_cases
          (((c_lhs
              ((Pattern_binding (Var_name First))
                (Pattern_binding (Var_name Last))
                (Pattern_binding (Var_name Inc))))
             (c_guard
               (((Expr_apply
                   ((fa_name (Expr_name (Atom_name (Atom is_integer))))
                     (fa_args ((Expr_name (Var_name First))))))
                  (Expr_apply
                    ((fa_name (Expr_name (Atom_name (Atom is_integer))))
                      (fa_args ((Expr_name (Var_name Last))))))
                  (Expr_apply
                    ((fa_name (Expr_name (Atom_name (Atom is_integer))))
                      (fa_args ((Expr_name (Var_name Inc)))))))))
             (c_rhs
               (Expr_if
                 (((((Expr_apply
                       ((fa_name
                          (Expr_name
                            (Qualified_name (n_mod (Atom_name (Atom erlang)))
                              (n_name (Atom_name (Atom '>'))))))
                         (fa_args
                           ((Expr_name (Var_name Inc))
                             (Expr_literal (Lit_integer 0))))))
                      (Expr_apply
                        ((fa_name
                           (Expr_name
                             (Qualified_name (n_mod (Atom_name (Atom erlang)))
                               (n_name (Atom_name (Atom '-'))))))
                          (fa_args
                            ((Expr_name (Var_name First))
                              (Expr_apply
                                ((fa_name
                                   (Expr_name
                                     (Qualified_name
                                       (n_mod (Atom_name (Atom erlang)))
                                       (n_name (Atom_name (Atom '=<'))))))
                                  (fa_args
                                    ((Expr_name (Var_name Inc))
                                      (Expr_name (Var_name Last)))))))))))
                     ((Expr_apply
                        ((fa_name
                           (Expr_name
                             (Qualified_name (n_mod (Atom_name (Atom erlang)))
                               (n_name (Atom_name (Atom '<'))))))
                          (fa_args
                            ((Expr_name (Var_name Inc))
                              (Expr_literal (Lit_integer 0))))))
                       (Expr_apply
                         ((fa_name
                            (Expr_name
                              (Qualified_name (n_mod (Atom_name (Atom erlang)))
                                (n_name (Atom_name (Atom '-'))))))
                           (fa_args
                             ((Expr_name (Var_name First))
                               (Expr_apply
                                 ((fa_name
                                    (Expr_name
                                      (Qualified_name
                                        (n_mod (Atom_name (Atom erlang)))
                                        (n_name (Atom_name (Atom '>='))))))
                                   (fa_args
                                     ((Expr_name (Var_name Inc))
                                       (Expr_name (Var_name Last))))))))))))
                    (Expr_comment
                      (Comment
                        "% FIXME: the next 3 lines used to look like this:")
                      (Expr_comment
                        (Comment "%   N = (Last - First + Inc) div Inc,")
                        (Expr_comment
                          (Comment
                            "%   seq_loop(N, Inc*(N-1)+First, Inc, []);")
                          (Expr_comment
                            (Comment "% but parenthesizing doesn't work yet.")
                            (Expr_let
                              ((lb_lhs (Pattern_binding (Var_name N)))
                                (lb_rhs
                                  (Expr_apply
                                    ((fa_name
                                       (Expr_name
                                         (Qualified_name
                                           (n_mod (Atom_name (Atom erlang)))
                                           (n_name (Atom_name (Atom '-'))))))
                                      (fa_args
                                        ((Expr_name (Var_name Last))
                                          (Expr_apply
                                            ((fa_name
                                               (Expr_name
                                                 (Qualified_name
                                                   (n_mod
                                                     (Atom_name (Atom erlang)))
                                                   (n_name
                                                     (Atom_name (Atom '+'))))))
                                              (fa_args
                                                ((Expr_name (Var_name First))
                                                  (Expr_name (Var_name Inc))))))))))))
                              (Expr_let
                                ((lb_lhs (Pattern_binding (Var_name N2)))
                                  (lb_rhs
                                    (Expr_apply
                                      ((fa_name
                                         (Expr_name
                                           (Qualified_name
                                             (n_mod (Atom_name (Atom erlang)))
                                             (n_name (Atom_name (Atom div))))))
                                        (fa_args
                                          ((Expr_name (Var_name N))
                                            (Expr_name (Var_name Inc))))))))
                                (Expr_let
                                  ((lb_lhs (Pattern_binding (Var_name N3)))
                                    (lb_rhs
                                      (Expr_apply
                                        ((fa_name
                                           (Expr_name
                                             (Qualified_name
                                               (n_mod
                                                 (Atom_name (Atom erlang)))
                                               (n_name (Atom_name (Atom '-'))))))
                                          (fa_args
                                            ((Expr_name (Var_name N))
                                              (Expr_literal (Lit_integer 1))))))))
                                  (Expr_apply
                                    ((fa_name
                                       (Expr_name (Atom_name (Atom seq_loop))))
                                      (fa_args
                                        ((Expr_name (Var_name N))
                                          (Expr_apply
                                            ((fa_name
                                               (Expr_name
                                                 (Qualified_name
                                                   (n_mod
                                                     (Atom_name (Atom erlang)))
                                                   (n_name
                                                     (Atom_name (Atom '*'))))))
                                              (fa_args
                                                ((Expr_name (Var_name Inc))
                                                  (Expr_apply
                                                    ((fa_name
                                                       (Expr_name
                                                         (Qualified_name
                                                           (n_mod
                                                             (Atom_name
                                                               (Atom erlang)))
                                                           (n_name
                                                             (Atom_name
                                                               (Atom '+'))))))
                                                      (fa_args
                                                        ((Expr_name
                                                           (Var_name N3))
                                                          (Expr_name
                                                            (Var_name First))))))))))
                                          (Expr_name (Var_name Inc))
                                          (Expr_list ())))))))))))))
                   ((((Expr_apply
                        ((fa_name
                           (Expr_name
                             (Qualified_name (n_mod (Atom_name (Atom erlang)))
                               (n_name (Atom_name (Atom '=:='))))))
                          (fa_args
                            ((Expr_name (Var_name Inc))
                              (Expr_literal (Lit_integer 0))))))
                       (Expr_apply
                         ((fa_name
                            (Expr_name
                              (Qualified_name (n_mod (Atom_name (Atom erlang)))
                                (n_name (Atom_name (Atom '=:='))))))
                           (fa_args
                             ((Expr_name (Var_name First))
                               (Expr_name (Var_name Last))))))))
                     (Expr_apply
                       ((fa_name (Expr_name (Atom_name (Atom seq_loop))))
                         (fa_args
                           ((Expr_literal (Lit_integer 1))
                             (Expr_name (Var_name First))
                             (Expr_name (Var_name Inc)) (Expr_list ()))))))))))))
        (fd_spec ())))
    (Function_decl
      ((fd_name (Atom seq_loop)) (fd_arity 4)
        (fd_cases
          (((c_lhs
              ((Pattern_binding (Var_name N)) (Pattern_binding (Var_name X))
                (Pattern_binding (Var_name D)) (Pattern_binding (Var_name L))))
             (c_guard
               (((Expr_apply
                   ((fa_name
                      (Expr_name
                        (Qualified_name (n_mod (Atom_name (Atom erlang)))
                          (n_name (Atom_name (Atom '>='))))))
                     (fa_args
                       ((Expr_name (Var_name N))
                         (Expr_literal (Lit_integer 4)))))))))
             (c_rhs
               (Expr_let
                 ((lb_lhs (Pattern_binding (Var_name Y)))
                   (lb_rhs
                     (Expr_apply
                       ((fa_name
                          (Expr_name
                            (Qualified_name (n_mod (Atom_name (Atom erlang)))
                              (n_name (Atom_name (Atom '-'))))))
                         (fa_args
                           ((Expr_name (Var_name X)) (Expr_name (Var_name D))))))))
                 (Expr_let
                   ((lb_lhs (Pattern_binding (Var_name Z)))
                     (lb_rhs
                       (Expr_apply
                         ((fa_name
                            (Expr_name
                              (Qualified_name (n_mod (Atom_name (Atom erlang)))
                                (n_name (Atom_name (Atom '-'))))))
                           (fa_args
                             ((Expr_name (Var_name Y))
                               (Expr_name (Var_name D))))))))
                   (Expr_let
                     ((lb_lhs (Pattern_binding (Var_name W)))
                       (lb_rhs
                         (Expr_apply
                           ((fa_name
                              (Expr_name
                                (Qualified_name
                                  (n_mod (Atom_name (Atom erlang)))
                                  (n_name (Atom_name (Atom '-'))))))
                             (fa_args
                               ((Expr_name (Var_name Z))
                                 (Expr_name (Var_name D))))))))
                     (Expr_apply
                       ((fa_name (Expr_name (Atom_name (Atom seq_loop))))
                         (fa_args
                           ((Expr_apply
                              ((fa_name
                                 (Expr_name
                                   (Qualified_name
                                     (n_mod (Atom_name (Atom erlang)))
                                     (n_name (Atom_name (Atom '-'))))))
                                (fa_args
                                  ((Expr_name (Var_name N))
                                    (Expr_literal (Lit_integer 4))))))
                             (Expr_apply
                               ((fa_name
                                  (Expr_name
                                    (Qualified_name
                                      (n_mod (Atom_name (Atom erlang)))
                                      (n_name (Atom_name (Atom '-'))))))
                                 (fa_args
                                   ((Expr_name (Var_name W))
                                     (Expr_name (Var_name D))))))
                             (Expr_name (Var_name D))
                             (Expr_cons
                               ((Expr_name (Var_name W))
                                 (Expr_name (Var_name Z))
                                 (Expr_name (Var_name Y))
                                 (Expr_name (Var_name X)))
                               (Expr_name (Var_name L))))))))))))
            ((c_lhs
               ((Pattern_binding (Var_name N)) (Pattern_binding (Var_name X))
                 (Pattern_binding (Var_name D)) (Pattern_binding (Var_name L))))
              (c_guard
                (((Expr_apply
                    ((fa_name
                       (Expr_name
                         (Qualified_name (n_mod (Atom_name (Atom erlang)))
                           (n_name (Atom_name (Atom '>='))))))
                      (fa_args
                        ((Expr_name (Var_name N))
                          (Expr_literal (Lit_integer 2)))))))))
              (c_rhs
                (Expr_let
                  ((lb_lhs (Pattern_binding (Var_name Y)))
                    (lb_rhs
                      (Expr_apply
                        ((fa_name
                           (Expr_name
                             (Qualified_name (n_mod (Atom_name (Atom erlang)))
                               (n_name (Atom_name (Atom '-'))))))
                          (fa_args
                            ((Expr_name (Var_name X)) (Expr_name (Var_name D))))))))
                  (Expr_apply
                    ((fa_name (Expr_name (Atom_name (Atom seq_loop))))
                      (fa_args
                        ((Expr_apply
                           ((fa_name
                              (Expr_name
                                (Qualified_name
                                  (n_mod (Atom_name (Atom erlang)))
                                  (n_name (Atom_name (Atom '-'))))))
                             (fa_args
                               ((Expr_name (Var_name N))
                                 (Expr_literal (Lit_integer 2))))))
                          (Expr_apply
                            ((fa_name
                               (Expr_name
                                 (Qualified_name
                                   (n_mod (Atom_name (Atom erlang)))
                                   (n_name (Atom_name (Atom '-'))))))
                              (fa_args
                                ((Expr_name (Var_name Y))
                                  (Expr_name (Var_name D))))))
                          (Expr_name (Var_name D))
                          (Expr_cons
                            ((Expr_name (Var_name Y)) (Expr_name (Var_name X)))
                            (Expr_name (Var_name L))))))))))
            ((c_lhs
               ((Pattern_match (Lit_integer 1)) (Pattern_binding (Var_name X))
                 (Pattern_binding (Var_name _)) (Pattern_binding (Var_name L))))
              (c_guard ())
              (c_rhs
                (Expr_cons ((Expr_name (Var_name X))) (Expr_name (Var_name L)))))
            ((c_lhs
               ((Pattern_match (Lit_integer 0)) (Pattern_binding (Var_name _))
                 (Pattern_binding (Var_name _)) (Pattern_binding (Var_name L))))
              (c_guard ()) (c_rhs (Expr_name (Var_name L))))))
        (fd_spec ())))
    (Module_comment (Comment "% sum(L) returns the sum of the elements in L"))
    (Type_decl
      ((typ_expr
         (Type_constr ((tc_name (Atom_name (Atom number))) (tc_args ()))))
        (typ_kind Spec) (typ_name (Atom sum))
        (typ_params ((Type_variable (Var_name List))))))
    (Function_decl
      ((fd_name (Atom sum)) (fd_arity 1)
        (fd_cases
          (((c_lhs ((Pattern_binding (Var_name L)))) (c_guard ())
             (c_rhs
               (Expr_apply
                 ((fa_name (Expr_name (Atom_name (Atom sum))))
                   (fa_args
                     ((Expr_name (Var_name L)) (Expr_literal (Lit_integer 0))))))))))
        (fd_spec ())))
    (Function_decl
      ((fd_name (Atom sum)) (fd_arity 2)
        (fd_cases
          (((c_lhs
              ((Pattern_cons ((Pattern_binding (Var_name H)))
                 (Pattern_binding (Var_name T)))
                (Pattern_binding (Var_name Sum))))
             (c_guard ())
             (c_rhs
               (Expr_apply
                 ((fa_name (Expr_name (Atom_name (Atom sum))))
                   (fa_args
                     ((Expr_name (Var_name T))
                       (Expr_apply
                         ((fa_name
                            (Expr_name
                              (Qualified_name (n_mod (Atom_name (Atom erlang)))
                                (n_name (Atom_name (Atom '+'))))))
                           (fa_args
                             ((Expr_name (Var_name Sum))
                               (Expr_name (Var_name H))))))))))))
            ((c_lhs ((Pattern_list ()) (Pattern_binding (Var_name Sum))))
              (c_guard ()) (c_rhs (Expr_name (Var_name Sum))))))
        (fd_spec ())))
    (Module_comment
      (Comment "% duplicate(N, X) -> [X,X,X,.....,X]  (N times)"))
    (Module_comment (Comment "%   return N copies of X"))
    (Type_decl
      ((typ_expr (Type_variable (Var_name List))) (typ_kind Spec)
        (typ_name (Atom duplicate))
        (typ_params
          ((Type_variable (Var_name N)) (Type_variable (Var_name Elem))))))
    (Function_decl
      ((fd_name (Atom duplicate)) (fd_arity 2)
        (fd_cases
          (((c_lhs
              ((Pattern_binding (Var_name N)) (Pattern_binding (Var_name X))))
             (c_guard
               (((Expr_apply
                   ((fa_name (Expr_name (Atom_name (Atom is_integer))))
                     (fa_args ((Expr_name (Var_name N))))))
                  (Expr_apply
                    ((fa_name
                       (Expr_name
                         (Qualified_name (n_mod (Atom_name (Atom erlang)))
                           (n_name (Atom_name (Atom '>='))))))
                      (fa_args
                        ((Expr_name (Var_name N))
                          (Expr_literal (Lit_integer 0)))))))))
             (c_rhs
               (Expr_apply
                 ((fa_name (Expr_name (Atom_name (Atom duplicate))))
                   (fa_args
                     ((Expr_name (Var_name N)) (Expr_name (Var_name X))
                       (Expr_list ())))))))))
        (fd_spec ())))
    (Function_decl
      ((fd_name (Atom duplicate)) (fd_arity 3)
        (fd_cases
          (((c_lhs
              ((Pattern_match (Lit_integer 0)) (Pattern_binding (Var_name _))
                (Pattern_binding (Var_name L))))
             (c_guard ()) (c_rhs (Expr_name (Var_name L))))
            ((c_lhs
               ((Pattern_binding (Var_name N)) (Pattern_binding (Var_name X))
                 (Pattern_binding (Var_name L))))
              (c_guard ())
              (c_rhs
                (Expr_apply
                  ((fa_name (Expr_name (Atom_name (Atom duplicate))))
                    (fa_args
                      ((Expr_apply
                         ((fa_name
                            (Expr_name
                              (Qualified_name (n_mod (Atom_name (Atom erlang)))
                                (n_name (Atom_name (Atom '-'))))))
                           (fa_args
                             ((Expr_name (Var_name N))
                               (Expr_literal (Lit_integer 1))))))
                        (Expr_name (Var_name X))
                        (Expr_cons ((Expr_name (Var_name X)))
                          (Expr_name (Var_name L)))))))))))
        (fd_spec ())))
    (Module_comment
      (Comment "% min(L) -> returns the minimum element of the list L"))
    (Type_decl
      ((typ_expr (Type_variable (Var_name Min))) (typ_kind Spec)
        (typ_name (Atom min)) (typ_params ((Type_variable (Var_name List))))))
    (Function_decl
      ((fd_name (Atom min)) (fd_arity 1)
        (fd_cases
          (((c_lhs
              ((Pattern_cons ((Pattern_binding (Var_name H)))
                 (Pattern_binding (Var_name T)))))
             (c_guard ())
             (c_rhs
               (Expr_apply
                 ((fa_name (Expr_name (Atom_name (Atom min))))
                   (fa_args
                     ((Expr_name (Var_name T)) (Expr_name (Var_name H))))))))))
        (fd_spec ())))
    (Function_decl
      ((fd_name (Atom min)) (fd_arity 2)
        (fd_cases
          (((c_lhs
              ((Pattern_cons ((Pattern_binding (Var_name H)))
                 (Pattern_binding (Var_name T)))
                (Pattern_binding (Var_name Min))))
             (c_guard
               (((Expr_apply
                   ((fa_name
                      (Expr_name
                        (Qualified_name (n_mod (Atom_name (Atom erlang)))
                          (n_name (Atom_name (Atom '<'))))))
                     (fa_args
                       ((Expr_name (Var_name H)) (Expr_name (Var_name Min)))))))))
             (c_rhs
               (Expr_apply
                 ((fa_name (Expr_name (Atom_name (Atom min))))
                   (fa_args
                     ((Expr_name (Var_name T)) (Expr_name (Var_name H))))))))
            ((c_lhs
               ((Pattern_cons ((Pattern_binding (Var_name _)))
                  (Pattern_binding (Var_name T)))
                 (Pattern_binding (Var_name Min))))
              (c_guard ())
              (c_rhs
                (Expr_apply
                  ((fa_name (Expr_name (Atom_name (Atom min))))
                    (fa_args
                      ((Expr_name (Var_name T)) (Expr_name (Var_name Min))))))))
            ((c_lhs ((Pattern_list ()) (Pattern_binding (Var_name Min))))
              (c_guard ()) (c_rhs (Expr_name (Var_name Min))))))
        (fd_spec ())))
    (Module_comment
      (Comment "% max(L) -> returns the maximum element of the list L"))
    (Type_decl
      ((typ_expr (Type_variable (Var_name Max))) (typ_kind Spec)
        (typ_name (Atom max)) (typ_params ((Type_variable (Var_name List))))))
    (Function_decl
      ((fd_name (Atom max)) (fd_arity 1)
        (fd_cases
          (((c_lhs
              ((Pattern_cons ((Pattern_binding (Var_name H)))
                 (Pattern_binding (Var_name T)))))
             (c_guard ())
             (c_rhs
               (Expr_apply
                 ((fa_name (Expr_name (Atom_name (Atom max))))
                   (fa_args
                     ((Expr_name (Var_name T)) (Expr_name (Var_name H))))))))))
        (fd_spec ())))
    (Function_decl
      ((fd_name (Atom max)) (fd_arity 2)
        (fd_cases
          (((c_lhs
              ((Pattern_cons ((Pattern_binding (Var_name H)))
                 (Pattern_binding (Var_name T)))
                (Pattern_binding (Var_name Max))))
             (c_guard
               (((Expr_apply
                   ((fa_name
                      (Expr_name
                        (Qualified_name (n_mod (Atom_name (Atom erlang)))
                          (n_name (Atom_name (Atom '>'))))))
                     (fa_args
                       ((Expr_name (Var_name H)) (Expr_name (Var_name Max)))))))))
             (c_rhs
               (Expr_apply
                 ((fa_name (Expr_name (Atom_name (Atom max))))
                   (fa_args
                     ((Expr_name (Var_name T)) (Expr_name (Var_name H))))))))
            ((c_lhs
               ((Pattern_cons ((Pattern_binding (Var_name _)))
                  (Pattern_binding (Var_name T)))
                 (Pattern_binding (Var_name Max))))
              (c_guard ())
              (c_rhs
                (Expr_apply
                  ((fa_name (Expr_name (Atom_name (Atom max))))
                    (fa_args
                      ((Expr_name (Var_name T)) (Expr_name (Var_name Max))))))))
            ((c_lhs ((Pattern_list ()) (Pattern_binding (Var_name Max))))
              (c_guard ()) (c_rhs (Expr_name (Var_name Max))))))
        (fd_spec ())))
    (Module_comment (Comment "% sublist(List, Start, Length)"))
    (Module_comment
      (Comment "%  Returns the sub-list starting at Start of length Length."))
    (Type_decl
      ((typ_expr (Type_variable (Var_name List2))) (typ_kind Spec)
        (typ_name (Atom sublist))
        (typ_params
          ((Type_variable (Var_name List1)) (Type_variable (Var_name Start))
            (Type_variable (Var_name Len))))))
    (Function_decl
      ((fd_name (Atom sublist)) (fd_arity 3)
        (fd_cases
          (((c_lhs
              ((Pattern_binding (Var_name List)) (Pattern_binding (Var_name S))
                (Pattern_binding (Var_name L))))
             (c_guard
               (((Expr_apply
                   ((fa_name (Expr_name (Atom_name (Atom is_integer))))
                     (fa_args ((Expr_name (Var_name L))))))
                  (Expr_apply
                    ((fa_name
                       (Expr_name
                         (Qualified_name (n_mod (Atom_name (Atom erlang)))
                           (n_name (Atom_name (Atom '>='))))))
                      (fa_args
                        ((Expr_name (Var_name L))
                          (Expr_literal (Lit_integer 0)))))))))
             (c_rhs
               (Expr_apply
                 ((fa_name (Expr_name (Atom_name (Atom sublist))))
                   (fa_args
                     ((Expr_apply
                        ((fa_name (Expr_name (Atom_name (Atom nthtail))))
                          (fa_args
                            ((Expr_apply
                               ((fa_name
                                  (Expr_name
                                    (Qualified_name
                                      (n_mod (Atom_name (Atom erlang)))
                                      (n_name (Atom_name (Atom '-'))))))
                                 (fa_args
                                   ((Expr_name (Var_name S))
                                     (Expr_literal (Lit_integer 1))))))
                              (Expr_name (Var_name List))))))
                       (Expr_name (Var_name L))))))))))
        (fd_spec ())))
    (Type_decl
      ((typ_expr (Type_variable (Var_name List2))) (typ_kind Spec)
        (typ_name (Atom sublist))
        (typ_params
          ((Type_variable (Var_name List1)) (Type_variable (Var_name Len))))))
    (Function_decl
      ((fd_name (Atom sublist)) (fd_arity 2)
        (fd_cases
          (((c_lhs
              ((Pattern_binding (Var_name List))
                (Pattern_binding (Var_name L))))
             (c_guard
               (((Expr_apply
                   ((fa_name (Expr_name (Atom_name (Atom is_integer))))
                     (fa_args ((Expr_name (Var_name L))))))
                  (Expr_apply
                    ((fa_name (Expr_name (Atom_name (Atom is_list))))
                      (fa_args ((Expr_name (Var_name List)))))))))
             (c_rhs
               (Expr_apply
                 ((fa_name (Expr_name (Atom_name (Atom sublist_2))))
                   (fa_args
                     ((Expr_name (Var_name List)) (Expr_name (Var_name L))))))))))
        (fd_spec ())))
    (Function_decl
      ((fd_name (Atom sublist_2)) (fd_arity 2)
        (fd_cases
          (((c_lhs
              ((Pattern_cons ((Pattern_binding (Var_name H)))
                 (Pattern_binding (Var_name T)))
                (Pattern_binding (Var_name L))))
             (c_guard
               (((Expr_apply
                   ((fa_name
                      (Expr_name
                        (Qualified_name (n_mod (Atom_name (Atom erlang)))
                          (n_name (Atom_name (Atom '>'))))))
                     (fa_args
                       ((Expr_name (Var_name L))
                         (Expr_literal (Lit_integer 0)))))))))
             (c_rhs
               (Expr_cons ((Expr_name (Var_name H)))
                 (Expr_apply
                   ((fa_name (Expr_name (Atom_name (Atom sublist_2))))
                     (fa_args
                       ((Expr_name (Var_name T))
                         (Expr_apply
                           ((fa_name
                              (Expr_name
                                (Qualified_name
                                  (n_mod (Atom_name (Atom erlang)))
                                  (n_name (Atom_name (Atom '-'))))))
                             (fa_args
                               ((Expr_name (Var_name L))
                                 (Expr_literal (Lit_integer 1)))))))))))))
            ((c_lhs
               ((Pattern_binding (Var_name _)) (Pattern_match (Lit_integer 0))))
              (c_guard ()) (c_rhs (Expr_list ())))
            ((c_lhs
               ((Pattern_binding (Var_name List))
                 (Pattern_binding (Var_name L))))
              (c_guard
                (((Expr_apply
                    ((fa_name (Expr_name (Atom_name (Atom is_list))))
                      (fa_args ((Expr_name (Var_name List))))))
                   (Expr_apply
                     ((fa_name
                        (Expr_name
                          (Qualified_name (n_mod (Atom_name (Atom erlang)))
                            (n_name (Atom_name (Atom '>'))))))
                       (fa_args
                         ((Expr_name (Var_name L))
                           (Expr_literal (Lit_integer 0)))))))))
              (c_rhs (Expr_list ())))))
        (fd_spec ())))
    (Module_comment (Comment "% delete(Item, List) -> List'"))
    (Module_comment
      (Comment "%  Delete the first occurrence of Item from the list L."))
    (Type_decl
      ((typ_expr (Type_variable (Var_name List2))) (typ_kind Spec)
        (typ_name (Atom delete))
        (typ_params
          ((Type_variable (Var_name Elem)) (Type_variable (Var_name List1))))))
    (Function_decl
      ((fd_name (Atom delete)) (fd_arity 2)
        (fd_cases
          (((c_lhs
              ((Pattern_binding (Var_name Item))
                (Pattern_cons ((Pattern_binding (Var_name Item)))
                  (Pattern_binding (Var_name Rest)))))
             (c_guard ()) (c_rhs (Expr_name (Var_name Rest))))
            ((c_lhs
               ((Pattern_binding (Var_name Item))
                 (Pattern_cons ((Pattern_binding (Var_name H)))
                   (Pattern_binding (Var_name Rest)))))
              (c_guard ())
              (c_rhs
                (Expr_cons ((Expr_name (Var_name H)))
                  (Expr_apply
                    ((fa_name (Expr_name (Atom_name (Atom delete))))
                      (fa_args
                        ((Expr_name (Var_name Item))
                          (Expr_name (Var_name Rest)))))))))
            ((c_lhs ((Pattern_binding (Var_name _)) (Pattern_list ())))
              (c_guard ()) (c_rhs (Expr_list ())))))
        (fd_spec ())))
    (Module_comment
      (Comment
        "% Return [{X0, Y0}, {X1, Y1}, ..., {Xn, Yn}] for lists [X0, X1, ...,"))
    (Module_comment (Comment "% Xn] and [Y0, Y1, ..., Yn]."))
    (Type_decl
      ((typ_expr (Type_variable (Var_name List3))) (typ_kind Spec)
        (typ_name (Atom zip))
        (typ_params
          ((Type_variable (Var_name List1)) (Type_variable (Var_name List2))))))
    (Function_decl
      ((fd_name (Atom zip)) (fd_arity 2)
        (fd_cases
          (((c_lhs
              ((Pattern_cons ((Pattern_binding (Var_name X)))
                 (Pattern_binding (Var_name Xs)))
                (Pattern_cons ((Pattern_binding (Var_name Y)))
                  (Pattern_binding (Var_name Ys)))))
             (c_guard ())
             (c_rhs
               (Expr_cons
                 ((Expr_tuple
                    ((Expr_name (Var_name X)) (Expr_name (Var_name Y)))))
                 (Expr_apply
                   ((fa_name (Expr_name (Atom_name (Atom zip))))
                     (fa_args
                       ((Expr_name (Var_name Xs)) (Expr_name (Var_name Ys)))))))))
            ((c_lhs ((Pattern_list ()) (Pattern_list ()))) (c_guard ())
              (c_rhs (Expr_list ())))))
        (fd_spec ())))
    (Module_comment
      (Comment
        "% Return {[X0, X1, ..., Xn], [Y0, Y1, ..., Yn]}, for a list [{X0, Y0},"))
    (Module_comment (Comment "% {X1, Y1}, ..., {Xn, Yn}]."))
    (Type_decl
      ((typ_expr
         (Type_tuple
           ((Type_variable (Var_name List2)) (Type_variable (Var_name List3)))))
        (typ_kind Spec) (typ_name (Atom unzip))
        (typ_params ((Type_variable (Var_name List1))))))
    (Function_decl
      ((fd_name (Atom unzip)) (fd_arity 1)
        (fd_cases
          (((c_lhs ((Pattern_binding (Var_name Ts)))) (c_guard ())
             (c_rhs
               (Expr_apply
                 ((fa_name (Expr_name (Atom_name (Atom unzip))))
                   (fa_args
                     ((Expr_name (Var_name Ts)) (Expr_list ()) (Expr_list ())))))))))
        (fd_spec ())))
    (Function_decl
      ((fd_name (Atom unzip)) (fd_arity 3)
        (fd_cases
          (((c_lhs
              ((Pattern_cons
                 ((Pattern_tuple
                    ((Pattern_binding (Var_name X))
                      (Pattern_binding (Var_name Y)))))
                 (Pattern_binding (Var_name Ts)))
                (Pattern_binding (Var_name Xs))
                (Pattern_binding (Var_name Ys))))
             (c_guard ())
             (c_rhs
               (Expr_apply
                 ((fa_name (Expr_name (Atom_name (Atom unzip))))
                   (fa_args
                     ((Expr_name (Var_name Ts))
                       (Expr_cons ((Expr_name (Var_name X)))
                         (Expr_name (Var_name Xs)))
                       (Expr_cons ((Expr_name (Var_name Y)))
                         (Expr_name (Var_name Ys)))))))))
            ((c_lhs
               ((Pattern_list ()) (Pattern_binding (Var_name Xs))
                 (Pattern_binding (Var_name Ys))))
              (c_guard ())
              (c_rhs
                (Expr_tuple
                  ((Expr_apply
                     ((fa_name (Expr_name (Atom_name (Atom reverse))))
                       (fa_args ((Expr_name (Var_name Xs))))))
                    (Expr_apply
                      ((fa_name (Expr_name (Atom_name (Atom reverse))))
                        (fa_args ((Expr_name (Var_name Ys))))))))))))
        (fd_spec ())))
    (Module_comment
      (Comment
        "% Return [{X0, Y0, Z0}, {X1, Y1, Z1}, ..., {Xn, Yn, Zn}] for lists [X0,"))
    (Module_comment
      (Comment "% X1, ..., Xn], [Y0, Y1, ..., Yn] and [Z0, Z1, ..., Zn]."))
    (Type_decl
      ((typ_expr (Type_variable (Var_name List4))) (typ_kind Spec)
        (typ_name (Atom zip3))
        (typ_params
          ((Type_variable (Var_name List1)) (Type_variable (Var_name List2))
            (Type_variable (Var_name List3))))))
    (Function_decl
      ((fd_name (Atom zip3)) (fd_arity 3)
        (fd_cases
          (((c_lhs
              ((Pattern_cons ((Pattern_binding (Var_name X)))
                 (Pattern_binding (Var_name Xs)))
                (Pattern_cons ((Pattern_binding (Var_name Y)))
                  (Pattern_binding (Var_name Ys)))
                (Pattern_cons ((Pattern_binding (Var_name Z)))
                  (Pattern_binding (Var_name Zs)))))
             (c_guard ())
             (c_rhs
               (Expr_cons
                 ((Expr_tuple
                    ((Expr_name (Var_name X)) (Expr_name (Var_name Y))
                      (Expr_name (Var_name Z)))))
                 (Expr_apply
                   ((fa_name (Expr_name (Atom_name (Atom zip3))))
                     (fa_args
                       ((Expr_name (Var_name Xs)) (Expr_name (Var_name Ys))
                         (Expr_name (Var_name Zs)))))))))
            ((c_lhs ((Pattern_list ()) (Pattern_list ()) (Pattern_list ())))
              (c_guard ()) (c_rhs (Expr_list ())))))
        (fd_spec ())))
    (Module_comment
      (Comment
        "% Return {[X0, X1, ..., Xn], [Y0, Y1, ..., Yn], [Z0, Z1, ..., Zn]}, for"))
    (Module_comment
      (Comment "% a list [{X0, Y0, Z0}, {X1, Y1, Z1}, ..., {Xn, Yn, Zn}]."))
    (Type_decl
      ((typ_expr
         (Type_tuple
           ((Type_variable (Var_name List2)) (Type_variable (Var_name List3))
             (Type_variable (Var_name List4)))))
        (typ_kind Spec) (typ_name (Atom unzip3))
        (typ_params ((Type_variable (Var_name List1))))))
    (Function_decl
      ((fd_name (Atom unzip3)) (fd_arity 1)
        (fd_cases
          (((c_lhs ((Pattern_binding (Var_name Ts)))) (c_guard ())
             (c_rhs
               (Expr_apply
                 ((fa_name (Expr_name (Atom_name (Atom unzip3))))
                   (fa_args
                     ((Expr_name (Var_name Ts)) (Expr_list ()) (Expr_list ())
                       (Expr_list ())))))))))
        (fd_spec ())))
    (Function_decl
      ((fd_name (Atom unzip3)) (fd_arity 4)
        (fd_cases
          (((c_lhs
              ((Pattern_cons
                 ((Pattern_tuple
                    ((Pattern_binding (Var_name X))
                      (Pattern_binding (Var_name Y))
                      (Pattern_binding (Var_name Z)))))
                 (Pattern_binding (Var_name Ts)))
                (Pattern_binding (Var_name Xs)) (Pattern_binding (Var_name Ys))
                (Pattern_binding (Var_name Zs))))
             (c_guard ())
             (c_rhs
               (Expr_apply
                 ((fa_name (Expr_name (Atom_name (Atom unzip3))))
                   (fa_args
                     ((Expr_name (Var_name Ts))
                       (Expr_cons ((Expr_name (Var_name X)))
                         (Expr_name (Var_name Xs)))
                       (Expr_cons ((Expr_name (Var_name Y)))
                         (Expr_name (Var_name Ys)))
                       (Expr_cons ((Expr_name (Var_name Z)))
                         (Expr_name (Var_name Zs)))))))))
            ((c_lhs
               ((Pattern_list ()) (Pattern_binding (Var_name Xs))
                 (Pattern_binding (Var_name Ys))
                 (Pattern_binding (Var_name Zs))))
              (c_guard ())
              (c_rhs
                (Expr_tuple
                  ((Expr_apply
                     ((fa_name (Expr_name (Atom_name (Atom reverse))))
                       (fa_args ((Expr_name (Var_name Xs))))))
                    (Expr_apply
                      ((fa_name (Expr_name (Atom_name (Atom reverse))))
                        (fa_args ((Expr_name (Var_name Ys))))))
                    (Expr_apply
                      ((fa_name (Expr_name (Atom_name (Atom reverse))))
                        (fa_args ((Expr_name (Var_name Zs))))))))))))
        (fd_spec ())))
    (Module_comment
      (Comment
        "% Return [F(X0, Y0), F(X1, Y1), ..., F(Xn, Yn)] for lists [X0, X1, ...,"))
    (Module_comment (Comment "% Xn] and [Y0, Y1, ..., Yn]."))
    (Type_decl
      ((typ_expr (Type_variable (Var_name List3))) (typ_kind Spec)
        (typ_name (Atom zipwith))
        (typ_params
          ((Type_variable (Var_name Combine)) (Type_variable (Var_name List1))
            (Type_variable (Var_name List2))))))
    (Function_decl
      ((fd_name (Atom zipwith)) (fd_arity 3)
        (fd_cases
          (((c_lhs
              ((Pattern_binding (Var_name F))
                (Pattern_cons ((Pattern_binding (Var_name X)))
                  (Pattern_binding (Var_name Xs)))
                (Pattern_cons ((Pattern_binding (Var_name Y)))
                  (Pattern_binding (Var_name Ys)))))
             (c_guard ())
             (c_rhs
               (Expr_cons
                 ((Expr_apply
                    ((fa_name (Expr_name (Var_name F)))
                      (fa_args
                        ((Expr_name (Var_name X)) (Expr_name (Var_name Y)))))))
                 (Expr_apply
                   ((fa_name (Expr_name (Atom_name (Atom zipwith))))
                     (fa_args
                       ((Expr_name (Var_name F)) (Expr_name (Var_name Xs))
                         (Expr_name (Var_name Ys)))))))))
            ((c_lhs
               ((Pattern_binding (Var_name F)) (Pattern_list ())
                 (Pattern_list ())))
              (c_guard
                (((Expr_apply
                    ((fa_name (Expr_name (Atom_name (Atom is_function))))
                      (fa_args
                        ((Expr_name (Var_name F))
                          (Expr_literal (Lit_integer 2)))))))))
              (c_rhs (Expr_list ())))))
        (fd_spec ())))
    (Module_comment
      (Comment
        "% Return [F(X0, Y0, Z0), F(X1, Y1, Z1), ..., F(Xn, Yn, Zn)] for lists"))
    (Module_comment
      (Comment "% [X0, X1, ..., Xn], [Y0, Y1, ..., Yn] and [Z0, Z1, ..., Zn]."))
    (Type_decl
      ((typ_expr (Type_variable (Var_name List4))) (typ_kind Spec)
        (typ_name (Atom zipwith3))
        (typ_params
          ((Type_variable (Var_name Combine)) (Type_variable (Var_name List1))
            (Type_variable (Var_name List2)) (Type_variable (Var_name List3))))))
    (Function_decl
      ((fd_name (Atom zipwith3)) (fd_arity 4)
        (fd_cases
          (((c_lhs
              ((Pattern_binding (Var_name F))
                (Pattern_cons ((Pattern_binding (Var_name X)))
                  (Pattern_binding (Var_name Xs)))
                (Pattern_cons ((Pattern_binding (Var_name Y)))
                  (Pattern_binding (Var_name Ys)))
                (Pattern_cons ((Pattern_binding (Var_name Z)))
                  (Pattern_binding (Var_name Zs)))))
             (c_guard ())
             (c_rhs
               (Expr_cons
                 ((Expr_apply
                    ((fa_name (Expr_name (Var_name F)))
                      (fa_args
                        ((Expr_name (Var_name X)) (Expr_name (Var_name Y))
                          (Expr_name (Var_name Z)))))))
                 (Expr_apply
                   ((fa_name (Expr_name (Atom_name (Atom zipwith3))))
                     (fa_args
                       ((Expr_name (Var_name F)) (Expr_name (Var_name Xs))
                         (Expr_name (Var_name Ys)) (Expr_name (Var_name Zs)))))))))
            ((c_lhs
               ((Pattern_binding (Var_name F)) (Pattern_list ())
                 (Pattern_list ()) (Pattern_list ())))
              (c_guard
                (((Expr_apply
                    ((fa_name (Expr_name (Atom_name (Atom is_function))))
                      (fa_args
                        ((Expr_name (Var_name F))
                          (Expr_literal (Lit_integer 3)))))))))
              (c_rhs (Expr_list ())))))
        (fd_spec ())))
    (Module_comment (Comment "% sort(List) -> L"))
    (Module_comment (Comment "%  sorts the list L"))
    (Type_decl
      ((typ_expr (Type_variable (Var_name List2))) (typ_kind Spec)
        (typ_name (Atom sort)) (typ_params ((Type_variable (Var_name List1))))))
    (Function_decl
      ((fd_name (Atom sort)) (fd_arity 1)
        (fd_cases
          (((c_lhs
              ((Pattern_with_name
                 (Pattern_cons
                   ((Pattern_binding (Var_name X))
                     (Pattern_binding (Var_name Y)))
                   (Pattern_binding (Var_name L)))
                 (Pattern_binding (Var_name L0)))))
             (c_guard
               (((Expr_apply
                   ((fa_name
                      (Expr_name
                        (Qualified_name (n_mod (Atom_name (Atom erlang)))
                          (n_name (Atom_name (Atom '=<'))))))
                     (fa_args
                       ((Expr_name (Var_name X)) (Expr_name (Var_name Y)))))))))
             (c_rhs
               (Expr_case (Expr_name (Var_name L))
                 (((c_lhs ((Pattern_list ()))) (c_guard ())
                    (c_rhs (Expr_name (Var_name L0))))
                   ((c_lhs ((Pattern_list ((Pattern_binding (Var_name Z))))))
                     (c_guard
                       (((Expr_apply
                           ((fa_name
                              (Expr_name
                                (Qualified_name
                                  (n_mod (Atom_name (Atom erlang)))
                                  (n_name (Atom_name (Atom '=<'))))))
                             (fa_args
                               ((Expr_name (Var_name Y))
                                 (Expr_name (Var_name Z)))))))))
                     (c_rhs (Expr_name (Var_name L0))))
                   ((c_lhs ((Pattern_list ((Pattern_binding (Var_name Z))))))
                     (c_guard
                       (((Expr_apply
                           ((fa_name
                              (Expr_name
                                (Qualified_name
                                  (n_mod (Atom_name (Atom erlang)))
                                  (n_name (Atom_name (Atom '=<'))))))
                             (fa_args
                               ((Expr_name (Var_name X))
                                 (Expr_name (Var_name Z)))))))))
                     (c_rhs
                       (Expr_list
                         ((Expr_name (Var_name X)) (Expr_name (Var_name Z))
                           (Expr_name (Var_name Y))))))
                   ((c_lhs ((Pattern_list ((Pattern_binding (Var_name Z))))))
                     (c_guard ())
                     (c_rhs
                       (Expr_list
                         ((Expr_name (Var_name Z)) (Expr_name (Var_name X))
                           (Expr_name (Var_name Y))))))
                   ((c_lhs ((Pattern_binding (Var_name _))))
                     (c_guard
                       (((Expr_apply
                           ((fa_name
                              (Expr_name
                                (Qualified_name
                                  (n_mod (Atom_name (Atom erlang)))
                                  (n_name (Atom_name (Atom '=='))))))
                             (fa_args
                               ((Expr_name (Var_name X))
                                 (Expr_name (Var_name Y)))))))))
                     (c_rhs
                       (Expr_apply
                         ((fa_name (Expr_name (Atom_name (Atom sort_1))))
                           (fa_args
                             ((Expr_name (Var_name Y)) (Expr_name (Var_name L))
                               (Expr_list ((Expr_name (Var_name X))))))))))
                   ((c_lhs ((Pattern_binding (Var_name _)))) (c_guard ())
                     (c_rhs
                       (Expr_apply
                         ((fa_name (Expr_name (Atom_name (Atom split_1))))
                           (fa_args
                             ((Expr_name (Var_name X)) (Expr_name (Var_name Y))
                               (Expr_name (Var_name L)) (Expr_list ())
                               (Expr_list ())))))))))))
            ((c_lhs
               ((Pattern_cons
                  ((Pattern_binding (Var_name X))
                    (Pattern_binding (Var_name Y)))
                  (Pattern_binding (Var_name L)))))
              (c_guard ())
              (c_rhs
                (Expr_case (Expr_name (Var_name L))
                  (((c_lhs ((Pattern_list ()))) (c_guard ())
                     (c_rhs
                       (Expr_list
                         ((Expr_name (Var_name Y)) (Expr_name (Var_name X))))))
                    ((c_lhs ((Pattern_list ((Pattern_binding (Var_name Z))))))
                      (c_guard
                        (((Expr_apply
                            ((fa_name
                               (Expr_name
                                 (Qualified_name
                                   (n_mod (Atom_name (Atom erlang)))
                                   (n_name (Atom_name (Atom '=<'))))))
                              (fa_args
                                ((Expr_name (Var_name X))
                                  (Expr_name (Var_name Z)))))))))
                      (c_rhs
                        (Expr_cons
                          ((Expr_name (Var_name Y)) (Expr_name (Var_name X)))
                          (Expr_name (Var_name L)))))
                    ((c_lhs ((Pattern_list ((Pattern_binding (Var_name Z))))))
                      (c_guard
                        (((Expr_apply
                            ((fa_name
                               (Expr_name
                                 (Qualified_name
                                   (n_mod (Atom_name (Atom erlang)))
                                   (n_name (Atom_name (Atom '=<'))))))
                              (fa_args
                                ((Expr_name (Var_name Y))
                                  (Expr_name (Var_name Z)))))))))
                      (c_rhs
                        (Expr_list
                          ((Expr_name (Var_name Y)) (Expr_name (Var_name Z))
                            (Expr_name (Var_name X))))))
                    ((c_lhs ((Pattern_list ((Pattern_binding (Var_name Z))))))
                      (c_guard ())
                      (c_rhs
                        (Expr_list
                          ((Expr_name (Var_name Z)) (Expr_name (Var_name Y))
                            (Expr_name (Var_name X))))))
                    ((c_lhs ((Pattern_binding (Var_name _)))) (c_guard ())
                      (c_rhs
                        (Expr_apply
                          ((fa_name (Expr_name (Atom_name (Atom split_2))))
                            (fa_args
                              ((Expr_name (Var_name X))
                                (Expr_name (Var_name Y))
                                (Expr_name (Var_name L)) (Expr_list ())
                                (Expr_list ())))))))))))
            ((c_lhs
               ((Pattern_with_name
                  (Pattern_list ((Pattern_binding (Var_name _))))
                  (Pattern_binding (Var_name L)))))
              (c_guard ()) (c_rhs (Expr_name (Var_name L))))
            ((c_lhs
               ((Pattern_with_name (Pattern_list ())
                  (Pattern_binding (Var_name L)))))
              (c_guard ()) (c_rhs (Expr_name (Var_name L))))))
        (fd_spec ())))
    (Function_decl
      ((fd_name (Atom sort_1)) (fd_arity 3)
        (fd_cases
          (((c_lhs
              ((Pattern_binding (Var_name X))
                (Pattern_cons ((Pattern_binding (Var_name Y)))
                  (Pattern_binding (Var_name L)))
                (Pattern_binding (Var_name R))))
             (c_guard
               (((Expr_apply
                   ((fa_name
                      (Expr_name
                        (Qualified_name (n_mod (Atom_name (Atom erlang)))
                          (n_name (Atom_name (Atom '=='))))))
                     (fa_args
                       ((Expr_name (Var_name X)) (Expr_name (Var_name Y)))))))))
             (c_rhs
               (Expr_apply
                 ((fa_name (Expr_name (Atom_name (Atom sort_1))))
                   (fa_args
                     ((Expr_name (Var_name Y)) (Expr_name (Var_name L))
                       (Expr_cons ((Expr_name (Var_name X)))
                         (Expr_name (Var_name R)))))))))
            ((c_lhs
               ((Pattern_binding (Var_name X))
                 (Pattern_cons ((Pattern_binding (Var_name Y)))
                   (Pattern_binding (Var_name L)))
                 (Pattern_binding (Var_name R))))
              (c_guard
                (((Expr_apply
                    ((fa_name
                       (Expr_name
                         (Qualified_name (n_mod (Atom_name (Atom erlang)))
                           (n_name (Atom_name (Atom '<'))))))
                      (fa_args
                        ((Expr_name (Var_name X)) (Expr_name (Var_name Y)))))))))
              (c_rhs
                (Expr_apply
                  ((fa_name (Expr_name (Atom_name (Atom split_1))))
                    (fa_args
                      ((Expr_name (Var_name X)) (Expr_name (Var_name Y))
                        (Expr_name (Var_name L)) (Expr_name (Var_name R))
                        (Expr_list ())))))))
            ((c_lhs
               ((Pattern_binding (Var_name X))
                 (Pattern_cons ((Pattern_binding (Var_name Y)))
                   (Pattern_binding (Var_name L)))
                 (Pattern_binding (Var_name R))))
              (c_guard ())
              (c_rhs
                (Expr_apply
                  ((fa_name (Expr_name (Atom_name (Atom split_2))))
                    (fa_args
                      ((Expr_name (Var_name X)) (Expr_name (Var_name Y))
                        (Expr_name (Var_name L)) (Expr_name (Var_name R))
                        (Expr_list ())))))))
            ((c_lhs
               ((Pattern_binding (Var_name X)) (Pattern_list ())
                 (Pattern_binding (Var_name R))))
              (c_guard ())
              (c_rhs
                (Expr_apply
                  ((fa_name
                     (Expr_name
                       (Qualified_name (n_mod (Atom_name (Atom lists)))
                         (n_name (Atom_name (Atom reverse))))))
                    (fa_args
                      ((Expr_name (Var_name R))
                        (Expr_list ((Expr_name (Var_name X))))))))))))
        (fd_spec ())))
    (Module_comment (Comment "% merge(List) -> L"))
    (Module_comment (Comment "%  merges a list of sorted lists"))
    (Type_decl
      ((typ_expr (Type_variable (Var_name List1))) (typ_kind Spec)
        (typ_name (Atom merge))
        (typ_params ((Type_variable (Var_name ListOfLists))))))
    (Function_decl
      ((fd_name (Atom merge)) (fd_arity 1)
        (fd_cases
          (((c_lhs ((Pattern_binding (Var_name L)))) (c_guard ())
             (c_rhs
               (Expr_apply
                 ((fa_name (Expr_name (Atom_name (Atom mergel))))
                   (fa_args ((Expr_name (Var_name L)) (Expr_list ())))))))))
        (fd_spec ())))
    (Module_comment (Comment "% merge3(X, Y, Z) -> L"))
    (Module_comment (Comment "%  merges three sorted lists X, Y and Z"))
    (Type_decl
      ((typ_expr (Type_variable (Var_name List4))) (typ_kind Spec)
        (typ_name (Atom merge3))
        (typ_params
          ((Type_variable (Var_name List1)) (Type_variable (Var_name List2))
            (Type_variable (Var_name List3))))))
    (Function_decl
      ((fd_name (Atom merge3)) (fd_arity 3)
        (fd_cases
          (((c_lhs
              ((Pattern_binding (Var_name L1)) (Pattern_list ())
                (Pattern_binding (Var_name L3))))
             (c_guard ())
             (c_rhs
               (Expr_apply
                 ((fa_name (Expr_name (Atom_name (Atom merge))))
                   (fa_args
                     ((Expr_name (Var_name L1)) (Expr_name (Var_name L3))))))))
            ((c_lhs
               ((Pattern_binding (Var_name L1)) (Pattern_binding (Var_name L2))
                 (Pattern_list ())))
              (c_guard ())
              (c_rhs
                (Expr_apply
                  ((fa_name (Expr_name (Atom_name (Atom merge))))
                    (fa_args
                      ((Expr_name (Var_name L1)) (Expr_name (Var_name L2))))))))
            ((c_lhs
               ((Pattern_binding (Var_name L1))
                 (Pattern_cons ((Pattern_binding (Var_name H2)))
                   (Pattern_binding (Var_name T2)))
                 (Pattern_cons ((Pattern_binding (Var_name H3)))
                   (Pattern_binding (Var_name T3)))))
              (c_guard ())
              (c_rhs
                (Expr_apply
                  ((fa_name
                     (Expr_name
                       (Qualified_name (n_mod (Atom_name (Atom lists)))
                         (n_name (Atom_name (Atom reverse))))))
                    (fa_args
                      ((Expr_apply
                         ((fa_name (Expr_name (Atom_name (Atom merge3_1))))
                           (fa_args
                             ((Expr_name (Var_name L1)) (Expr_list ())
                               (Expr_name (Var_name H2))
                               (Expr_name (Var_name T2))
                               (Expr_name (Var_name H3))
                               (Expr_name (Var_name T3))))))
                        (Expr_list ())))))))))
        (fd_spec ())))
    (Module_comment (Comment "% rmerge3(X, Y, Z) -> L"))
    (Module_comment
      (Comment "%  merges three reversed sorted lists X, Y and Z"))
    (Type_decl
      ((typ_expr
         (Type_list
           (Type_variant
             ((Type_variable (Var_name X))
               (Type_variant
                 ((Type_variable (Var_name Y)) (Type_variable (Var_name Z))))))))
        (typ_kind Spec) (typ_name (Atom rmerge3))
        (typ_params
          ((Type_list (Type_variable (Var_name X)))
            (Type_list (Type_variable (Var_name Y)))
            (Type_list (Type_variable (Var_name Z)))))))
    (Function_decl
      ((fd_name (Atom rmerge3)) (fd_arity 3)
        (fd_cases
          (((c_lhs
              ((Pattern_binding (Var_name L1)) (Pattern_list ())
                (Pattern_binding (Var_name L3))))
             (c_guard ())
             (c_rhs
               (Expr_apply
                 ((fa_name (Expr_name (Atom_name (Atom rmerge))))
                   (fa_args
                     ((Expr_name (Var_name L1)) (Expr_name (Var_name L3))))))))
            ((c_lhs
               ((Pattern_binding (Var_name L1)) (Pattern_binding (Var_name L2))
                 (Pattern_list ())))
              (c_guard ())
              (c_rhs
                (Expr_apply
                  ((fa_name (Expr_name (Atom_name (Atom rmerge))))
                    (fa_args
                      ((Expr_name (Var_name L1)) (Expr_name (Var_name L2))))))))
            ((c_lhs
               ((Pattern_binding (Var_name L1))
                 (Pattern_cons ((Pattern_binding (Var_name H2)))
                   (Pattern_binding (Var_name T2)))
                 (Pattern_cons ((Pattern_binding (Var_name H3)))
                   (Pattern_binding (Var_name T3)))))
              (c_guard ())
              (c_rhs
                (Expr_apply
                  ((fa_name
                     (Expr_name
                       (Qualified_name (n_mod (Atom_name (Atom lists)))
                         (n_name (Atom_name (Atom reverse))))))
                    (fa_args
                      ((Expr_apply
                         ((fa_name (Expr_name (Atom_name (Atom rmerge3_1))))
                           (fa_args
                             ((Expr_name (Var_name L1)) (Expr_list ())
                               (Expr_name (Var_name H2))
                               (Expr_name (Var_name T2))
                               (Expr_name (Var_name H3))
                               (Expr_name (Var_name T3))))))
                        (Expr_list ())))))))))
        (fd_spec ())))
    (Module_comment (Comment "% merge(X, Y) -> L"))
    (Module_comment (Comment "%  merges two sorted lists X and Y"))
    (Type_decl
      ((typ_expr (Type_variable (Var_name List3))) (typ_kind Spec)
        (typ_name (Atom merge))
        (typ_params
          ((Type_variable (Var_name List1)) (Type_variable (Var_name List2))))))
    (Function_decl
      ((fd_name (Atom merge)) (fd_arity 2)
        (fd_cases
          (((c_lhs ((Pattern_binding (Var_name T1)) (Pattern_list ())))
             (c_guard ()) (c_rhs (Expr_name (Var_name T1))))
            ((c_lhs
               ((Pattern_binding (Var_name T1))
                 (Pattern_cons ((Pattern_binding (Var_name H2)))
                   (Pattern_binding (Var_name T2)))))
              (c_guard ())
              (c_rhs
                (Expr_apply
                  ((fa_name
                     (Expr_name
                       (Qualified_name (n_mod (Atom_name (Atom lists)))
                         (n_name (Atom_name (Atom reverse))))))
                    (fa_args
                      ((Expr_apply
                         ((fa_name (Expr_name (Atom_name (Atom merge2_1))))
                           (fa_args
                             ((Expr_name (Var_name T1))
                               (Expr_name (Var_name H2))
                               (Expr_name (Var_name T2)) (Expr_list ())))))
                        (Expr_list ())))))))))
        (fd_spec ())))
    (Module_comment (Comment "% rmerge(X, Y) -> L"))
    (Module_comment (Comment "%  merges two reversed sorted lists X and Y"))
    (Module_comment
      (Comment
        "% reverse(rmerge(reverse(A),reverse(B))) is equal to merge(I,A,B)."))
    (Type_decl
      ((typ_expr
         (Type_list
           (Type_variant
             ((Type_variable (Var_name X)) (Type_variable (Var_name Y))))))
        (typ_kind Spec) (typ_name (Atom rmerge))
        (typ_params
          ((Type_list (Type_variable (Var_name X)))
            (Type_list (Type_variable (Var_name Y)))))))
    (Function_decl
      ((fd_name (Atom rmerge)) (fd_arity 2)
        (fd_cases
          (((c_lhs ((Pattern_binding (Var_name T1)) (Pattern_list ())))
             (c_guard ()) (c_rhs (Expr_name (Var_name T1))))
            ((c_lhs
               ((Pattern_binding (Var_name T1))
                 (Pattern_cons ((Pattern_binding (Var_name H2)))
                   (Pattern_binding (Var_name T2)))))
              (c_guard ())
              (c_rhs
                (Expr_apply
                  ((fa_name
                     (Expr_name
                       (Qualified_name (n_mod (Atom_name (Atom lists)))
                         (n_name (Atom_name (Atom reverse))))))
                    (fa_args
                      ((Expr_apply
                         ((fa_name (Expr_name (Atom_name (Atom rmerge2_1))))
                           (fa_args
                             ((Expr_name (Var_name T1))
                               (Expr_name (Var_name H2))
                               (Expr_name (Var_name T2)) (Expr_list ())))))
                        (Expr_list ())))))))))
        (fd_spec ())))
    (Module_comment
      (Comment
        "% concat(L) concatenate the list representation of the elements"))
    (Module_comment
      (Comment "%  in L - the elements in L can be atoms, numbers of strings."))
    (Module_comment (Comment "%  Returns a list of characters."))
    (Type_decl
      ((typ_expr
         (Type_constr ((tc_name (Atom_name (Atom string))) (tc_args ()))))
        (typ_kind Spec) (typ_name (Atom concat))
        (typ_params ((Type_variable (Var_name Things))))))
    (Function_decl
      ((fd_name (Atom concat)) (fd_arity 1)
        (fd_cases
          (((c_lhs ((Pattern_binding (Var_name List)))) (c_guard ())
             (c_rhs
               (Expr_apply
                 ((fa_name (Expr_name (Atom_name (Atom flatmap))))
                   (fa_args
                     ((Expr_fun_ref
                        (fref_name (Atom_name (Atom thing_to_list)))
                        (fref_arity 1))
                       (Expr_name (Var_name List))))))))))
        (fd_spec ())))
    (Function_decl
      ((fd_name (Atom thing_to_list)) (fd_arity 1)
        (fd_cases
          (((c_lhs ((Pattern_binding (Var_name X))))
             (c_guard
               (((Expr_apply
                   ((fa_name (Expr_name (Atom_name (Atom is_integer))))
                     (fa_args ((Expr_name (Var_name X)))))))))
             (c_rhs
               (Expr_apply
                 ((fa_name (Expr_name (Atom_name (Atom integer_to_list))))
                   (fa_args ((Expr_name (Var_name X))))))))
            ((c_lhs ((Pattern_binding (Var_name X))))
              (c_guard
                (((Expr_apply
                    ((fa_name (Expr_name (Atom_name (Atom is_float))))
                      (fa_args ((Expr_name (Var_name X)))))))))
              (c_rhs
                (Expr_apply
                  ((fa_name (Expr_name (Atom_name (Atom float_to_list))))
                    (fa_args ((Expr_name (Var_name X))))))))
            ((c_lhs ((Pattern_binding (Var_name X))))
              (c_guard
                (((Expr_apply
                    ((fa_name (Expr_name (Atom_name (Atom is_atom))))
                      (fa_args ((Expr_name (Var_name X)))))))))
              (c_rhs
                (Expr_apply
                  ((fa_name (Expr_name (Atom_name (Atom atom_to_list))))
                    (fa_args ((Expr_name (Var_name X))))))))
            ((c_lhs ((Pattern_binding (Var_name X))))
              (c_guard
                (((Expr_apply
                    ((fa_name (Expr_name (Atom_name (Atom is_list))))
                      (fa_args ((Expr_name (Var_name X)))))))))
              (c_rhs (Expr_name (Var_name X))))))
        (fd_spec ())))
    (Module_comment (Comment "Assumed to be a string"))
    (Module_comment (Comment "% flatten(List)"))
    (Module_comment (Comment "% flatten(List, Tail)"))
    (Module_comment (Comment "%  Flatten a list, adding optional tail."))
    (Type_decl
      ((typ_expr (Type_variable (Var_name List))) (typ_kind Spec)
        (typ_name (Atom flatten))
        (typ_params ((Type_variable (Var_name DeepList))))))
    (Function_decl
      ((fd_name (Atom flatten)) (fd_arity 1)
        (fd_cases
          (((c_lhs ((Pattern_binding (Var_name List))))
             (c_guard
               (((Expr_apply
                   ((fa_name (Expr_name (Atom_name (Atom is_list))))
                     (fa_args ((Expr_name (Var_name List)))))))))
             (c_rhs
               (Expr_apply
                 ((fa_name (Expr_name (Atom_name (Atom do_flatten))))
                   (fa_args ((Expr_name (Var_name List)) (Expr_list ())))))))))
        (fd_spec ())))
    (Type_decl
      ((typ_expr (Type_variable (Var_name List))) (typ_kind Spec)
        (typ_name (Atom flatten))
        (typ_params
          ((Type_variable (Var_name DeepList)) (Type_variable (Var_name Tail))))))
    (Function_decl
      ((fd_name (Atom flatten)) (fd_arity 2)
        (fd_cases
          (((c_lhs
              ((Pattern_binding (Var_name List))
                (Pattern_binding (Var_name Tail))))
             (c_guard
               (((Expr_apply
                   ((fa_name (Expr_name (Atom_name (Atom is_list))))
                     (fa_args ((Expr_name (Var_name List))))))
                  (Expr_apply
                    ((fa_name (Expr_name (Atom_name (Atom is_list))))
                      (fa_args ((Expr_name (Var_name Tail)))))))))
             (c_rhs
               (Expr_apply
                 ((fa_name (Expr_name (Atom_name (Atom do_flatten))))
                   (fa_args
                     ((Expr_name (Var_name List)) (Expr_name (Var_name Tail))))))))))
        (fd_spec ())))
    (Function_decl
      ((fd_name (Atom do_flatten)) (fd_arity 2)
        (fd_cases
          (((c_lhs
              ((Pattern_cons ((Pattern_binding (Var_name H)))
                 (Pattern_binding (Var_name T)))
                (Pattern_binding (Var_name Tail))))
             (c_guard
               (((Expr_apply
                   ((fa_name (Expr_name (Atom_name (Atom is_list))))
                     (fa_args ((Expr_name (Var_name H)))))))))
             (c_rhs
               (Expr_apply
                 ((fa_name (Expr_name (Atom_name (Atom do_flatten))))
                   (fa_args
                     ((Expr_name (Var_name H))
                       (Expr_apply
                         ((fa_name (Expr_name (Atom_name (Atom do_flatten))))
                           (fa_args
                             ((Expr_name (Var_name T))
                               (Expr_name (Var_name Tail))))))))))))
            ((c_lhs
               ((Pattern_cons ((Pattern_binding (Var_name H)))
                  (Pattern_binding (Var_name T)))
                 (Pattern_binding (Var_name Tail))))
              (c_guard ())
              (c_rhs
                (Expr_cons ((Expr_name (Var_name H)))
                  (Expr_apply
                    ((fa_name (Expr_name (Atom_name (Atom do_flatten))))
                      (fa_args
                        ((Expr_name (Var_name T)) (Expr_name (Var_name Tail)))))))))
            ((c_lhs ((Pattern_list ()) (Pattern_binding (Var_name Tail))))
              (c_guard ()) (c_rhs (Expr_name (Var_name Tail))))))
        (fd_spec ())))
    (Module_comment (Comment "% flatlength(List)"))
    (Module_comment (Comment "%  Calculate the length of a list of lists."))
    (Type_decl
      ((typ_expr
         (Type_constr
           ((tc_name (Atom_name (Atom non_neg_integer))) (tc_args ()))))
        (typ_kind Spec) (typ_name (Atom flatlength))
        (typ_params ((Type_variable (Var_name DeepList))))))
    (Function_decl
      ((fd_name (Atom flatlength)) (fd_arity 1)
        (fd_cases
          (((c_lhs ((Pattern_binding (Var_name List)))) (c_guard ())
             (c_rhs
               (Expr_apply
                 ((fa_name (Expr_name (Atom_name (Atom flatlength))))
                   (fa_args
                     ((Expr_name (Var_name List))
                       (Expr_literal (Lit_integer 0))))))))))
        (fd_spec ())))
    (Function_decl
      ((fd_name (Atom flatlength)) (fd_arity 2)
        (fd_cases
          (((c_lhs
              ((Pattern_cons ((Pattern_binding (Var_name H)))
                 (Pattern_binding (Var_name T)))
                (Pattern_binding (Var_name L))))
             (c_guard
               (((Expr_apply
                   ((fa_name (Expr_name (Atom_name (Atom is_list))))
                     (fa_args ((Expr_name (Var_name H)))))))))
             (c_rhs
               (Expr_apply
                 ((fa_name (Expr_name (Atom_name (Atom flatlength))))
                   (fa_args
                     ((Expr_name (Var_name H))
                       (Expr_apply
                         ((fa_name (Expr_name (Atom_name (Atom flatlength))))
                           (fa_args
                             ((Expr_name (Var_name T))
                               (Expr_name (Var_name L))))))))))))
            ((c_lhs
               ((Pattern_cons ((Pattern_binding (Var_name _)))
                  (Pattern_binding (Var_name T)))
                 (Pattern_binding (Var_name L))))
              (c_guard ())
              (c_rhs
                (Expr_apply
                  ((fa_name (Expr_name (Atom_name (Atom flatlength))))
                    (fa_args
                      ((Expr_name (Var_name T))
                        (Expr_apply
                          ((fa_name
                             (Expr_name
                               (Qualified_name
                                 (n_mod (Atom_name (Atom erlang)))
                                 (n_name (Atom_name (Atom '+'))))))
                            (fa_args
                              ((Expr_name (Var_name L))
                                (Expr_literal (Lit_integer 1))))))))))))
            ((c_lhs ((Pattern_list ()) (Pattern_binding (Var_name L))))
              (c_guard ()) (c_rhs (Expr_name (Var_name L))))))
        (fd_spec ())))
    (Module_comment (Comment "% keymember(Key, Index, [Tuple]) Now a BIF!"))
    (Module_comment (Comment "% keyfind(Key, Index, [Tuple]) A BIF!"))
    (Module_comment (Comment "% keysearch(Key, Index, [Tuple]) Now a BIF!"))
    (Module_comment (Comment "% keydelete(Key, Index, [Tuple])"))
    (Module_comment (Comment "% keyreplace(Key, Index, [Tuple], NewTuple)"))
    (Module_comment (Comment "% keytake(Key, Index, [Tuple])"))
    (Module_comment (Comment "% keystore(Key, Index, [Tuple], NewTuple)"))
    (Module_comment (Comment "% keysort(Index, [Tuple])"))
    (Module_comment (Comment "% keymerge(Index, [Tuple], [Tuple])"))
    (Module_comment (Comment "% ukeysort(Index, [Tuple])"))
    (Module_comment (Comment "% ukeymerge(Index, [Tuple], [Tuple])"))
    (Module_comment (Comment "% keymap(Function, Index, [Tuple])"))
    (Module_comment (Comment "% keymap(Function, ExtraArgs, Index, [Tuple])"))
    (Module_comment (Comment "keymember(K,N,L) when is_integer(N), N > 0 ->"))
    (Module_comment (Comment "    keymember3(K,N,L)."))
    (Module_comment
      (Comment "keymember3(Key, N, [T|Ts]) when element(N, T) == Key -> true;"))
    (Module_comment (Comment "keymember3(Key, N, [T|Ts]) ->"))
    (Module_comment (Comment "    keymember3(Key, N, Ts);"))
    (Module_comment (Comment "keymember3(Key, N, []) -> false."))
    (Module_comment
      (Comment "keysearch(K, N, L) when is_integer(N), N > 0 ->"))
    (Module_comment (Comment "    keysearch3(K, N, L)."))
    (Module_comment
      (Comment "keysearch3(Key, N, [H|T]) when element(N, H) == Key ->"))
    (Module_comment (Comment "    {value, H};"))
    (Module_comment (Comment "keysearch3(Key, N, [H|T]) ->"))
    (Module_comment (Comment "    keysearch3(Key, N, T);"))
    (Module_comment (Comment "keysearch3(Key, N, []) -> false."))
    (Type_decl
      ((typ_expr (Type_variable (Var_name TupleList2))) (typ_kind Spec)
        (typ_name (Atom keydelete))
        (typ_params
          ((Type_variable (Var_name Key)) (Type_variable (Var_name N))
            (Type_variable (Var_name TupleList1))))))
    (Function_decl
      ((fd_name (Atom keydelete)) (fd_arity 3)
        (fd_cases
          (((c_lhs
              ((Pattern_binding (Var_name K)) (Pattern_binding (Var_name N))
                (Pattern_binding (Var_name L))))
             (c_guard
               (((Expr_apply
                   ((fa_name (Expr_name (Atom_name (Atom is_integer))))
                     (fa_args ((Expr_name (Var_name N))))))
                  (Expr_apply
                    ((fa_name
                       (Expr_name
                         (Qualified_name (n_mod (Atom_name (Atom erlang)))
                           (n_name (Atom_name (Atom '>'))))))
                      (fa_args
                        ((Expr_name (Var_name N))
                          (Expr_literal (Lit_integer 0)))))))))
             (c_rhs
               (Expr_apply
                 ((fa_name (Expr_name (Atom_name (Atom keydelete3))))
                   (fa_args
                     ((Expr_name (Var_name K)) (Expr_name (Var_name N))
                       (Expr_name (Var_name L))))))))))
        (fd_spec ())))
    (Function_decl
      ((fd_name (Atom keydelete3)) (fd_arity 3)
        (fd_cases
          (((c_lhs
              ((Pattern_binding (Var_name Key)) (Pattern_binding (Var_name N))
                (Pattern_cons ((Pattern_binding (Var_name H)))
                  (Pattern_binding (Var_name T)))))
             (c_guard
               (((Expr_apply
                   ((fa_name
                      (Expr_name
                        (Qualified_name (n_mod (Atom_name (Atom erlang)))
                          (n_name (Atom_name (Atom '=='))))))
                     (fa_args
                       ((Expr_apply
                          ((fa_name (Expr_name (Atom_name (Atom element))))
                            (fa_args
                              ((Expr_name (Var_name N))
                                (Expr_name (Var_name H))))))
                         (Expr_name (Var_name Key)))))))))
             (c_rhs (Expr_name (Var_name T))))
            ((c_lhs
               ((Pattern_binding (Var_name Key)) (Pattern_binding (Var_name N))
                 (Pattern_cons ((Pattern_binding (Var_name H)))
                   (Pattern_binding (Var_name T)))))
              (c_guard ())
              (c_rhs
                (Expr_cons ((Expr_name (Var_name H)))
                  (Expr_apply
                    ((fa_name (Expr_name (Atom_name (Atom keydelete3))))
                      (fa_args
                        ((Expr_name (Var_name Key)) (Expr_name (Var_name N))
                          (Expr_name (Var_name T)))))))))
            ((c_lhs
               ((Pattern_binding (Var_name _)) (Pattern_binding (Var_name _))
                 (Pattern_list ())))
              (c_guard ()) (c_rhs (Expr_list ())))))
        (fd_spec ())))
    (Type_decl
      ((typ_expr (Type_variable (Var_name TupleList2))) (typ_kind Spec)
        (typ_name (Atom keyreplace))
        (typ_params
          ((Type_variable (Var_name Key)) (Type_variable (Var_name N))
            (Type_variable (Var_name TupleList1))
            (Type_variable (Var_name NewTuple))))))
    (Function_decl
      ((fd_name (Atom keyreplace)) (fd_arity 4)
        (fd_cases
          (((c_lhs
              ((Pattern_binding (Var_name K)) (Pattern_binding (Var_name N))
                (Pattern_binding (Var_name L))
                (Pattern_binding (Var_name New))))
             (c_guard
               (((Expr_apply
                   ((fa_name (Expr_name (Atom_name (Atom is_integer))))
                     (fa_args ((Expr_name (Var_name N))))))
                  (Expr_apply
                    ((fa_name
                       (Expr_name
                         (Qualified_name (n_mod (Atom_name (Atom erlang)))
                           (n_name (Atom_name (Atom '>'))))))
                      (fa_args
                        ((Expr_name (Var_name N))
                          (Expr_literal (Lit_integer 0))))))
                  (Expr_apply
                    ((fa_name (Expr_name (Atom_name (Atom is_tuple))))
                      (fa_args ((Expr_name (Var_name New)))))))))
             (c_rhs
               (Expr_apply
                 ((fa_name (Expr_name (Atom_name (Atom keyreplace3))))
                   (fa_args
                     ((Expr_name (Var_name K)) (Expr_name (Var_name N))
                       (Expr_name (Var_name L)) (Expr_name (Var_name New))))))))))
        (fd_spec ())))
    (Function_decl
      ((fd_name (Atom keyreplace3)) (fd_arity 4)
        (fd_cases
          (((c_lhs
              ((Pattern_binding (Var_name Key))
                (Pattern_binding (Var_name Pos))
                (Pattern_cons ((Pattern_binding (Var_name Tup)))
                  (Pattern_binding (Var_name Tail)))
                (Pattern_binding (Var_name New))))
             (c_guard
               (((Expr_apply
                   ((fa_name
                      (Expr_name
                        (Qualified_name (n_mod (Atom_name (Atom erlang)))
                          (n_name (Atom_name (Atom '=='))))))
                     (fa_args
                       ((Expr_apply
                          ((fa_name (Expr_name (Atom_name (Atom element))))
                            (fa_args
                              ((Expr_name (Var_name Pos))
                                (Expr_name (Var_name Tup))))))
                         (Expr_name (Var_name Key)))))))))
             (c_rhs
               (Expr_cons ((Expr_name (Var_name New)))
                 (Expr_name (Var_name Tail)))))
            ((c_lhs
               ((Pattern_binding (Var_name Key))
                 (Pattern_binding (Var_name Pos))
                 (Pattern_cons ((Pattern_binding (Var_name H)))
                   (Pattern_binding (Var_name T)))
                 (Pattern_binding (Var_name New))))
              (c_guard ())
              (c_rhs
                (Expr_cons ((Expr_name (Var_name H)))
                  (Expr_apply
                    ((fa_name (Expr_name (Atom_name (Atom keyreplace3))))
                      (fa_args
                        ((Expr_name (Var_name Key)) (Expr_name (Var_name Pos))
                          (Expr_name (Var_name T)) (Expr_name (Var_name New)))))))))
            ((c_lhs
               ((Pattern_binding (Var_name _)) (Pattern_binding (Var_name _))
                 (Pattern_list ()) (Pattern_binding (Var_name _))))
              (c_guard ()) (c_rhs (Expr_list ())))))
        (fd_spec ())))
    (Type_decl
      ((typ_expr
         (Type_variant
           ((Type_tuple
              ((Type_const (Lit_atom (Atom value)))
                (Type_variable (Var_name Tuple))
                (Type_variable (Var_name TupleList2))))
             (Type_const (Lit_atom (Atom false))))))
        (typ_kind Spec) (typ_name (Atom keytake))
        (typ_params
          ((Type_variable (Var_name Key)) (Type_variable (Var_name N))
            (Type_variable (Var_name TupleList1))))))
    (Function_decl
      ((fd_name (Atom keytake)) (fd_arity 3)
        (fd_cases
          (((c_lhs
              ((Pattern_binding (Var_name Key)) (Pattern_binding (Var_name N))
                (Pattern_binding (Var_name L))))
             (c_guard
               (((Expr_apply
                   ((fa_name (Expr_name (Atom_name (Atom is_integer))))
                     (fa_args ((Expr_name (Var_name N))))))
                  (Expr_apply
                    ((fa_name
                       (Expr_name
                         (Qualified_name (n_mod (Atom_name (Atom erlang)))
                           (n_name (Atom_name (Atom '>'))))))
                      (fa_args
                        ((Expr_name (Var_name N))
                          (Expr_literal (Lit_integer 0)))))))))
             (c_rhs
               (Expr_apply
                 ((fa_name (Expr_name (Atom_name (Atom keytake))))
                   (fa_args
                     ((Expr_name (Var_name Key)) (Expr_name (Var_name N))
                       (Expr_name (Var_name L)) (Expr_list ())))))))))
        (fd_spec ())))
    (Function_decl
      ((fd_name (Atom keytake)) (fd_arity 4)
        (fd_cases
          (((c_lhs
              ((Pattern_binding (Var_name Key)) (Pattern_binding (Var_name N))
                (Pattern_cons ((Pattern_binding (Var_name H)))
                  (Pattern_binding (Var_name T)))
                (Pattern_binding (Var_name L))))
             (c_guard
               (((Expr_apply
                   ((fa_name
                      (Expr_name
                        (Qualified_name (n_mod (Atom_name (Atom erlang)))
                          (n_name (Atom_name (Atom '=='))))))
                     (fa_args
                       ((Expr_apply
                          ((fa_name (Expr_name (Atom_name (Atom element))))
                            (fa_args
                              ((Expr_name (Var_name N))
                                (Expr_name (Var_name H))))))
                         (Expr_name (Var_name Key)))))))))
             (c_rhs
               (Expr_tuple
                 ((Expr_literal (Lit_atom (Atom value)))
                   (Expr_name (Var_name H))
                   (Expr_apply
                     ((fa_name
                        (Expr_name
                          (Qualified_name (n_mod (Atom_name (Atom lists)))
                            (n_name (Atom_name (Atom reverse))))))
                       (fa_args
                         ((Expr_name (Var_name L)) (Expr_name (Var_name T))))))))))
            ((c_lhs
               ((Pattern_binding (Var_name Key)) (Pattern_binding (Var_name N))
                 (Pattern_cons ((Pattern_binding (Var_name H)))
                   (Pattern_binding (Var_name T)))
                 (Pattern_binding (Var_name L))))
              (c_guard ())
              (c_rhs
                (Expr_apply
                  ((fa_name (Expr_name (Atom_name (Atom keytake))))
                    (fa_args
                      ((Expr_name (Var_name Key)) (Expr_name (Var_name N))
                        (Expr_name (Var_name T))
                        (Expr_cons ((Expr_name (Var_name H)))
                          (Expr_name (Var_name L)))))))))
            ((c_lhs
               ((Pattern_binding (Var_name _K)) (Pattern_binding (Var_name _N))
                 (Pattern_list ()) (Pattern_binding (Var_name _L))))
              (c_guard ()) (c_rhs (Expr_literal (Lit_atom (Atom false)))))))
        (fd_spec ())))
    (Type_decl
      ((typ_expr (Type_variable (Var_name TupleList2))) (typ_kind Spec)
        (typ_name (Atom keystore))
        (typ_params
          ((Type_variable (Var_name Key)) (Type_variable (Var_name N))
            (Type_variable (Var_name TupleList1))
            (Type_variable (Var_name NewTuple))))))
    (Function_decl
      ((fd_name (Atom keystore)) (fd_arity 4)
        (fd_cases
          (((c_lhs
              ((Pattern_binding (Var_name K)) (Pattern_binding (Var_name N))
                (Pattern_binding (Var_name L))
                (Pattern_binding (Var_name New))))
             (c_guard
               (((Expr_apply
                   ((fa_name (Expr_name (Atom_name (Atom is_integer))))
                     (fa_args ((Expr_name (Var_name N))))))
                  (Expr_apply
                    ((fa_name
                       (Expr_name
                         (Qualified_name (n_mod (Atom_name (Atom erlang)))
                           (n_name (Atom_name (Atom '>'))))))
                      (fa_args
                        ((Expr_name (Var_name N))
                          (Expr_literal (Lit_integer 0))))))
                  (Expr_apply
                    ((fa_name (Expr_name (Atom_name (Atom is_tuple))))
                      (fa_args ((Expr_name (Var_name New)))))))))
             (c_rhs
               (Expr_apply
                 ((fa_name (Expr_name (Atom_name (Atom keystore2))))
                   (fa_args
                     ((Expr_name (Var_name K)) (Expr_name (Var_name N))
                       (Expr_name (Var_name L)) (Expr_name (Var_name New))))))))))
        (fd_spec ())))
    (Function_decl
      ((fd_name (Atom keystore2)) (fd_arity 4)
        (fd_cases
          (((c_lhs
              ((Pattern_binding (Var_name Key)) (Pattern_binding (Var_name N))
                (Pattern_cons ((Pattern_binding (Var_name H)))
                  (Pattern_binding (Var_name T)))
                (Pattern_binding (Var_name New))))
             (c_guard
               (((Expr_apply
                   ((fa_name
                      (Expr_name
                        (Qualified_name (n_mod (Atom_name (Atom erlang)))
                          (n_name (Atom_name (Atom '=='))))))
                     (fa_args
                       ((Expr_apply
                          ((fa_name (Expr_name (Atom_name (Atom element))))
                            (fa_args
                              ((Expr_name (Var_name N))
                                (Expr_name (Var_name H))))))
                         (Expr_name (Var_name Key)))))))))
             (c_rhs
               (Expr_cons ((Expr_name (Var_name New)))
                 (Expr_name (Var_name T)))))
            ((c_lhs
               ((Pattern_binding (Var_name Key)) (Pattern_binding (Var_name N))
                 (Pattern_cons ((Pattern_binding (Var_name H)))
                   (Pattern_binding (Var_name T)))
                 (Pattern_binding (Var_name New))))
              (c_guard ())
              (c_rhs
                (Expr_cons ((Expr_name (Var_name H)))
                  (Expr_apply
                    ((fa_name (Expr_name (Atom_name (Atom keystore2))))
                      (fa_args
                        ((Expr_name (Var_name Key)) (Expr_name (Var_name N))
                          (Expr_name (Var_name T)) (Expr_name (Var_name New)))))))))
            ((c_lhs
               ((Pattern_binding (Var_name _Key))
                 (Pattern_binding (Var_name _N)) (Pattern_list ())
                 (Pattern_binding (Var_name New))))
              (c_guard ()) (c_rhs (Expr_list ((Expr_name (Var_name New))))))))
        (fd_spec ())))
    (Type_decl
      ((typ_expr (Type_variable (Var_name TupleList2))) (typ_kind Spec)
        (typ_name (Atom keysort))
        (typ_params
          ((Type_variable (Var_name N)) (Type_variable (Var_name TupleList1))))))
    (Function_decl
      ((fd_name (Atom keysort)) (fd_arity 2)
        (fd_cases
          (((c_lhs
              ((Pattern_binding (Var_name I)) (Pattern_binding (Var_name L))))
             (c_guard
               (((Expr_apply
                   ((fa_name (Expr_name (Atom_name (Atom is_integer))))
                     (fa_args ((Expr_name (Var_name I))))))
                  (Expr_apply
                    ((fa_name
                       (Expr_name
                         (Qualified_name (n_mod (Atom_name (Atom erlang)))
                           (n_name (Atom_name (Atom '>'))))))
                      (fa_args
                        ((Expr_name (Var_name I))
                          (Expr_literal (Lit_integer 0)))))))))
             (c_rhs
               (Expr_case (Expr_name (Var_name L))
                 (((c_lhs ((Pattern_list ()))) (c_guard ())
                    (c_rhs (Expr_name (Var_name L))))
                   ((c_lhs ((Pattern_list ((Pattern_binding (Var_name _))))))
                     (c_guard ()) (c_rhs (Expr_name (Var_name L))))
                   ((c_lhs
                      ((Pattern_cons
                         ((Pattern_binding (Var_name X))
                           (Pattern_binding (Var_name Y)))
                         (Pattern_binding (Var_name T)))))
                     (c_guard ())
                     (c_rhs
                       (Expr_case
                         (Expr_tuple
                           ((Expr_apply
                              ((fa_name (Expr_name (Atom_name (Atom element))))
                                (fa_args
                                  ((Expr_name (Var_name I))
                                    (Expr_name (Var_name X))))))
                             (Expr_apply
                               ((fa_name
                                  (Expr_name (Atom_name (Atom element))))
                                 (fa_args
                                   ((Expr_name (Var_name I))
                                     (Expr_name (Var_name Y))))))))
                         (((c_lhs
                             ((Pattern_tuple
                                ((Pattern_binding (Var_name EX))
                                  (Pattern_binding (Var_name EY))))))
                            (c_guard
                              (((Expr_apply
                                  ((fa_name
                                     (Expr_name
                                       (Qualified_name
                                         (n_mod (Atom_name (Atom erlang)))
                                         (n_name (Atom_name (Atom '=<'))))))
                                    (fa_args
                                      ((Expr_name (Var_name EX))
                                        (Expr_name (Var_name EY)))))))))
                            (c_rhs
                              (Expr_case (Expr_name (Var_name T))
                                (((c_lhs ((Pattern_list ()))) (c_guard ())
                                   (c_rhs (Expr_name (Var_name L))))
                                  ((c_lhs
                                     ((Pattern_list
                                        ((Pattern_binding (Var_name Z))))))
                                    (c_guard ())
                                    (c_rhs
                                      (Expr_case
                                        (Expr_apply
                                          ((fa_name
                                             (Expr_name
                                               (Atom_name (Atom element))))
                                            (fa_args
                                              ((Expr_name (Var_name I))
                                                (Expr_name (Var_name Z))))))
                                        (((c_lhs
                                            ((Pattern_binding (Var_name EZ))))
                                           (c_guard
                                             (((Expr_apply
                                                 ((fa_name
                                                    (Expr_name
                                                      (Qualified_name
                                                        (n_mod
                                                          (Atom_name
                                                            (Atom erlang)))
                                                        (n_name
                                                          (Atom_name
                                                            (Atom '=<'))))))
                                                   (fa_args
                                                     ((Expr_name (Var_name EY))
                                                       (Expr_name
                                                         (Var_name EZ)))))))))
                                           (c_rhs (Expr_name (Var_name L))))
                                          ((c_lhs
                                             ((Pattern_binding (Var_name EZ))))
                                            (c_guard
                                              (((Expr_apply
                                                  ((fa_name
                                                     (Expr_name
                                                       (Qualified_name
                                                         (n_mod
                                                           (Atom_name
                                                             (Atom erlang)))
                                                         (n_name
                                                           (Atom_name
                                                             (Atom '=<'))))))
                                                    (fa_args
                                                      ((Expr_name
                                                         (Var_name EX))
                                                        (Expr_name
                                                          (Var_name EZ)))))))))
                                            (c_rhs
                                              (Expr_list
                                                ((Expr_name (Var_name X))
                                                  (Expr_name (Var_name Z))
                                                  (Expr_name (Var_name Y))))))
                                          ((c_lhs
                                             ((Pattern_binding (Var_name _EZ))))
                                            (c_guard ())
                                            (c_rhs
                                              (Expr_list
                                                ((Expr_name (Var_name Z))
                                                  (Expr_name (Var_name X))
                                                  (Expr_name (Var_name Y))))))))))
                                  ((c_lhs ((Pattern_binding (Var_name _))))
                                    (c_guard
                                      (((Expr_apply
                                          ((fa_name
                                             (Expr_name
                                               (Qualified_name
                                                 (n_mod
                                                   (Atom_name (Atom erlang)))
                                                 (n_name
                                                   (Atom_name (Atom '=='))))))
                                            (fa_args
                                              ((Expr_name (Var_name X))
                                                (Expr_name (Var_name Y)))))))))
                                    (c_rhs
                                      (Expr_apply
                                        ((fa_name
                                           (Expr_name
                                             (Atom_name (Atom keysort_1))))
                                          (fa_args
                                            ((Expr_name (Var_name I))
                                              (Expr_name (Var_name Y))
                                              (Expr_name (Var_name EY))
                                              (Expr_name (Var_name T))
                                              (Expr_list
                                                ((Expr_name (Var_name X))))))))))
                                  ((c_lhs ((Pattern_binding (Var_name _))))
                                    (c_guard ())
                                    (c_rhs
                                      (Expr_apply
                                        ((fa_name
                                           (Expr_name
                                             (Atom_name (Atom keysplit_1))))
                                          (fa_args
                                            ((Expr_name (Var_name I))
                                              (Expr_name (Var_name X))
                                              (Expr_name (Var_name EX))
                                              (Expr_name (Var_name Y))
                                              (Expr_name (Var_name EY))
                                              (Expr_name (Var_name T))
                                              (Expr_list ()) (Expr_list ())))))))))))
                           ((c_lhs
                              ((Pattern_tuple
                                 ((Pattern_binding (Var_name EX))
                                   (Pattern_binding (Var_name EY))))))
                             (c_guard ())
                             (c_rhs
                               (Expr_case (Expr_name (Var_name T))
                                 (((c_lhs ((Pattern_list ()))) (c_guard ())
                                    (c_rhs
                                      (Expr_list
                                        ((Expr_name (Var_name Y))
                                          (Expr_name (Var_name X))))))
                                   ((c_lhs
                                      ((Pattern_list
                                         ((Pattern_binding (Var_name Z))))))
                                     (c_guard ())
                                     (c_rhs
                                       (Expr_case
                                         (Expr_apply
                                           ((fa_name
                                              (Expr_name
                                                (Atom_name (Atom element))))
                                             (fa_args
                                               ((Expr_name (Var_name I))
                                                 (Expr_name (Var_name Z))))))
                                         (((c_lhs
                                             ((Pattern_binding (Var_name EZ))))
                                            (c_guard
                                              (((Expr_apply
                                                  ((fa_name
                                                     (Expr_name
                                                       (Qualified_name
                                                         (n_mod
                                                           (Atom_name
                                                             (Atom erlang)))
                                                         (n_name
                                                           (Atom_name
                                                             (Atom '=<'))))))
                                                    (fa_args
                                                      ((Expr_name
                                                         (Var_name EX))
                                                        (Expr_name
                                                          (Var_name EZ)))))))))
                                            (c_rhs
                                              (Expr_cons
                                                ((Expr_name (Var_name Y))
                                                  (Expr_name (Var_name X)))
                                                (Expr_name (Var_name T)))))
                                           ((c_lhs
                                              ((Pattern_binding (Var_name EZ))))
                                             (c_guard
                                               (((Expr_apply
                                                   ((fa_name
                                                      (Expr_name
                                                        (Qualified_name
                                                          (n_mod
                                                            (Atom_name
                                                              (Atom erlang)))
                                                          (n_name
                                                            (Atom_name
                                                              (Atom '=<'))))))
                                                     (fa_args
                                                       ((Expr_name
                                                          (Var_name EY))
                                                         (Expr_name
                                                           (Var_name EZ)))))))))
                                             (c_rhs
                                               (Expr_list
                                                 ((Expr_name (Var_name Y))
                                                   (Expr_name (Var_name Z))
                                                   (Expr_name (Var_name X))))))
                                           ((c_lhs
                                              ((Pattern_binding (Var_name _EZ))))
                                             (c_guard ())
                                             (c_rhs
                                               (Expr_list
                                                 ((Expr_name (Var_name Z))
                                                   (Expr_name (Var_name Y))
                                                   (Expr_name (Var_name X))))))))))
                                   ((c_lhs ((Pattern_binding (Var_name _))))
                                     (c_guard ())
                                     (c_rhs
                                       (Expr_apply
                                         ((fa_name
                                            (Expr_name
                                              (Atom_name (Atom keysplit_2))))
                                           (fa_args
                                             ((Expr_name (Var_name I))
                                               (Expr_name (Var_name X))
                                               (Expr_name (Var_name EX))
                                               (Expr_name (Var_name Y))
                                               (Expr_name (Var_name EY))
                                               (Expr_name (Var_name T))
                                               (Expr_list ()) (Expr_list ())))))))))))))))))))))
        (fd_spec ())))
    (Function_decl
      ((fd_name (Atom keysort_1)) (fd_arity 5)
        (fd_cases
          (((c_lhs
              ((Pattern_binding (Var_name I)) (Pattern_binding (Var_name X))
                (Pattern_binding (Var_name EX))
                (Pattern_cons ((Pattern_binding (Var_name Y)))
                  (Pattern_binding (Var_name L)))
                (Pattern_binding (Var_name R))))
             (c_guard
               (((Expr_apply
                   ((fa_name
                      (Expr_name
                        (Qualified_name (n_mod (Atom_name (Atom erlang)))
                          (n_name (Atom_name (Atom '=='))))))
                     (fa_args
                       ((Expr_name (Var_name X)) (Expr_name (Var_name Y)))))))))
             (c_rhs
               (Expr_apply
                 ((fa_name (Expr_name (Atom_name (Atom keysort_1))))
                   (fa_args
                     ((Expr_name (Var_name I)) (Expr_name (Var_name Y))
                       (Expr_name (Var_name EX)) (Expr_name (Var_name L))
                       (Expr_cons ((Expr_name (Var_name X)))
                         (Expr_name (Var_name R)))))))))
            ((c_lhs
               ((Pattern_binding (Var_name I)) (Pattern_binding (Var_name X))
                 (Pattern_binding (Var_name EX))
                 (Pattern_cons ((Pattern_binding (Var_name Y)))
                   (Pattern_binding (Var_name L)))
                 (Pattern_binding (Var_name R))))
              (c_guard ())
              (c_rhs
                (Expr_case
                  (Expr_apply
                    ((fa_name (Expr_name (Atom_name (Atom element))))
                      (fa_args
                        ((Expr_name (Var_name I)) (Expr_name (Var_name Y))))))
                  (((c_lhs ((Pattern_binding (Var_name EY))))
                     (c_guard
                       (((Expr_apply
                           ((fa_name
                              (Expr_name
                                (Qualified_name
                                  (n_mod (Atom_name (Atom erlang)))
                                  (n_name (Atom_name (Atom '=<'))))))
                             (fa_args
                               ((Expr_name (Var_name EX))
                                 (Expr_name (Var_name EY)))))))))
                     (c_rhs
                       (Expr_apply
                         ((fa_name (Expr_name (Atom_name (Atom keysplit_1))))
                           (fa_args
                             ((Expr_name (Var_name I)) (Expr_name (Var_name X))
                               (Expr_name (Var_name EX))
                               (Expr_name (Var_name Y))
                               (Expr_name (Var_name EY))
                               (Expr_name (Var_name L))
                               (Expr_name (Var_name R)) (Expr_list ())))))))
                    ((c_lhs ((Pattern_binding (Var_name EY)))) (c_guard ())
                      (c_rhs
                        (Expr_apply
                          ((fa_name (Expr_name (Atom_name (Atom keysplit_2))))
                            (fa_args
                              ((Expr_name (Var_name I))
                                (Expr_name (Var_name X))
                                (Expr_name (Var_name EX))
                                (Expr_name (Var_name Y))
                                (Expr_name (Var_name EY))
                                (Expr_name (Var_name L))
                                (Expr_name (Var_name R)) (Expr_list ())))))))))))
            ((c_lhs
               ((Pattern_binding (Var_name _I)) (Pattern_binding (Var_name X))
                 (Pattern_binding (Var_name _EX)) (Pattern_list ())
                 (Pattern_binding (Var_name R))))
              (c_guard ())
              (c_rhs
                (Expr_apply
                  ((fa_name
                     (Expr_name
                       (Qualified_name (n_mod (Atom_name (Atom lists)))
                         (n_name (Atom_name (Atom reverse))))))
                    (fa_args
                      ((Expr_name (Var_name R))
                        (Expr_list ((Expr_name (Var_name X))))))))))))
        (fd_spec ())))
    (Type_decl
      ((typ_expr (Type_variable (Var_name TupleList3))) (typ_kind Spec)
        (typ_name (Atom keymerge))
        (typ_params
          ((Type_variable (Var_name N)) (Type_variable (Var_name TupleList1))
            (Type_variable (Var_name TupleList2))))))
    (Function_decl
      ((fd_name (Atom keymerge)) (fd_arity 3)
        (fd_cases
          (((c_lhs
              ((Pattern_binding (Var_name Index))
                (Pattern_binding (Var_name T1))
                (Pattern_binding (Var_name L2))))
             (c_guard
               (((Expr_apply
                   ((fa_name (Expr_name (Atom_name (Atom is_integer))))
                     (fa_args ((Expr_name (Var_name Index))))))
                  (Expr_apply
                    ((fa_name
                       (Expr_name
                         (Qualified_name (n_mod (Atom_name (Atom erlang)))
                           (n_name (Atom_name (Atom '>'))))))
                      (fa_args
                        ((Expr_name (Var_name Index))
                          (Expr_literal (Lit_integer 0)))))))))
             (c_rhs
               (Expr_case (Expr_name (Var_name L2))
                 (((c_lhs ((Pattern_list ()))) (c_guard ())
                    (c_rhs (Expr_name (Var_name T1))))
                   ((c_lhs
                      ((Pattern_cons ((Pattern_binding (Var_name H2)))
                         (Pattern_binding (Var_name T2)))))
                     (c_guard ())
                     (c_rhs
                       (Expr_let
                         ((lb_lhs (Pattern_binding (Var_name E2)))
                           (lb_rhs
                             (Expr_apply
                               ((fa_name
                                  (Expr_name (Atom_name (Atom element))))
                                 (fa_args
                                   ((Expr_name (Var_name Index))
                                     (Expr_name (Var_name H2))))))))
                         (Expr_let
                           ((lb_lhs (Pattern_binding (Var_name M)))
                             (lb_rhs
                               (Expr_apply
                                 ((fa_name
                                    (Expr_name (Atom_name (Atom keymerge2_1))))
                                   (fa_args
                                     ((Expr_name (Var_name Index))
                                       (Expr_name (Var_name T1))
                                       (Expr_name (Var_name E2))
                                       (Expr_name (Var_name H2))
                                       (Expr_name (Var_name T2))
                                       (Expr_list ())))))))
                           (Expr_apply
                             ((fa_name
                                (Expr_name
                                  (Qualified_name
                                    (n_mod (Atom_name (Atom lists)))
                                    (n_name (Atom_name (Atom reverse))))))
                               (fa_args
                                 ((Expr_name (Var_name M)) (Expr_list ())))))))))))))))
        (fd_spec ())))
    (Module_comment
      (Comment
        "% reverse(rkeymerge(I,reverse(A),reverse(B))) is equal to keymerge(I,A,B)."))
    (Type_decl
      ((typ_expr (Type_list (Type_variable (Var_name R)))) (typ_kind Spec)
        (typ_name (Atom rkeymerge))
        (typ_params
          ((Type_constr
             ((tc_name (Atom_name (Atom pos_integer))) (tc_args ())))
            (Type_list (Type_variable (Var_name X)))
            (Type_list (Type_variable (Var_name Y)))))))
    (Function_decl
      ((fd_name (Atom rkeymerge)) (fd_arity 3)
        (fd_cases
          (((c_lhs
              ((Pattern_binding (Var_name Index))
                (Pattern_binding (Var_name T1))
                (Pattern_binding (Var_name L2))))
             (c_guard
               (((Expr_apply
                   ((fa_name (Expr_name (Atom_name (Atom is_integer))))
                     (fa_args ((Expr_name (Var_name Index))))))
                  (Expr_apply
                    ((fa_name
                       (Expr_name
                         (Qualified_name (n_mod (Atom_name (Atom erlang)))
                           (n_name (Atom_name (Atom '>'))))))
                      (fa_args
                        ((Expr_name (Var_name Index))
                          (Expr_literal (Lit_integer 0)))))))))
             (c_rhs
               (Expr_case (Expr_name (Var_name L2))
                 (((c_lhs ((Pattern_list ()))) (c_guard ())
                    (c_rhs (Expr_name (Var_name T1))))
                   ((c_lhs
                      ((Pattern_cons ((Pattern_binding (Var_name H2)))
                         (Pattern_binding (Var_name T2)))))
                     (c_guard ())
                     (c_rhs
                       (Expr_let
                         ((lb_lhs (Pattern_binding (Var_name E2)))
                           (lb_rhs
                             (Expr_apply
                               ((fa_name
                                  (Expr_name (Atom_name (Atom element))))
                                 (fa_args
                                   ((Expr_name (Var_name Index))
                                     (Expr_name (Var_name H2))))))))
                         (Expr_let
                           ((lb_lhs (Pattern_binding (Var_name M)))
                             (lb_rhs
                               (Expr_apply
                                 ((fa_name
                                    (Expr_name (Atom_name (Atom rkeymerge2_1))))
                                   (fa_args
                                     ((Expr_name (Var_name Index))
                                       (Expr_name (Var_name T1))
                                       (Expr_name (Var_name E2))
                                       (Expr_name (Var_name H2))
                                       (Expr_name (Var_name T2))
                                       (Expr_list ())))))))
                           (Expr_apply
                             ((fa_name
                                (Expr_name
                                  (Qualified_name
                                    (n_mod (Atom_name (Atom lists)))
                                    (n_name (Atom_name (Atom reverse))))))
                               (fa_args
                                 ((Expr_name (Var_name M)) (Expr_list ())))))))))))))))
        (fd_spec ())))
    (Type_decl
      ((typ_expr (Type_variable (Var_name TupleList2))) (typ_kind Spec)
        (typ_name (Atom ukeysort))
        (typ_params
          ((Type_variable (Var_name N)) (Type_variable (Var_name TupleList1))))))
    (Function_decl
      ((fd_name (Atom ukeysort)) (fd_arity 2)
        (fd_cases
          (((c_lhs
              ((Pattern_binding (Var_name I)) (Pattern_binding (Var_name L))))
             (c_guard
               (((Expr_apply
                   ((fa_name (Expr_name (Atom_name (Atom is_integer))))
                     (fa_args ((Expr_name (Var_name I))))))
                  (Expr_apply
                    ((fa_name
                       (Expr_name
                         (Qualified_name (n_mod (Atom_name (Atom erlang)))
                           (n_name (Atom_name (Atom '>'))))))
                      (fa_args
                        ((Expr_name (Var_name I))
                          (Expr_literal (Lit_integer 0)))))))))
             (c_rhs
               (Expr_case (Expr_name (Var_name L))
                 (((c_lhs ((Pattern_list ()))) (c_guard ())
                    (c_rhs (Expr_name (Var_name L))))
                   ((c_lhs ((Pattern_list ((Pattern_binding (Var_name _))))))
                     (c_guard ()) (c_rhs (Expr_name (Var_name L))))
                   ((c_lhs
                      ((Pattern_cons
                         ((Pattern_binding (Var_name X))
                           (Pattern_binding (Var_name Y)))
                         (Pattern_binding (Var_name T)))))
                     (c_guard ())
                     (c_rhs
                       (Expr_case
                         (Expr_tuple
                           ((Expr_apply
                              ((fa_name (Expr_name (Atom_name (Atom element))))
                                (fa_args
                                  ((Expr_name (Var_name I))
                                    (Expr_name (Var_name X))))))
                             (Expr_apply
                               ((fa_name
                                  (Expr_name (Atom_name (Atom element))))
                                 (fa_args
                                   ((Expr_name (Var_name I))
                                     (Expr_name (Var_name Y))))))))
                         (((c_lhs
                             ((Pattern_tuple
                                ((Pattern_binding (Var_name EX))
                                  (Pattern_binding (Var_name EY))))))
                            (c_guard
                              (((Expr_apply
                                  ((fa_name
                                     (Expr_name
                                       (Qualified_name
                                         (n_mod (Atom_name (Atom erlang)))
                                         (n_name (Atom_name (Atom '=='))))))
                                    (fa_args
                                      ((Expr_name (Var_name EX))
                                        (Expr_name (Var_name EY)))))))))
                            (c_rhs
                              (Expr_apply
                                ((fa_name
                                   (Expr_name (Atom_name (Atom ukeysort_1))))
                                  (fa_args
                                    ((Expr_name (Var_name I))
                                      (Expr_name (Var_name X))
                                      (Expr_name (Var_name EX))
                                      (Expr_name (Var_name T))))))))
                           ((c_lhs
                              ((Pattern_tuple
                                 ((Pattern_binding (Var_name EX))
                                   (Pattern_binding (Var_name EY))))))
                             (c_guard
                               (((Expr_apply
                                   ((fa_name
                                      (Expr_name
                                        (Qualified_name
                                          (n_mod (Atom_name (Atom erlang)))
                                          (n_name (Atom_name (Atom '<'))))))
                                     (fa_args
                                       ((Expr_name (Var_name EX))
                                         (Expr_name (Var_name EY)))))))))
                             (c_rhs
                               (Expr_case (Expr_name (Var_name T))
                                 (((c_lhs ((Pattern_list ()))) (c_guard ())
                                    (c_rhs (Expr_name (Var_name L))))
                                   ((c_lhs
                                      ((Pattern_list
                                         ((Pattern_binding (Var_name Z))))))
                                     (c_guard ())
                                     (c_rhs
                                       (Expr_case
                                         (Expr_apply
                                           ((fa_name
                                              (Expr_name
                                                (Atom_name (Atom element))))
                                             (fa_args
                                               ((Expr_name (Var_name I))
                                                 (Expr_name (Var_name Z))))))
                                         (((c_lhs
                                             ((Pattern_binding (Var_name EZ))))
                                            (c_guard
                                              (((Expr_apply
                                                  ((fa_name
                                                     (Expr_name
                                                       (Qualified_name
                                                         (n_mod
                                                           (Atom_name
                                                             (Atom erlang)))
                                                         (n_name
                                                           (Atom_name
                                                             (Atom '=='))))))
                                                    (fa_args
                                                      ((Expr_name
                                                         (Var_name EY))
                                                        (Expr_name
                                                          (Var_name EZ)))))))))
                                            (c_rhs
                                              (Expr_list
                                                ((Expr_name (Var_name X))
                                                  (Expr_name (Var_name Y))))))
                                           ((c_lhs
                                              ((Pattern_binding (Var_name EZ))))
                                             (c_guard
                                               (((Expr_apply
                                                   ((fa_name
                                                      (Expr_name
                                                        (Qualified_name
                                                          (n_mod
                                                            (Atom_name
                                                              (Atom erlang)))
                                                          (n_name
                                                            (Atom_name
                                                              (Atom '<'))))))
                                                     (fa_args
                                                       ((Expr_name
                                                          (Var_name EY))
                                                         (Expr_name
                                                           (Var_name EZ)))))))))
                                             (c_rhs
                                               (Expr_list
                                                 ((Expr_name (Var_name X))
                                                   (Expr_name (Var_name Y))
                                                   (Expr_name (Var_name Z))))))
                                           ((c_lhs
                                              ((Pattern_binding (Var_name EZ))))
                                             (c_guard
                                               (((Expr_apply
                                                   ((fa_name
                                                      (Expr_name
                                                        (Qualified_name
                                                          (n_mod
                                                            (Atom_name
                                                              (Atom erlang)))
                                                          (n_name
                                                            (Atom_name
                                                              (Atom '=='))))))
                                                     (fa_args
                                                       ((Expr_name
                                                          (Var_name EZ))
                                                         (Expr_name
                                                           (Var_name EX)))))))))
                                             (c_rhs
                                               (Expr_list
                                                 ((Expr_name (Var_name X))
                                                   (Expr_name (Var_name Y))))))
                                           ((c_lhs
                                              ((Pattern_binding (Var_name EZ))))
                                             (c_guard
                                               (((Expr_apply
                                                   ((fa_name
                                                      (Expr_name
                                                        (Qualified_name
                                                          (n_mod
                                                            (Atom_name
                                                              (Atom erlang)))
                                                          (n_name
                                                            (Atom_name
                                                              (Atom '=<'))))))
                                                     (fa_args
                                                       ((Expr_name
                                                          (Var_name EX))
                                                         (Expr_name
                                                           (Var_name EZ)))))))))
                                             (c_rhs
                                               (Expr_list
                                                 ((Expr_name (Var_name X))
                                                   (Expr_name (Var_name Z))
                                                   (Expr_name (Var_name Y))))))
                                           ((c_lhs
                                              ((Pattern_binding (Var_name _EZ))))
                                             (c_guard ())
                                             (c_rhs
                                               (Expr_list
                                                 ((Expr_name (Var_name Z))
                                                   (Expr_name (Var_name X))
                                                   (Expr_name (Var_name Y))))))))))
                                   ((c_lhs ((Pattern_binding (Var_name _))))
                                     (c_guard ())
                                     (c_rhs
                                       (Expr_apply
                                         ((fa_name
                                            (Expr_name
                                              (Atom_name (Atom ukeysplit_1))))
                                           (fa_args
                                             ((Expr_name (Var_name I))
                                               (Expr_name (Var_name X))
                                               (Expr_name (Var_name EX))
                                               (Expr_name (Var_name Y))
                                               (Expr_name (Var_name EY))
                                               (Expr_name (Var_name T))
                                               (Expr_list ()) (Expr_list ())))))))))))
                           ((c_lhs
                              ((Pattern_tuple
                                 ((Pattern_binding (Var_name EX))
                                   (Pattern_binding (Var_name EY))))))
                             (c_guard ())
                             (c_rhs
                               (Expr_case (Expr_name (Var_name T))
                                 (((c_lhs ((Pattern_list ()))) (c_guard ())
                                    (c_rhs
                                      (Expr_list
                                        ((Expr_name (Var_name Y))
                                          (Expr_name (Var_name X))))))
                                   ((c_lhs
                                      ((Pattern_list
                                         ((Pattern_binding (Var_name Z))))))
                                     (c_guard ())
                                     (c_rhs
                                       (Expr_case
                                         (Expr_apply
                                           ((fa_name
                                              (Expr_name
                                                (Atom_name (Atom element))))
                                             (fa_args
                                               ((Expr_name (Var_name I))
                                                 (Expr_name (Var_name Z))))))
                                         (((c_lhs
                                             ((Pattern_binding (Var_name EZ))))
                                            (c_guard
                                              (((Expr_apply
                                                  ((fa_name
                                                     (Expr_name
                                                       (Qualified_name
                                                         (n_mod
                                                           (Atom_name
                                                             (Atom erlang)))
                                                         (n_name
                                                           (Atom_name
                                                             (Atom '=='))))))
                                                    (fa_args
                                                      ((Expr_name
                                                         (Var_name EX))
                                                        (Expr_name
                                                          (Var_name EZ)))))))))
                                            (c_rhs
                                              (Expr_list
                                                ((Expr_name (Var_name Y))
                                                  (Expr_name (Var_name X))))))
                                           ((c_lhs
                                              ((Pattern_binding (Var_name EZ))))
                                             (c_guard
                                               (((Expr_apply
                                                   ((fa_name
                                                      (Expr_name
                                                        (Qualified_name
                                                          (n_mod
                                                            (Atom_name
                                                              (Atom erlang)))
                                                          (n_name
                                                            (Atom_name
                                                              (Atom '<'))))))
                                                     (fa_args
                                                       ((Expr_name
                                                          (Var_name EX))
                                                         (Expr_name
                                                           (Var_name EZ)))))))))
                                             (c_rhs
                                               (Expr_list
                                                 ((Expr_name (Var_name Y))
                                                   (Expr_name (Var_name X))
                                                   (Expr_name (Var_name Z))))))
                                           ((c_lhs
                                              ((Pattern_binding (Var_name EZ))))
                                             (c_guard
                                               (((Expr_apply
                                                   ((fa_name
                                                      (Expr_name
                                                        (Qualified_name
                                                          (n_mod
                                                            (Atom_name
                                                              (Atom erlang)))
                                                          (n_name
                                                            (Atom_name
                                                              (Atom '=='))))))
                                                     (fa_args
                                                       ((Expr_name
                                                          (Var_name EY))
                                                         (Expr_name
                                                           (Var_name EZ)))))))))
                                             (c_rhs
                                               (Expr_list
                                                 ((Expr_name (Var_name Y))
                                                   (Expr_name (Var_name X))))))
                                           ((c_lhs
                                              ((Pattern_binding (Var_name EZ))))
                                             (c_guard
                                               (((Expr_apply
                                                   ((fa_name
                                                      (Expr_name
                                                        (Qualified_name
                                                          (n_mod
                                                            (Atom_name
                                                              (Atom erlang)))
                                                          (n_name
                                                            (Atom_name
                                                              (Atom '=<'))))))
                                                     (fa_args
                                                       ((Expr_name
                                                          (Var_name EY))
                                                         (Expr_name
                                                           (Var_name EZ)))))))))
                                             (c_rhs
                                               (Expr_list
                                                 ((Expr_name (Var_name Y))
                                                   (Expr_name (Var_name Z))
                                                   (Expr_name (Var_name X))))))
                                           ((c_lhs
                                              ((Pattern_binding (Var_name _EZ))))
                                             (c_guard ())
                                             (c_rhs
                                               (Expr_list
                                                 ((Expr_name (Var_name Z))
                                                   (Expr_name (Var_name Y))
                                                   (Expr_name (Var_name X))))))))))
                                   ((c_lhs ((Pattern_binding (Var_name _))))
                                     (c_guard ())
                                     (c_rhs
                                       (Expr_apply
                                         ((fa_name
                                            (Expr_name
                                              (Atom_name (Atom ukeysplit_2))))
                                           (fa_args
                                             ((Expr_name (Var_name I))
                                               (Expr_name (Var_name Y))
                                               (Expr_name (Var_name EY))
                                               (Expr_name (Var_name T))
                                               (Expr_list
                                                 ((Expr_name (Var_name X))))))))))))))))))))))))
        (fd_spec ())))
    (Function_decl
      ((fd_name (Atom ukeysort_1)) (fd_arity 4)
        (fd_cases
          (((c_lhs
              ((Pattern_binding (Var_name I)) (Pattern_binding (Var_name X))
                (Pattern_binding (Var_name EX))
                (Pattern_cons ((Pattern_binding (Var_name Y)))
                  (Pattern_binding (Var_name L)))))
             (c_guard ())
             (c_rhs
               (Expr_case
                 (Expr_apply
                   ((fa_name (Expr_name (Atom_name (Atom element))))
                     (fa_args
                       ((Expr_name (Var_name I)) (Expr_name (Var_name Y))))))
                 (((c_lhs ((Pattern_binding (Var_name EY))))
                    (c_guard
                      (((Expr_apply
                          ((fa_name
                             (Expr_name
                               (Qualified_name
                                 (n_mod (Atom_name (Atom erlang)))
                                 (n_name (Atom_name (Atom '=='))))))
                            (fa_args
                              ((Expr_name (Var_name EX))
                                (Expr_name (Var_name EY)))))))))
                    (c_rhs
                      (Expr_apply
                        ((fa_name (Expr_name (Atom_name (Atom ukeysort_1))))
                          (fa_args
                            ((Expr_name (Var_name I)) (Expr_name (Var_name X))
                              (Expr_name (Var_name EX))
                              (Expr_name (Var_name L))))))))
                   ((c_lhs ((Pattern_binding (Var_name EY))))
                     (c_guard
                       (((Expr_apply
                           ((fa_name
                              (Expr_name
                                (Qualified_name
                                  (n_mod (Atom_name (Atom erlang)))
                                  (n_name (Atom_name (Atom '<'))))))
                             (fa_args
                               ((Expr_name (Var_name EX))
                                 (Expr_name (Var_name EY)))))))))
                     (c_rhs
                       (Expr_apply
                         ((fa_name (Expr_name (Atom_name (Atom ukeysplit_1))))
                           (fa_args
                             ((Expr_name (Var_name I)) (Expr_name (Var_name X))
                               (Expr_name (Var_name EX))
                               (Expr_name (Var_name Y))
                               (Expr_name (Var_name EY))
                               (Expr_name (Var_name L)) (Expr_list ())
                               (Expr_list ())))))))
                   ((c_lhs ((Pattern_binding (Var_name EY)))) (c_guard ())
                     (c_rhs
                       (Expr_apply
                         ((fa_name (Expr_name (Atom_name (Atom ukeysplit_2))))
                           (fa_args
                             ((Expr_name (Var_name I)) (Expr_name (Var_name Y))
                               (Expr_name (Var_name EY))
                               (Expr_name (Var_name L))
                               (Expr_list ((Expr_name (Var_name X))))))))))))))
            ((c_lhs
               ((Pattern_binding (Var_name _I)) (Pattern_binding (Var_name X))
                 (Pattern_binding (Var_name _EX)) (Pattern_list ())))
              (c_guard ()) (c_rhs (Expr_list ((Expr_name (Var_name X))))))))
        (fd_spec ())))
    (Type_decl
      ((typ_expr (Type_variable (Var_name TupleList3))) (typ_kind Spec)
        (typ_name (Atom ukeymerge))
        (typ_params
          ((Type_variable (Var_name N)) (Type_variable (Var_name TupleList1))
            (Type_variable (Var_name TupleList2))))))
    (Function_decl
      ((fd_name (Atom ukeymerge)) (fd_arity 3)
        (fd_cases
          (((c_lhs
              ((Pattern_binding (Var_name Index))
                (Pattern_binding (Var_name L1))
                (Pattern_binding (Var_name T2))))
             (c_guard
               (((Expr_apply
                   ((fa_name (Expr_name (Atom_name (Atom is_integer))))
                     (fa_args ((Expr_name (Var_name Index))))))
                  (Expr_apply
                    ((fa_name
                       (Expr_name
                         (Qualified_name (n_mod (Atom_name (Atom erlang)))
                           (n_name (Atom_name (Atom '>'))))))
                      (fa_args
                        ((Expr_name (Var_name Index))
                          (Expr_literal (Lit_integer 0)))))))))
             (c_rhs
               (Expr_case (Expr_name (Var_name L1))
                 (((c_lhs ((Pattern_list ()))) (c_guard ())
                    (c_rhs (Expr_name (Var_name T2))))
                   ((c_lhs
                      ((Pattern_cons ((Pattern_binding (Var_name H1)))
                         (Pattern_binding (Var_name T1)))))
                     (c_guard ())
                     (c_rhs
                       (Expr_let
                         ((lb_lhs (Pattern_binding (Var_name E1)))
                           (lb_rhs
                             (Expr_apply
                               ((fa_name
                                  (Expr_name (Atom_name (Atom element))))
                                 (fa_args
                                   ((Expr_name (Var_name Index))
                                     (Expr_name (Var_name H1))))))))
                         (Expr_let
                           ((lb_lhs (Pattern_binding (Var_name M)))
                             (lb_rhs
                               (Expr_apply
                                 ((fa_name
                                    (Expr_name (Atom_name (Atom ukeymerge2_2))))
                                   (fa_args
                                     ((Expr_name (Var_name Index))
                                       (Expr_name (Var_name T1))
                                       (Expr_name (Var_name E1))
                                       (Expr_name (Var_name H1))
                                       (Expr_name (Var_name T2))
                                       (Expr_list ())))))))
                           (Expr_apply
                             ((fa_name
                                (Expr_name
                                  (Qualified_name
                                    (n_mod (Atom_name (Atom lists)))
                                    (n_name (Atom_name (Atom reverse))))))
                               (fa_args
                                 ((Expr_name (Var_name M)) (Expr_list ())))))))))))))))
        (fd_spec ())))
    (Module_comment
      (Comment
        "% reverse(rukeymerge(I,reverse(A),reverse(B))) is equal to ukeymerge(I,A,B)."))
    (Type_decl
      ((typ_expr
         (Type_list
           (Type_variant
             ((Type_variable (Var_name X)) (Type_variable (Var_name Y))))))
        (typ_kind Spec) (typ_name (Atom rukeymerge))
        (typ_params
          ((Type_constr
             ((tc_name (Atom_name (Atom pos_integer))) (tc_args ())))
            (Type_list (Type_variable (Var_name X)))
            (Type_list (Type_variable (Var_name Y)))))))
    (Function_decl
      ((fd_name (Atom rukeymerge)) (fd_arity 3)
        (fd_cases
          (((c_lhs
              ((Pattern_binding (Var_name Index))
                (Pattern_binding (Var_name T1))
                (Pattern_binding (Var_name L2))))
             (c_guard
               (((Expr_apply
                   ((fa_name (Expr_name (Atom_name (Atom is_integer))))
                     (fa_args ((Expr_name (Var_name Index))))))
                  (Expr_apply
                    ((fa_name
                       (Expr_name
                         (Qualified_name (n_mod (Atom_name (Atom erlang)))
                           (n_name (Atom_name (Atom '>'))))))
                      (fa_args
                        ((Expr_name (Var_name Index))
                          (Expr_literal (Lit_integer 0)))))))))
             (c_rhs
               (Expr_case (Expr_name (Var_name L2))
                 (((c_lhs ((Pattern_list ()))) (c_guard ())
                    (c_rhs (Expr_name (Var_name T1))))
                   ((c_lhs
                      ((Pattern_cons ((Pattern_binding (Var_name H2)))
                         (Pattern_binding (Var_name T2)))))
                     (c_guard ())
                     (c_rhs
                       (Expr_let
                         ((lb_lhs (Pattern_binding (Var_name E2)))
                           (lb_rhs
                             (Expr_apply
                               ((fa_name
                                  (Expr_name (Atom_name (Atom element))))
                                 (fa_args
                                   ((Expr_name (Var_name Index))
                                     (Expr_name (Var_name H2))))))))
                         (Expr_let
                           ((lb_lhs (Pattern_binding (Var_name M)))
                             (lb_rhs
                               (Expr_apply
                                 ((fa_name
                                    (Expr_name
                                      (Atom_name (Atom rukeymerge2_1))))
                                   (fa_args
                                     ((Expr_name (Var_name Index))
                                       (Expr_name (Var_name T1))
                                       (Expr_name (Var_name E2))
                                       (Expr_name (Var_name T2)) (Expr_list ())
                                       (Expr_name (Var_name H2))))))))
                           (Expr_apply
                             ((fa_name
                                (Expr_name
                                  (Qualified_name
                                    (n_mod (Atom_name (Atom lists)))
                                    (n_name (Atom_name (Atom reverse))))))
                               (fa_args
                                 ((Expr_name (Var_name M)) (Expr_list ())))))))))))))))
        (fd_spec ())))
    (Type_decl
      ((typ_expr (Type_variable (Var_name TupleList2))) (typ_kind Spec)
        (typ_name (Atom keymap))
        (typ_params
          ((Type_variable (Var_name Fun)) (Type_variable (Var_name N))
            (Type_variable (Var_name TupleList1))))))
    (Function_decl
      ((fd_name (Atom keymap)) (fd_arity 3)
        (fd_cases
          (((c_lhs
              ((Pattern_binding (Var_name Fun))
                (Pattern_binding (Var_name Index))
                (Pattern_cons ((Pattern_binding (Var_name Tup)))
                  (Pattern_binding (Var_name Tail)))))
             (c_guard ())
             (c_rhs
               (Expr_cons
                 ((Expr_apply
                    ((fa_name (Expr_name (Atom_name (Atom setelement))))
                      (fa_args
                        ((Expr_name (Var_name Index))
                          (Expr_name (Var_name Tup))
                          (Expr_apply
                            ((fa_name (Expr_name (Var_name Fun)))
                              (fa_args
                                ((Expr_apply
                                   ((fa_name
                                      (Expr_name (Atom_name (Atom element))))
                                     (fa_args
                                       ((Expr_name (Var_name Index))
                                         (Expr_name (Var_name Tup)))))))))))))))
                 (Expr_apply
                   ((fa_name (Expr_name (Atom_name (Atom keymap))))
                     (fa_args
                       ((Expr_name (Var_name Fun)) (Expr_name (Var_name Index))
                         (Expr_name (Var_name Tail)))))))))
            ((c_lhs
               ((Pattern_binding (Var_name Fun))
                 (Pattern_binding (Var_name Index)) (Pattern_list ())))
              (c_guard
                (((Expr_apply
                    ((fa_name (Expr_name (Atom_name (Atom is_integer))))
                      (fa_args ((Expr_name (Var_name Index))))))
                   (Expr_apply
                     ((fa_name
                        (Expr_name
                          (Qualified_name (n_mod (Atom_name (Atom erlang)))
                            (n_name (Atom_name (Atom '>='))))))
                       (fa_args
                         ((Expr_name (Var_name Index))
                           (Expr_literal (Lit_integer 1))))))
                   (Expr_apply
                     ((fa_name (Expr_name (Atom_name (Atom is_function))))
                       (fa_args
                         ((Expr_name (Var_name Fun))
                           (Expr_literal (Lit_integer 1)))))))))
              (c_rhs (Expr_list ())))))
        (fd_spec ())))
    (Module_comment
      (Comment "%% Suggestion from OTP-2948: sort and merge with Fun."))
    (Type_decl
      ((typ_expr (Type_variable (Var_name List2))) (typ_kind Spec)
        (typ_name (Atom sort))
        (typ_params
          ((Type_variable (Var_name Fun)) (Type_variable (Var_name List1))))))
    (Function_decl
      ((fd_name (Atom sort)) (fd_arity 2)
        (fd_cases
          (((c_lhs ((Pattern_binding (Var_name Fun)) (Pattern_list ())))
             (c_guard
               (((Expr_apply
                   ((fa_name (Expr_name (Atom_name (Atom is_function))))
                     (fa_args
                       ((Expr_name (Var_name Fun))
                         (Expr_literal (Lit_integer 2)))))))))
             (c_rhs (Expr_list ())))
            ((c_lhs
               ((Pattern_binding (Var_name Fun))
                 (Pattern_with_name
                   (Pattern_list ((Pattern_binding (Var_name _))))
                   (Pattern_binding (Var_name L)))))
              (c_guard
                (((Expr_apply
                    ((fa_name (Expr_name (Atom_name (Atom is_function))))
                      (fa_args
                        ((Expr_name (Var_name Fun))
                          (Expr_literal (Lit_integer 2)))))))))
              (c_rhs (Expr_name (Var_name L))))
            ((c_lhs
               ((Pattern_binding (Var_name Fun))
                 (Pattern_cons
                   ((Pattern_binding (Var_name X))
                     (Pattern_binding (Var_name Y)))
                   (Pattern_binding (Var_name T)))))
              (c_guard ())
              (c_rhs
                (Expr_case
                  (Expr_apply
                    ((fa_name (Expr_name (Var_name Fun)))
                      (fa_args
                        ((Expr_name (Var_name X)) (Expr_name (Var_name Y))))))
                  (((c_lhs ((Pattern_match (Lit_atom (Atom true)))))
                     (c_guard ())
                     (c_rhs
                       (Expr_apply
                         ((fa_name (Expr_name (Atom_name (Atom fsplit_1))))
                           (fa_args
                             ((Expr_name (Var_name Y)) (Expr_name (Var_name X))
                               (Expr_name (Var_name Fun))
                               (Expr_name (Var_name T)) (Expr_list ())
                               (Expr_list ())))))))
                    ((c_lhs ((Pattern_match (Lit_atom (Atom false)))))
                      (c_guard ())
                      (c_rhs
                        (Expr_apply
                          ((fa_name (Expr_name (Atom_name (Atom fsplit_2))))
                            (fa_args
                              ((Expr_name (Var_name Y))
                                (Expr_name (Var_name X))
                                (Expr_name (Var_name Fun))
                                (Expr_name (Var_name T)) (Expr_list ())
                                (Expr_list ())))))))))))))
        (fd_spec ())))
    (Type_decl
      ((typ_expr (Type_variable (Var_name List3))) (typ_kind Spec)
        (typ_name (Atom merge))
        (typ_params
          ((Type_variable (Var_name Fun)) (Type_variable (Var_name List1))
            (Type_variable (Var_name List2))))))
    (Function_decl
      ((fd_name (Atom merge)) (fd_arity 3)
        (fd_cases
          (((c_lhs
              ((Pattern_binding (Var_name Fun)) (Pattern_binding (Var_name T1))
                (Pattern_cons ((Pattern_binding (Var_name H2)))
                  (Pattern_binding (Var_name T2)))))
             (c_guard
               (((Expr_apply
                   ((fa_name (Expr_name (Atom_name (Atom is_function))))
                     (fa_args
                       ((Expr_name (Var_name Fun))
                         (Expr_literal (Lit_integer 2)))))))))
             (c_rhs
               (Expr_apply
                 ((fa_name
                    (Expr_name
                      (Qualified_name (n_mod (Atom_name (Atom lists)))
                        (n_name (Atom_name (Atom reverse))))))
                   (fa_args
                     ((Expr_apply
                        ((fa_name (Expr_name (Atom_name (Atom fmerge2_1))))
                          (fa_args
                            ((Expr_name (Var_name T1))
                              (Expr_name (Var_name H2))
                              (Expr_name (Var_name Fun))
                              (Expr_name (Var_name T2)) (Expr_list ())))))
                       (Expr_list ())))))))
            ((c_lhs
               ((Pattern_binding (Var_name Fun))
                 (Pattern_binding (Var_name T1)) (Pattern_list ())))
              (c_guard
                (((Expr_apply
                    ((fa_name (Expr_name (Atom_name (Atom is_function))))
                      (fa_args
                        ((Expr_name (Var_name Fun))
                          (Expr_literal (Lit_integer 2)))))))))
              (c_rhs (Expr_name (Var_name T1))))))
        (fd_spec ())))
    (Module_comment
      (Comment
        "% reverse(rmerge(F,reverse(A),reverse(B))) is equal to merge(F,A,B)."))
    (Type_decl
      ((typ_expr
         (Type_list
           (Type_variant
             ((Type_variable (Var_name X)) (Type_variable (Var_name Y))))))
        (typ_kind Spec) (typ_name (Atom rmerge))
        (typ_params
          ((Type_function
             (tyfun_args
               ((Type_variable (Var_name X)) (Type_variable (Var_name Y))))
             (tyfun_return
               (Type_constr
                 ((tc_name (Atom_name (Atom boolean))) (tc_args ())))))
            (Type_list (Type_variable (Var_name X)))
            (Type_list (Type_variable (Var_name Y)))))))
    (Function_decl
      ((fd_name (Atom rmerge)) (fd_arity 3)
        (fd_cases
          (((c_lhs
              ((Pattern_binding (Var_name Fun)) (Pattern_binding (Var_name T1))
                (Pattern_cons ((Pattern_binding (Var_name H2)))
                  (Pattern_binding (Var_name T2)))))
             (c_guard
               (((Expr_apply
                   ((fa_name (Expr_name (Atom_name (Atom is_function))))
                     (fa_args
                       ((Expr_name (Var_name Fun))
                         (Expr_literal (Lit_integer 2)))))))))
             (c_rhs
               (Expr_apply
                 ((fa_name
                    (Expr_name
                      (Qualified_name (n_mod (Atom_name (Atom lists)))
                        (n_name (Atom_name (Atom reverse))))))
                   (fa_args
                     ((Expr_apply
                        ((fa_name (Expr_name (Atom_name (Atom rfmerge2_1))))
                          (fa_args
                            ((Expr_name (Var_name T1))
                              (Expr_name (Var_name H2))
                              (Expr_name (Var_name Fun))
                              (Expr_name (Var_name T2)) (Expr_list ())))))
                       (Expr_list ())))))))
            ((c_lhs
               ((Pattern_binding (Var_name Fun))
                 (Pattern_binding (Var_name T1)) (Pattern_list ())))
              (c_guard
                (((Expr_apply
                    ((fa_name (Expr_name (Atom_name (Atom is_function))))
                      (fa_args
                        ((Expr_name (Var_name Fun))
                          (Expr_literal (Lit_integer 2)))))))))
              (c_rhs (Expr_name (Var_name T1))))))
        (fd_spec ())))
    (Type_decl
      ((typ_expr (Type_variable (Var_name List2))) (typ_kind Spec)
        (typ_name (Atom usort))
        (typ_params
          ((Type_variable (Var_name Fun)) (Type_variable (Var_name List1))))))
    (Function_decl
      ((fd_name (Atom usort)) (fd_arity 2)
        (fd_cases
          (((c_lhs
              ((Pattern_binding (Var_name Fun))
                (Pattern_with_name
                  (Pattern_list ((Pattern_binding (Var_name _))))
                  (Pattern_binding (Var_name L)))))
             (c_guard
               (((Expr_apply
                   ((fa_name (Expr_name (Atom_name (Atom is_function))))
                     (fa_args
                       ((Expr_name (Var_name Fun))
                         (Expr_literal (Lit_integer 2)))))))))
             (c_rhs (Expr_name (Var_name L))))
            ((c_lhs
               ((Pattern_binding (Var_name Fun))
                 (Pattern_with_name (Pattern_list ())
                   (Pattern_binding (Var_name L)))))
              (c_guard
                (((Expr_apply
                    ((fa_name (Expr_name (Atom_name (Atom is_function))))
                      (fa_args
                        ((Expr_name (Var_name Fun))
                          (Expr_literal (Lit_integer 2)))))))))
              (c_rhs (Expr_name (Var_name L))))
            ((c_lhs
               ((Pattern_binding (Var_name Fun))
                 (Pattern_cons ((Pattern_binding (Var_name X)))
                   (Pattern_binding (Var_name L)))))
              (c_guard
                (((Expr_apply
                    ((fa_name (Expr_name (Atom_name (Atom is_function))))
                      (fa_args
                        ((Expr_name (Var_name Fun))
                          (Expr_literal (Lit_integer 2)))))))))
              (c_rhs
                (Expr_apply
                  ((fa_name (Expr_name (Atom_name (Atom usort_1))))
                    (fa_args
                      ((Expr_name (Var_name Fun)) (Expr_name (Var_name X))
                        (Expr_name (Var_name L))))))))))
        (fd_spec ())))
    (Function_decl
      ((fd_name (Atom usort_1)) (fd_arity 3)
        (fd_cases
          (((c_lhs
              ((Pattern_binding (Var_name Fun)) (Pattern_binding (Var_name X))
                (Pattern_cons ((Pattern_binding (Var_name Y)))
                  (Pattern_binding (Var_name L)))))
             (c_guard ())
             (c_rhs
               (Expr_case
                 (Expr_apply
                   ((fa_name (Expr_name (Var_name Fun)))
                     (fa_args
                       ((Expr_name (Var_name X)) (Expr_name (Var_name Y))))))
                 (((c_lhs ((Pattern_match (Lit_atom (Atom true)))))
                    (c_guard ())
                    (c_rhs
                      (Expr_case
                        (Expr_apply
                          ((fa_name (Expr_name (Var_name Fun)))
                            (fa_args
                              ((Expr_name (Var_name Y))
                                (Expr_name (Var_name X))))))
                        (((c_lhs ((Pattern_match (Lit_atom (Atom true)))))
                           (c_guard ())
                           (c_rhs
                             (Expr_comment (Comment " X equal to Y")
                               (Expr_case (Expr_name (Var_name L))
                                 (((c_lhs ((Pattern_list ()))) (c_guard ())
                                    (c_rhs
                                      (Expr_list ((Expr_name (Var_name X))))))
                                   ((c_lhs ((Pattern_binding (Var_name _))))
                                     (c_guard ())
                                     (c_rhs
                                       (Expr_apply
                                         ((fa_name
                                            (Expr_name
                                              (Atom_name (Atom usort_1))))
                                           (fa_args
                                             ((Expr_name (Var_name Fun))
                                               (Expr_name (Var_name X))
                                               (Expr_name (Var_name L)))))))))))))
                          ((c_lhs ((Pattern_match (Lit_atom (Atom false)))))
                            (c_guard ())
                            (c_rhs
                              (Expr_apply
                                ((fa_name
                                   (Expr_name (Atom_name (Atom ufsplit_1))))
                                  (fa_args
                                    ((Expr_name (Var_name Y))
                                      (Expr_name (Var_name X))
                                      (Expr_name (Var_name Fun))
                                      (Expr_name (Var_name L)) (Expr_list ())
                                      (Expr_list ())))))))))))
                   ((c_lhs ((Pattern_match (Lit_atom (Atom false)))))
                     (c_guard ())
                     (c_rhs
                       (Expr_apply
                         ((fa_name (Expr_name (Atom_name (Atom ufsplit_2))))
                           (fa_args
                             ((Expr_name (Var_name Y)) (Expr_name (Var_name L))
                               (Expr_name (Var_name Fun))
                               (Expr_list ((Expr_name (Var_name X))))))))))))))))
        (fd_spec ())))
    (Type_decl
      ((typ_expr (Type_variable (Var_name List3))) (typ_kind Spec)
        (typ_name (Atom umerge))
        (typ_params
          ((Type_variable (Var_name Fun)) (Type_variable (Var_name List1))
            (Type_variable (Var_name List2))))))
    (Function_decl
      ((fd_name (Atom umerge)) (fd_arity 3)
        (fd_cases
          (((c_lhs
              ((Pattern_binding (Var_name Fun)) (Pattern_list ())
                (Pattern_binding (Var_name T2))))
             (c_guard
               (((Expr_apply
                   ((fa_name (Expr_name (Atom_name (Atom is_function))))
                     (fa_args
                       ((Expr_name (Var_name Fun))
                         (Expr_literal (Lit_integer 2)))))))))
             (c_rhs (Expr_name (Var_name T2))))
            ((c_lhs
               ((Pattern_binding (Var_name Fun))
                 (Pattern_cons ((Pattern_binding (Var_name H1)))
                   (Pattern_binding (Var_name T1)))
                 (Pattern_binding (Var_name T2))))
              (c_guard
                (((Expr_apply
                    ((fa_name (Expr_name (Atom_name (Atom is_function))))
                      (fa_args
                        ((Expr_name (Var_name Fun))
                          (Expr_literal (Lit_integer 2)))))))))
              (c_rhs
                (Expr_apply
                  ((fa_name
                     (Expr_name
                       (Qualified_name (n_mod (Atom_name (Atom lists)))
                         (n_name (Atom_name (Atom reverse))))))
                    (fa_args
                      ((Expr_apply
                         ((fa_name (Expr_name (Atom_name (Atom ufmerge2_2))))
                           (fa_args
                             ((Expr_name (Var_name H1))
                               (Expr_name (Var_name T1))
                               (Expr_name (Var_name Fun))
                               (Expr_name (Var_name T2)) (Expr_list ())))))
                        (Expr_list ())))))))))
        (fd_spec ())))
    (Module_comment
      (Comment
        "% reverse(rumerge(F,reverse(A),reverse(B))) is equal to umerge(F,A,B)."))
    (Type_decl
      ((typ_expr
         (Type_list
           (Type_variant
             ((Type_variable (Var_name X)) (Type_variable (Var_name Y))))))
        (typ_kind Spec) (typ_name (Atom rumerge))
        (typ_params
          ((Type_function
             (tyfun_args
               ((Type_variable (Var_name X)) (Type_variable (Var_name Y))))
             (tyfun_return
               (Type_constr
                 ((tc_name (Atom_name (Atom boolean))) (tc_args ())))))
            (Type_list (Type_variable (Var_name X)))
            (Type_list (Type_variable (Var_name Y)))))))
    (Function_decl
      ((fd_name (Atom rumerge)) (fd_arity 3)
        (fd_cases
          (((c_lhs
              ((Pattern_binding (Var_name Fun)) (Pattern_binding (Var_name T1))
                (Pattern_list ())))
             (c_guard
               (((Expr_apply
                   ((fa_name (Expr_name (Atom_name (Atom is_function))))
                     (fa_args
                       ((Expr_name (Var_name Fun))
                         (Expr_literal (Lit_integer 2)))))))))
             (c_rhs (Expr_name (Var_name T1))))
            ((c_lhs
               ((Pattern_binding (Var_name Fun))
                 (Pattern_binding (Var_name T1))
                 (Pattern_cons ((Pattern_binding (Var_name H2)))
                   (Pattern_binding (Var_name T2)))))
              (c_guard
                (((Expr_apply
                    ((fa_name (Expr_name (Atom_name (Atom is_function))))
                      (fa_args
                        ((Expr_name (Var_name Fun))
                          (Expr_literal (Lit_integer 2)))))))))
              (c_rhs
                (Expr_apply
                  ((fa_name
                     (Expr_name
                       (Qualified_name (n_mod (Atom_name (Atom lists)))
                         (n_name (Atom_name (Atom reverse))))))
                    (fa_args
                      ((Expr_apply
                         ((fa_name (Expr_name (Atom_name (Atom rufmerge2_1))))
                           (fa_args
                             ((Expr_name (Var_name T1))
                               (Expr_name (Var_name H2))
                               (Expr_name (Var_name Fun))
                               (Expr_name (Var_name T2)) (Expr_list ())))))
                        (Expr_list ())))))))))
        (fd_spec ())))
    (Module_comment (Comment "% usort(List) -> L"))
    (Module_comment (Comment "%  sorts the list L, removes duplicates"))
    (Type_decl
      ((typ_expr (Type_variable (Var_name List2))) (typ_kind Spec)
        (typ_name (Atom usort))
        (typ_params ((Type_variable (Var_name List1))))))
    (Function_decl
      ((fd_name (Atom usort)) (fd_arity 1)
        (fd_cases
          (((c_lhs
              ((Pattern_with_name
                 (Pattern_cons
                   ((Pattern_binding (Var_name X))
                     (Pattern_binding (Var_name Y)))
                   (Pattern_binding (Var_name L)))
                 (Pattern_binding (Var_name L0)))))
             (c_guard
               (((Expr_apply
                   ((fa_name
                      (Expr_name
                        (Qualified_name (n_mod (Atom_name (Atom erlang)))
                          (n_name (Atom_name (Atom '<'))))))
                     (fa_args
                       ((Expr_name (Var_name X)) (Expr_name (Var_name Y)))))))))
             (c_rhs
               (Expr_case (Expr_name (Var_name L))
                 (((c_lhs ((Pattern_list ()))) (c_guard ())
                    (c_rhs (Expr_name (Var_name L0))))
                   ((c_lhs ((Pattern_list ((Pattern_binding (Var_name Z))))))
                     (c_guard
                       (((Expr_apply
                           ((fa_name
                              (Expr_name
                                (Qualified_name
                                  (n_mod (Atom_name (Atom erlang)))
                                  (n_name (Atom_name (Atom '<'))))))
                             (fa_args
                               ((Expr_name (Var_name Y))
                                 (Expr_name (Var_name Z)))))))))
                     (c_rhs (Expr_name (Var_name L0))))
                   ((c_lhs ((Pattern_list ((Pattern_binding (Var_name Z))))))
                     (c_guard
                       (((Expr_apply
                           ((fa_name
                              (Expr_name
                                (Qualified_name
                                  (n_mod (Atom_name (Atom erlang)))
                                  (n_name (Atom_name (Atom '=='))))))
                             (fa_args
                               ((Expr_name (Var_name Y))
                                 (Expr_name (Var_name Z)))))))))
                     (c_rhs
                       (Expr_list
                         ((Expr_name (Var_name X)) (Expr_name (Var_name Y))))))
                   ((c_lhs ((Pattern_list ((Pattern_binding (Var_name Z))))))
                     (c_guard
                       (((Expr_apply
                           ((fa_name
                              (Expr_name
                                (Qualified_name
                                  (n_mod (Atom_name (Atom erlang)))
                                  (n_name (Atom_name (Atom '<'))))))
                             (fa_args
                               ((Expr_name (Var_name Z))
                                 (Expr_name (Var_name X)))))))))
                     (c_rhs
                       (Expr_list
                         ((Expr_name (Var_name Z)) (Expr_name (Var_name X))
                           (Expr_name (Var_name Y))))))
                   ((c_lhs ((Pattern_list ((Pattern_binding (Var_name Z))))))
                     (c_guard
                       (((Expr_apply
                           ((fa_name
                              (Expr_name
                                (Qualified_name
                                  (n_mod (Atom_name (Atom erlang)))
                                  (n_name (Atom_name (Atom '=='))))))
                             (fa_args
                               ((Expr_name (Var_name Z))
                                 (Expr_name (Var_name X)))))))))
                     (c_rhs
                       (Expr_list
                         ((Expr_name (Var_name X)) (Expr_name (Var_name Y))))))
                   ((c_lhs ((Pattern_list ((Pattern_binding (Var_name Z))))))
                     (c_guard ())
                     (c_rhs
                       (Expr_list
                         ((Expr_name (Var_name X)) (Expr_name (Var_name Z))
                           (Expr_name (Var_name Y))))))
                   ((c_lhs ((Pattern_binding (Var_name _)))) (c_guard ())
                     (c_rhs
                       (Expr_apply
                         ((fa_name (Expr_name (Atom_name (Atom usplit_1))))
                           (fa_args
                             ((Expr_name (Var_name X)) (Expr_name (Var_name Y))
                               (Expr_name (Var_name L)) (Expr_list ())
                               (Expr_list ())))))))))))
            ((c_lhs
               ((Pattern_cons
                  ((Pattern_binding (Var_name X))
                    (Pattern_binding (Var_name Y)))
                  (Pattern_binding (Var_name L)))))
              (c_guard
                (((Expr_apply
                    ((fa_name
                       (Expr_name
                         (Qualified_name (n_mod (Atom_name (Atom erlang)))
                           (n_name (Atom_name (Atom '>'))))))
                      (fa_args
                        ((Expr_name (Var_name X)) (Expr_name (Var_name Y)))))))))
              (c_rhs
                (Expr_case (Expr_name (Var_name L))
                  (((c_lhs ((Pattern_list ()))) (c_guard ())
                     (c_rhs
                       (Expr_list
                         ((Expr_name (Var_name Y)) (Expr_name (Var_name X))))))
                    ((c_lhs ((Pattern_list ((Pattern_binding (Var_name Z))))))
                      (c_guard
                        (((Expr_apply
                            ((fa_name
                               (Expr_name
                                 (Qualified_name
                                   (n_mod (Atom_name (Atom erlang)))
                                   (n_name (Atom_name (Atom '<'))))))
                              (fa_args
                                ((Expr_name (Var_name X))
                                  (Expr_name (Var_name Z)))))))))
                      (c_rhs
                        (Expr_cons
                          ((Expr_name (Var_name Y)) (Expr_name (Var_name X)))
                          (Expr_name (Var_name L)))))
                    ((c_lhs ((Pattern_list ((Pattern_binding (Var_name Z))))))
                      (c_guard
                        (((Expr_apply
                            ((fa_name
                               (Expr_name
                                 (Qualified_name
                                   (n_mod (Atom_name (Atom erlang)))
                                   (n_name (Atom_name (Atom '=='))))))
                              (fa_args
                                ((Expr_name (Var_name X))
                                  (Expr_name (Var_name Z)))))))))
                      (c_rhs
                        (Expr_list
                          ((Expr_name (Var_name Y)) (Expr_name (Var_name X))))))
                    ((c_lhs ((Pattern_list ((Pattern_binding (Var_name Z))))))
                      (c_guard
                        (((Expr_apply
                            ((fa_name
                               (Expr_name
                                 (Qualified_name
                                   (n_mod (Atom_name (Atom erlang)))
                                   (n_name (Atom_name (Atom '<'))))))
                              (fa_args
                                ((Expr_name (Var_name Z))
                                  (Expr_name (Var_name Y)))))))))
                      (c_rhs
                        (Expr_list
                          ((Expr_name (Var_name Z)) (Expr_name (Var_name Y))
                            (Expr_name (Var_name X))))))
                    ((c_lhs ((Pattern_list ((Pattern_binding (Var_name Z))))))
                      (c_guard
                        (((Expr_apply
                            ((fa_name
                               (Expr_name
                                 (Qualified_name
                                   (n_mod (Atom_name (Atom erlang)))
                                   (n_name (Atom_name (Atom '=='))))))
                              (fa_args
                                ((Expr_name (Var_name Z))
                                  (Expr_name (Var_name Y)))))))))
                      (c_rhs
                        (Expr_list
                          ((Expr_name (Var_name Y)) (Expr_name (Var_name X))))))
                    ((c_lhs ((Pattern_list ((Pattern_binding (Var_name Z))))))
                      (c_guard ())
                      (c_rhs
                        (Expr_list
                          ((Expr_name (Var_name Y)) (Expr_name (Var_name Z))
                            (Expr_name (Var_name X))))))
                    ((c_lhs ((Pattern_binding (Var_name _)))) (c_guard ())
                      (c_rhs
                        (Expr_apply
                          ((fa_name (Expr_name (Atom_name (Atom usplit_2))))
                            (fa_args
                              ((Expr_name (Var_name X))
                                (Expr_name (Var_name Y))
                                (Expr_name (Var_name L)) (Expr_list ())
                                (Expr_list ())))))))))))
            ((c_lhs
               ((Pattern_cons
                  ((Pattern_binding (Var_name X))
                    (Pattern_binding (Var_name _Y)))
                  (Pattern_binding (Var_name L)))))
              (c_guard ())
              (c_rhs
                (Expr_apply
                  ((fa_name (Expr_name (Atom_name (Atom usort_1))))
                    (fa_args
                      ((Expr_name (Var_name X)) (Expr_name (Var_name L))))))))
            ((c_lhs
               ((Pattern_with_name
                  (Pattern_list ((Pattern_binding (Var_name _))))
                  (Pattern_binding (Var_name L)))))
              (c_guard ()) (c_rhs (Expr_name (Var_name L))))
            ((c_lhs ((Pattern_list ()))) (c_guard ()) (c_rhs (Expr_list ())))))
        (fd_spec ())))
    (Function_decl
      ((fd_name (Atom usort_1)) (fd_arity 2)
        (fd_cases
          (((c_lhs
              ((Pattern_binding (Var_name X))
                (Pattern_cons ((Pattern_binding (Var_name Y)))
                  (Pattern_binding (Var_name L)))))
             (c_guard
               (((Expr_apply
                   ((fa_name
                      (Expr_name
                        (Qualified_name (n_mod (Atom_name (Atom erlang)))
                          (n_name (Atom_name (Atom '=='))))))
                     (fa_args
                       ((Expr_name (Var_name X)) (Expr_name (Var_name Y)))))))))
             (c_rhs
               (Expr_apply
                 ((fa_name (Expr_name (Atom_name (Atom usort_1))))
                   (fa_args
                     ((Expr_name (Var_name X)) (Expr_name (Var_name L))))))))
            ((c_lhs
               ((Pattern_binding (Var_name X))
                 (Pattern_cons ((Pattern_binding (Var_name Y)))
                   (Pattern_binding (Var_name L)))))
              (c_guard
                (((Expr_apply
                    ((fa_name
                       (Expr_name
                         (Qualified_name (n_mod (Atom_name (Atom erlang)))
                           (n_name (Atom_name (Atom '<'))))))
                      (fa_args
                        ((Expr_name (Var_name X)) (Expr_name (Var_name Y)))))))))
              (c_rhs
                (Expr_apply
                  ((fa_name (Expr_name (Atom_name (Atom usplit_1))))
                    (fa_args
                      ((Expr_name (Var_name X)) (Expr_name (Var_name Y))
                        (Expr_name (Var_name L)) (Expr_list ()) (Expr_list ())))))))
            ((c_lhs
               ((Pattern_binding (Var_name X))
                 (Pattern_cons ((Pattern_binding (Var_name Y)))
                   (Pattern_binding (Var_name L)))))
              (c_guard ())
              (c_rhs
                (Expr_apply
                  ((fa_name (Expr_name (Atom_name (Atom usplit_2))))
                    (fa_args
                      ((Expr_name (Var_name X)) (Expr_name (Var_name Y))
                        (Expr_name (Var_name L)) (Expr_list ()) (Expr_list ())))))))
            ((c_lhs ((Pattern_binding (Var_name X)) (Pattern_list ())))
              (c_guard ()) (c_rhs (Expr_list ((Expr_name (Var_name X))))))))
        (fd_spec ())))
    (Module_comment (Comment "% umerge(List) -> L"))
    (Module_comment
      (Comment
        "%  merges a list of sorted lists without duplicates, removes duplicates"))
    (Type_decl
      ((typ_expr (Type_variable (Var_name List1))) (typ_kind Spec)
        (typ_name (Atom umerge))
        (typ_params ((Type_variable (Var_name ListOfLists))))))
    (Function_decl
      ((fd_name (Atom umerge)) (fd_arity 1)
        (fd_cases
          (((c_lhs ((Pattern_binding (Var_name L)))) (c_guard ())
             (c_rhs
               (Expr_apply
                 ((fa_name (Expr_name (Atom_name (Atom umergel))))
                   (fa_args ((Expr_name (Var_name L))))))))))
        (fd_spec ())))
    (Module_comment (Comment "% umerge3(X, Y, Z) -> L"))
    (Module_comment
      (Comment "%  merges three sorted lists X, Y and Z without duplicates, "))
    (Module_comment (Comment "%  removes duplicates"))
    (Type_decl
      ((typ_expr (Type_variable (Var_name List4))) (typ_kind Spec)
        (typ_name (Atom umerge3))
        (typ_params
          ((Type_variable (Var_name List1)) (Type_variable (Var_name List2))
            (Type_variable (Var_name List3))))))
    (Function_decl
      ((fd_name (Atom umerge3)) (fd_arity 3)
        (fd_cases
          (((c_lhs
              ((Pattern_binding (Var_name L1)) (Pattern_list ())
                (Pattern_binding (Var_name L3))))
             (c_guard ())
             (c_rhs
               (Expr_apply
                 ((fa_name (Expr_name (Atom_name (Atom umerge))))
                   (fa_args
                     ((Expr_name (Var_name L1)) (Expr_name (Var_name L3))))))))
            ((c_lhs
               ((Pattern_binding (Var_name L1)) (Pattern_binding (Var_name L2))
                 (Pattern_list ())))
              (c_guard ())
              (c_rhs
                (Expr_apply
                  ((fa_name (Expr_name (Atom_name (Atom umerge))))
                    (fa_args
                      ((Expr_name (Var_name L1)) (Expr_name (Var_name L2))))))))
            ((c_lhs
               ((Pattern_binding (Var_name L1))
                 (Pattern_cons ((Pattern_binding (Var_name H2)))
                   (Pattern_binding (Var_name T2)))
                 (Pattern_cons ((Pattern_binding (Var_name H3)))
                   (Pattern_binding (Var_name T3)))))
              (c_guard ())
              (c_rhs
                (Expr_apply
                  ((fa_name
                     (Expr_name
                       (Qualified_name (n_mod (Atom_name (Atom lists)))
                         (n_name (Atom_name (Atom reverse))))))
                    (fa_args
                      ((Expr_apply
                         ((fa_name (Expr_name (Atom_name (Atom umerge3_1))))
                           (fa_args
                             ((Expr_name (Var_name L1))
                               (Expr_cons ((Expr_name (Var_name H2)))
                                 (Expr_name (Var_name H3)))
                               (Expr_name (Var_name T2))
                               (Expr_name (Var_name H2)) (Expr_list ())
                               (Expr_name (Var_name T3))
                               (Expr_name (Var_name H3))))))
                        (Expr_list ())))))))))
        (fd_spec ())))
    (Module_comment (Comment "% rumerge3(X, Y, Z) -> L"))
    (Module_comment
      (Comment
        "%  merges three reversed sorted lists X, Y and Z without duplicates,"))
    (Module_comment (Comment "%  removes duplicates"))
    (Type_decl
      ((typ_expr
         (Type_list
           (Type_variant
             ((Type_variable (Var_name X))
               (Type_variant
                 ((Type_variable (Var_name Y)) (Type_variable (Var_name Z))))))))
        (typ_kind Spec) (typ_name (Atom rumerge3))
        (typ_params
          ((Type_list (Type_variable (Var_name X)))
            (Type_list (Type_variable (Var_name Y)))
            (Type_list (Type_variable (Var_name Z)))))))
    (Function_decl
      ((fd_name (Atom rumerge3)) (fd_arity 3)
        (fd_cases
          (((c_lhs
              ((Pattern_binding (Var_name L1)) (Pattern_list ())
                (Pattern_binding (Var_name L3))))
             (c_guard ())
             (c_rhs
               (Expr_apply
                 ((fa_name (Expr_name (Atom_name (Atom rumerge))))
                   (fa_args
                     ((Expr_name (Var_name L1)) (Expr_name (Var_name L3))))))))
            ((c_lhs
               ((Pattern_binding (Var_name L1)) (Pattern_binding (Var_name L2))
                 (Pattern_list ())))
              (c_guard ())
              (c_rhs
                (Expr_apply
                  ((fa_name (Expr_name (Atom_name (Atom rumerge))))
                    (fa_args
                      ((Expr_name (Var_name L1)) (Expr_name (Var_name L2))))))))
            ((c_lhs
               ((Pattern_binding (Var_name L1))
                 (Pattern_cons ((Pattern_binding (Var_name H2)))
                   (Pattern_binding (Var_name T2)))
                 (Pattern_cons ((Pattern_binding (Var_name H3)))
                   (Pattern_binding (Var_name T3)))))
              (c_guard ())
              (c_rhs
                (Expr_apply
                  ((fa_name
                     (Expr_name
                       (Qualified_name (n_mod (Atom_name (Atom lists)))
                         (n_name (Atom_name (Atom reverse))))))
                    (fa_args
                      ((Expr_apply
                         ((fa_name (Expr_name (Atom_name (Atom rumerge3_1))))
                           (fa_args
                             ((Expr_name (Var_name L1))
                               (Expr_name (Var_name T2))
                               (Expr_name (Var_name H2)) (Expr_list ())
                               (Expr_name (Var_name T3))
                               (Expr_name (Var_name H3))))))
                        (Expr_list ())))))))))
        (fd_spec ())))
    (Module_comment (Comment "% umerge(X, Y) -> L"))
    (Module_comment
      (Comment
        "%  merges two sorted lists X and Y without duplicates, removes duplicates"))
    (Type_decl
      ((typ_expr (Type_variable (Var_name List3))) (typ_kind Spec)
        (typ_name (Atom umerge))
        (typ_params
          ((Type_variable (Var_name List1)) (Type_variable (Var_name List2))))))
    (Function_decl
      ((fd_name (Atom umerge)) (fd_arity 2)
        (fd_cases
          (((c_lhs ((Pattern_list ()) (Pattern_binding (Var_name T2))))
             (c_guard ()) (c_rhs (Expr_name (Var_name T2))))
            ((c_lhs
               ((Pattern_cons ((Pattern_binding (Var_name H1)))
                  (Pattern_binding (Var_name T1)))
                 (Pattern_binding (Var_name T2))))
              (c_guard ())
              (c_rhs
                (Expr_apply
                  ((fa_name
                     (Expr_name
                       (Qualified_name (n_mod (Atom_name (Atom lists)))
                         (n_name (Atom_name (Atom reverse))))))
                    (fa_args
                      ((Expr_apply
                         ((fa_name (Expr_name (Atom_name (Atom umerge2_2))))
                           (fa_args
                             ((Expr_name (Var_name T1))
                               (Expr_name (Var_name T2)) (Expr_list ())
                               (Expr_name (Var_name H1))))))
                        (Expr_list ())))))))))
        (fd_spec ())))
    (Module_comment (Comment "% rumerge(X, Y) -> L"))
    (Module_comment
      (Comment
        "%  merges two reversed sorted lists X and Y without duplicates,"))
    (Module_comment (Comment "%  removes duplicates"))
    (Module_comment
      (Comment
        "% reverse(rumerge(reverse(A),reverse(B))) is equal to umerge(I,A,B)."))
    (Type_decl
      ((typ_expr
         (Type_list
           (Type_variant
             ((Type_variable (Var_name X)) (Type_variable (Var_name Y))))))
        (typ_kind Spec) (typ_name (Atom rumerge))
        (typ_params
          ((Type_list (Type_variable (Var_name X)))
            (Type_list (Type_variable (Var_name Y)))))))
    (Function_decl
      ((fd_name (Atom rumerge)) (fd_arity 2)
        (fd_cases
          (((c_lhs ((Pattern_binding (Var_name T1)) (Pattern_list ())))
             (c_guard ()) (c_rhs (Expr_name (Var_name T1))))
            ((c_lhs
               ((Pattern_binding (Var_name T1))
                 (Pattern_cons ((Pattern_binding (Var_name H2)))
                   (Pattern_binding (Var_name T2)))))
              (c_guard ())
              (c_rhs
                (Expr_apply
                  ((fa_name
                     (Expr_name
                       (Qualified_name (n_mod (Atom_name (Atom lists)))
                         (n_name (Atom_name (Atom reverse))))))
                    (fa_args
                      ((Expr_apply
                         ((fa_name (Expr_name (Atom_name (Atom rumerge2_1))))
                           (fa_args
                             ((Expr_name (Var_name T1))
                               (Expr_name (Var_name T2)) (Expr_list ())
                               (Expr_name (Var_name H2))))))
                        (Expr_list ())))))))))
        (fd_spec ())))
    (Module_comment (Comment "% all(Predicate, List)"))
    (Module_comment (Comment "% any(Predicate, List)"))
    (Module_comment (Comment "% map(Function, List)"))
    (Module_comment (Comment "% flatmap(Function, List)"))
    (Module_comment (Comment "% foldl(Function, First, List)"))
    (Module_comment (Comment "% foldr(Function, Last, List)"))
    (Module_comment (Comment "% filter(Predicate, List)"))
    (Module_comment (Comment "% zf(Function, List)"))
    (Module_comment (Comment "% mapfoldl(Function, First, List)"))
    (Module_comment (Comment "% mapfoldr(Function, Last, List)"))
    (Module_comment (Comment "% foreach(Function, List)"))
    (Module_comment (Comment "% takewhile(Predicate, List)"))
    (Module_comment (Comment "% dropwhile(Predicate, List)"))
    (Module_comment (Comment "% splitwith(Predicate, List)"))
    (Module_comment
      (Comment "%  for list programming. Function here is a 'fun'."))
    (Module_comment (Comment "% "))
    (Module_comment (Comment "%  The name zf is a joke!"))
    (Module_comment (Comment %))
    (Module_comment
      (Comment
        "%  N.B. Unless where the functions actually needs it only foreach/2/3,"))
    (Module_comment
      (Comment
        "%  which is meant to be used for its side effects, has a defined order"))
    (Module_comment (Comment "%  of evaluation.")) (Module_comment (Comment %))
    (Module_comment
      (Comment
        "%  There are also versions with an extra argument, ExtraArgs, which is a"))
    (Module_comment (Comment "%  list of extra arguments to each call."))
    (Type_decl
      ((typ_expr
         (Type_constr ((tc_name (Atom_name (Atom boolean))) (tc_args ()))))
        (typ_kind Spec) (typ_name (Atom all))
        (typ_params
          ((Type_variable (Var_name Pred)) (Type_variable (Var_name List))))))
    (Function_decl
      ((fd_name (Atom all)) (fd_arity 2)
        (fd_cases
          (((c_lhs
              ((Pattern_binding (Var_name Pred))
                (Pattern_cons ((Pattern_binding (Var_name Hd)))
                  (Pattern_binding (Var_name Tail)))))
             (c_guard ())
             (c_rhs
               (Expr_case
                 (Expr_apply
                   ((fa_name (Expr_name (Var_name Pred)))
                     (fa_args ((Expr_name (Var_name Hd))))))
                 (((c_lhs ((Pattern_match (Lit_atom (Atom true)))))
                    (c_guard ())
                    (c_rhs
                      (Expr_apply
                        ((fa_name (Expr_name (Atom_name (Atom all))))
                          (fa_args
                            ((Expr_name (Var_name Pred))
                              (Expr_name (Var_name Tail))))))))
                   ((c_lhs ((Pattern_match (Lit_atom (Atom false)))))
                     (c_guard ())
                     (c_rhs (Expr_literal (Lit_atom (Atom false)))))))))
            ((c_lhs ((Pattern_binding (Var_name Pred)) (Pattern_list ())))
              (c_guard
                (((Expr_apply
                    ((fa_name (Expr_name (Atom_name (Atom is_function))))
                      (fa_args
                        ((Expr_name (Var_name Pred))
                          (Expr_literal (Lit_integer 1)))))))))
              (c_rhs (Expr_literal (Lit_atom (Atom true)))))))
        (fd_spec ())))
    (Type_decl
      ((typ_expr
         (Type_constr ((tc_name (Atom_name (Atom boolean))) (tc_args ()))))
        (typ_kind Spec) (typ_name (Atom any))
        (typ_params
          ((Type_variable (Var_name Pred)) (Type_variable (Var_name List))))))
    (Function_decl
      ((fd_name (Atom any)) (fd_arity 2)
        (fd_cases
          (((c_lhs
              ((Pattern_binding (Var_name Pred))
                (Pattern_cons ((Pattern_binding (Var_name Hd)))
                  (Pattern_binding (Var_name Tail)))))
             (c_guard ())
             (c_rhs
               (Expr_case
                 (Expr_apply
                   ((fa_name (Expr_name (Var_name Pred)))
                     (fa_args ((Expr_name (Var_name Hd))))))
                 (((c_lhs ((Pattern_match (Lit_atom (Atom true)))))
                    (c_guard ()) (c_rhs (Expr_literal (Lit_atom (Atom true)))))
                   ((c_lhs ((Pattern_match (Lit_atom (Atom false)))))
                     (c_guard ())
                     (c_rhs
                       (Expr_apply
                         ((fa_name (Expr_name (Atom_name (Atom any))))
                           (fa_args
                             ((Expr_name (Var_name Pred))
                               (Expr_name (Var_name Tail))))))))))))
            ((c_lhs ((Pattern_binding (Var_name Pred)) (Pattern_list ())))
              (c_guard
                (((Expr_apply
                    ((fa_name (Expr_name (Atom_name (Atom is_function))))
                      (fa_args
                        ((Expr_name (Var_name Pred))
                          (Expr_literal (Lit_integer 1)))))))))
              (c_rhs (Expr_literal (Lit_atom (Atom false)))))))
        (fd_spec ())))
    (Type_decl
      ((typ_expr (Type_variable (Var_name List2))) (typ_kind Spec)
        (typ_name (Atom map))
        (typ_params
          ((Type_variable (Var_name Fun)) (Type_variable (Var_name List1))))))
    (Function_decl
      ((fd_name (Atom map)) (fd_arity 2)
        (fd_cases
          (((c_lhs
              ((Pattern_binding (Var_name F))
                (Pattern_cons ((Pattern_binding (Var_name H)))
                  (Pattern_binding (Var_name T)))))
             (c_guard ())
             (c_rhs
               (Expr_cons
                 ((Expr_apply
                    ((fa_name (Expr_name (Var_name F)))
                      (fa_args ((Expr_name (Var_name H)))))))
                 (Expr_apply
                   ((fa_name (Expr_name (Atom_name (Atom map))))
                     (fa_args
                       ((Expr_name (Var_name F)) (Expr_name (Var_name T)))))))))
            ((c_lhs ((Pattern_binding (Var_name F)) (Pattern_list ())))
              (c_guard
                (((Expr_apply
                    ((fa_name (Expr_name (Atom_name (Atom is_function))))
                      (fa_args
                        ((Expr_name (Var_name F))
                          (Expr_literal (Lit_integer 1)))))))))
              (c_rhs (Expr_list ())))))
        (fd_spec ())))
    (Type_decl
      ((typ_expr (Type_variable (Var_name List2))) (typ_kind Spec)
        (typ_name (Atom flatmap))
        (typ_params
          ((Type_variable (Var_name Fun)) (Type_variable (Var_name List1))))))
    (Function_decl
      ((fd_name (Atom flatmap)) (fd_arity 2)
        (fd_cases
          (((c_lhs
              ((Pattern_binding (Var_name F))
                (Pattern_cons ((Pattern_binding (Var_name Hd)))
                  (Pattern_binding (Var_name Tail)))))
             (c_guard ())
             (c_rhs
               (Expr_apply
                 ((fa_name
                    (Expr_name
                      (Qualified_name (n_mod (Atom_name (Atom erlang)))
                        (n_name (Atom_name (Atom '++'))))))
                   (fa_args
                     ((Expr_apply
                        ((fa_name (Expr_name (Var_name F)))
                          (fa_args ((Expr_name (Var_name Hd))))))
                       (Expr_apply
                         ((fa_name (Expr_name (Atom_name (Atom flatmap))))
                           (fa_args
                             ((Expr_name (Var_name F))
                               (Expr_name (Var_name Tail))))))))))))
            ((c_lhs ((Pattern_binding (Var_name F)) (Pattern_list ())))
              (c_guard
                (((Expr_apply
                    ((fa_name (Expr_name (Atom_name (Atom is_function))))
                      (fa_args
                        ((Expr_name (Var_name F))
                          (Expr_literal (Lit_integer 1)))))))))
              (c_rhs (Expr_list ())))))
        (fd_spec ())))
    (Type_decl
      ((typ_expr (Type_variable (Var_name Acc1))) (typ_kind Spec)
        (typ_name (Atom foldl))
        (typ_params
          ((Type_variable (Var_name Fun)) (Type_variable (Var_name Acc0))
            (Type_variable (Var_name List))))))
    (Function_decl
      ((fd_name (Atom foldl)) (fd_arity 3)
        (fd_cases
          (((c_lhs
              ((Pattern_binding (Var_name F)) (Pattern_binding (Var_name Accu))
                (Pattern_cons ((Pattern_binding (Var_name Hd)))
                  (Pattern_binding (Var_name Tail)))))
             (c_guard ())
             (c_rhs
               (Expr_apply
                 ((fa_name (Expr_name (Atom_name (Atom foldl))))
                   (fa_args
                     ((Expr_name (Var_name F))
                       (Expr_apply
                         ((fa_name (Expr_name (Var_name F)))
                           (fa_args
                             ((Expr_name (Var_name Hd))
                               (Expr_name (Var_name Accu))))))
                       (Expr_name (Var_name Tail))))))))
            ((c_lhs
               ((Pattern_binding (Var_name F))
                 (Pattern_binding (Var_name Accu)) (Pattern_list ())))
              (c_guard
                (((Expr_apply
                    ((fa_name (Expr_name (Atom_name (Atom is_function))))
                      (fa_args
                        ((Expr_name (Var_name F))
                          (Expr_literal (Lit_integer 2)))))))))
              (c_rhs (Expr_name (Var_name Accu))))))
        (fd_spec ())))
    (Type_decl
      ((typ_expr (Type_variable (Var_name Acc1))) (typ_kind Spec)
        (typ_name (Atom foldr))
        (typ_params
          ((Type_variable (Var_name Fun)) (Type_variable (Var_name Acc0))
            (Type_variable (Var_name List))))))
    (Function_decl
      ((fd_name (Atom foldr)) (fd_arity 3)
        (fd_cases
          (((c_lhs
              ((Pattern_binding (Var_name F)) (Pattern_binding (Var_name Accu))
                (Pattern_cons ((Pattern_binding (Var_name Hd)))
                  (Pattern_binding (Var_name Tail)))))
             (c_guard ())
             (c_rhs
               (Expr_apply
                 ((fa_name (Expr_name (Var_name F)))
                   (fa_args
                     ((Expr_name (Var_name Hd))
                       (Expr_apply
                         ((fa_name (Expr_name (Atom_name (Atom foldr))))
                           (fa_args
                             ((Expr_name (Var_name F))
                               (Expr_name (Var_name Accu))
                               (Expr_name (Var_name Tail))))))))))))
            ((c_lhs
               ((Pattern_binding (Var_name F))
                 (Pattern_binding (Var_name Accu)) (Pattern_list ())))
              (c_guard
                (((Expr_apply
                    ((fa_name (Expr_name (Atom_name (Atom is_function))))
                      (fa_args
                        ((Expr_name (Var_name F))
                          (Expr_literal (Lit_integer 2)))))))))
              (c_rhs (Expr_name (Var_name Accu))))))
        (fd_spec ())))
    (Type_decl
      ((typ_expr (Type_variable (Var_name List2))) (typ_kind Spec)
        (typ_name (Atom filter))
        (typ_params
          ((Type_variable (Var_name Pred)) (Type_variable (Var_name List1))))))
    (Module_comment (Comment " FIXME: no support for list comprehensions yet"))
    (Module_comment
      (Comment " filter(Pred, List) when is_function(Pred, 1) ->"))
    (Module_comment (Comment "    [ E || E <- List, Pred(E) ]."))
    (Module_comment
      (Comment
        "% Equivalent to {filter(F, L), filter(NotF, L)}, if NotF = 'fun(X) ->"))
    (Module_comment (Comment "% not F(X) end'."))
    (Type_decl
      ((typ_expr
         (Type_tuple
           ((Type_variable (Var_name Satisfying))
             (Type_variable (Var_name NotSatisfying)))))
        (typ_kind Spec) (typ_name (Atom partition))
        (typ_params
          ((Type_variable (Var_name Pred)) (Type_variable (Var_name List))))))
    (Function_decl
      ((fd_name (Atom partition)) (fd_arity 2)
        (fd_cases
          (((c_lhs
              ((Pattern_binding (Var_name Pred))
                (Pattern_binding (Var_name L))))
             (c_guard ())
             (c_rhs
               (Expr_apply
                 ((fa_name (Expr_name (Atom_name (Atom partition))))
                   (fa_args
                     ((Expr_name (Var_name Pred)) (Expr_name (Var_name L))
                       (Expr_list ()) (Expr_list ())))))))))
        (fd_spec ())))
    (Function_decl
      ((fd_name (Atom partition)) (fd_arity 4)
        (fd_cases
          (((c_lhs
              ((Pattern_binding (Var_name Pred))
                (Pattern_cons ((Pattern_binding (Var_name H)))
                  (Pattern_binding (Var_name T)))
                (Pattern_binding (Var_name As))
                (Pattern_binding (Var_name Bs))))
             (c_guard ())
             (c_rhs
               (Expr_case
                 (Expr_apply
                   ((fa_name (Expr_name (Var_name Pred)))
                     (fa_args ((Expr_name (Var_name H))))))
                 (((c_lhs ((Pattern_match (Lit_atom (Atom true)))))
                    (c_guard ())
                    (c_rhs
                      (Expr_apply
                        ((fa_name (Expr_name (Atom_name (Atom partition))))
                          (fa_args
                            ((Expr_name (Var_name Pred))
                              (Expr_name (Var_name T))
                              (Expr_cons ((Expr_name (Var_name H)))
                                (Expr_name (Var_name As)))
                              (Expr_name (Var_name Bs))))))))
                   ((c_lhs ((Pattern_match (Lit_atom (Atom false)))))
                     (c_guard ())
                     (c_rhs
                       (Expr_apply
                         ((fa_name (Expr_name (Atom_name (Atom partition))))
                           (fa_args
                             ((Expr_name (Var_name Pred))
                               (Expr_name (Var_name T))
                               (Expr_name (Var_name As))
                               (Expr_cons ((Expr_name (Var_name H)))
                                 (Expr_name (Var_name Bs)))))))))))))
            ((c_lhs
               ((Pattern_binding (Var_name Pred)) (Pattern_list ())
                 (Pattern_binding (Var_name As))
                 (Pattern_binding (Var_name Bs))))
              (c_guard
                (((Expr_apply
                    ((fa_name (Expr_name (Atom_name (Atom is_function))))
                      (fa_args
                        ((Expr_name (Var_name Pred))
                          (Expr_literal (Lit_integer 1)))))))))
              (c_rhs
                (Expr_tuple
                  ((Expr_apply
                     ((fa_name (Expr_name (Atom_name (Atom reverse))))
                       (fa_args ((Expr_name (Var_name As))))))
                    (Expr_apply
                      ((fa_name (Expr_name (Atom_name (Atom reverse))))
                        (fa_args ((Expr_name (Var_name Bs))))))))))))
        (fd_spec ())))
    (Type_decl
      ((typ_expr (Type_variable (Var_name List2))) (typ_kind Spec)
        (typ_name (Atom filtermap))
        (typ_params
          ((Type_variable (Var_name Fun)) (Type_variable (Var_name List1))))))
    (Function_decl
      ((fd_name (Atom filtermap)) (fd_arity 2)
        (fd_cases
          (((c_lhs
              ((Pattern_binding (Var_name F))
                (Pattern_cons ((Pattern_binding (Var_name Hd)))
                  (Pattern_binding (Var_name Tail)))))
             (c_guard ())
             (c_rhs
               (Expr_case
                 (Expr_apply
                   ((fa_name (Expr_name (Var_name F)))
                     (fa_args ((Expr_name (Var_name Hd))))))
                 (((c_lhs ((Pattern_match (Lit_atom (Atom true)))))
                    (c_guard ())
                    (c_rhs
                      (Expr_cons ((Expr_name (Var_name Hd)))
                        (Expr_apply
                          ((fa_name (Expr_name (Atom_name (Atom filtermap))))
                            (fa_args
                              ((Expr_name (Var_name F))
                                (Expr_name (Var_name Tail)))))))))
                   ((c_lhs
                      ((Pattern_tuple
                         ((Pattern_match (Lit_atom (Atom true)))
                           (Pattern_binding (Var_name Val))))))
                     (c_guard ())
                     (c_rhs
                       (Expr_cons ((Expr_name (Var_name Val)))
                         (Expr_apply
                           ((fa_name (Expr_name (Atom_name (Atom filtermap))))
                             (fa_args
                               ((Expr_name (Var_name F))
                                 (Expr_name (Var_name Tail)))))))))
                   ((c_lhs ((Pattern_match (Lit_atom (Atom false)))))
                     (c_guard ())
                     (c_rhs
                       (Expr_apply
                         ((fa_name (Expr_name (Atom_name (Atom filtermap))))
                           (fa_args
                             ((Expr_name (Var_name F))
                               (Expr_name (Var_name Tail))))))))))))
            ((c_lhs ((Pattern_binding (Var_name F)) (Pattern_list ())))
              (c_guard
                (((Expr_apply
                    ((fa_name (Expr_name (Atom_name (Atom is_function))))
                      (fa_args
                        ((Expr_name (Var_name F))
                          (Expr_literal (Lit_integer 1)))))))))
              (c_rhs (Expr_list ())))))
        (fd_spec ())))
    (Type_decl
      ((typ_expr
         (Type_list
           (Type_variant
             ((Type_variable (Var_name T)) (Type_variable (Var_name X))))))
        (typ_kind Spec) (typ_name (Atom zf))
        (typ_params
          ((Type_function (tyfun_args ((Type_variable (Var_name T))))
             (tyfun_return
               (Type_variant
                 ((Type_constr
                    ((tc_name (Atom_name (Atom boolean))) (tc_args ())))
                   (Type_tuple
                     ((Type_const (Lit_atom (Atom true)))
                       (Type_variable (Var_name X))))))))
            (Type_list (Type_variable (Var_name T)))))))
    (Function_decl
      ((fd_name (Atom zf)) (fd_arity 2)
        (fd_cases
          (((c_lhs
              ((Pattern_binding (Var_name F)) (Pattern_binding (Var_name L))))
             (c_guard ())
             (c_rhs
               (Expr_apply
                 ((fa_name (Expr_name (Atom_name (Atom filtermap))))
                   (fa_args
                     ((Expr_name (Var_name F)) (Expr_name (Var_name L))))))))))
        (fd_spec ())))
    (Type_decl
      ((typ_expr (Type_const (Lit_atom (Atom ok)))) (typ_kind Spec)
        (typ_name (Atom foreach))
        (typ_params
          ((Type_variable (Var_name Fun)) (Type_variable (Var_name List))))))
    (Function_decl
      ((fd_name (Atom foreach)) (fd_arity 2)
        (fd_cases
          (((c_lhs
              ((Pattern_binding (Var_name F))
                (Pattern_cons ((Pattern_binding (Var_name Hd)))
                  (Pattern_binding (Var_name Tail)))))
             (c_guard ())
             (c_rhs
               (Expr_comment (Comment " FIXME: this should be just F(Hd),")
                 (Expr_let
                   ((lb_lhs (Pattern_binding (Var_name _)))
                     (lb_rhs
                       (Expr_apply
                         ((fa_name (Expr_name (Var_name F)))
                           (fa_args ((Expr_name (Var_name Hd))))))))
                   (Expr_apply
                     ((fa_name (Expr_name (Atom_name (Atom foreach))))
                       (fa_args
                         ((Expr_name (Var_name F)) (Expr_name (Var_name Tail))))))))))
            ((c_lhs ((Pattern_binding (Var_name F)) (Pattern_list ())))
              (c_guard
                (((Expr_apply
                    ((fa_name (Expr_name (Atom_name (Atom is_function))))
                      (fa_args
                        ((Expr_name (Var_name F))
                          (Expr_literal (Lit_integer 1)))))))))
              (c_rhs (Expr_literal (Lit_atom (Atom ok)))))))
        (fd_spec ())))
    (Type_decl
      ((typ_expr
         (Type_tuple
           ((Type_variable (Var_name List2)) (Type_variable (Var_name Acc1)))))
        (typ_kind Spec) (typ_name (Atom mapfoldl))
        (typ_params
          ((Type_variable (Var_name Fun)) (Type_variable (Var_name Acc0))
            (Type_variable (Var_name List1))))))
    (Function_decl
      ((fd_name (Atom mapfoldl)) (fd_arity 3)
        (fd_cases
          (((c_lhs
              ((Pattern_binding (Var_name F))
                (Pattern_binding (Var_name Accu0))
                (Pattern_cons ((Pattern_binding (Var_name Hd)))
                  (Pattern_binding (Var_name Tail)))))
             (c_guard ())
             (c_rhs
               (Expr_let
                 ((lb_lhs
                    (Pattern_tuple
                      ((Pattern_binding (Var_name R))
                        (Pattern_binding (Var_name Accu1)))))
                   (lb_rhs
                     (Expr_apply
                       ((fa_name (Expr_name (Var_name F)))
                         (fa_args
                           ((Expr_name (Var_name Hd))
                             (Expr_name (Var_name Accu0))))))))
                 (Expr_let
                   ((lb_lhs
                      (Pattern_tuple
                        ((Pattern_binding (Var_name Rs))
                          (Pattern_binding (Var_name Accu2)))))
                     (lb_rhs
                       (Expr_apply
                         ((fa_name (Expr_name (Atom_name (Atom mapfoldl))))
                           (fa_args
                             ((Expr_name (Var_name F))
                               (Expr_name (Var_name Accu1))
                               (Expr_name (Var_name Tail))))))))
                   (Expr_tuple
                     ((Expr_cons ((Expr_name (Var_name R)))
                        (Expr_name (Var_name Rs)))
                       (Expr_name (Var_name Accu2))))))))
            ((c_lhs
               ((Pattern_binding (Var_name F))
                 (Pattern_binding (Var_name Accu)) (Pattern_list ())))
              (c_guard
                (((Expr_apply
                    ((fa_name (Expr_name (Atom_name (Atom is_function))))
                      (fa_args
                        ((Expr_name (Var_name F))
                          (Expr_literal (Lit_integer 2)))))))))
              (c_rhs (Expr_tuple ((Expr_list ()) (Expr_name (Var_name Accu))))))))
        (fd_spec ())))
    (Type_decl
      ((typ_expr
         (Type_tuple
           ((Type_variable (Var_name List2)) (Type_variable (Var_name Acc1)))))
        (typ_kind Spec) (typ_name (Atom mapfoldr))
        (typ_params
          ((Type_variable (Var_name Fun)) (Type_variable (Var_name Acc0))
            (Type_variable (Var_name List1))))))
    (Function_decl
      ((fd_name (Atom mapfoldr)) (fd_arity 3)
        (fd_cases
          (((c_lhs
              ((Pattern_binding (Var_name F))
                (Pattern_binding (Var_name Accu0))
                (Pattern_cons ((Pattern_binding (Var_name Hd)))
                  (Pattern_binding (Var_name Tail)))))
             (c_guard ())
             (c_rhs
               (Expr_let
                 ((lb_lhs
                    (Pattern_tuple
                      ((Pattern_binding (Var_name Rs))
                        (Pattern_binding (Var_name Accu1)))))
                   (lb_rhs
                     (Expr_apply
                       ((fa_name (Expr_name (Atom_name (Atom mapfoldr))))
                         (fa_args
                           ((Expr_name (Var_name F))
                             (Expr_name (Var_name Accu0))
                             (Expr_name (Var_name Tail))))))))
                 (Expr_let
                   ((lb_lhs
                      (Pattern_tuple
                        ((Pattern_binding (Var_name R))
                          (Pattern_binding (Var_name Accu2)))))
                     (lb_rhs
                       (Expr_apply
                         ((fa_name (Expr_name (Var_name F)))
                           (fa_args
                             ((Expr_name (Var_name Hd))
                               (Expr_name (Var_name Accu1))))))))
                   (Expr_tuple
                     ((Expr_cons ((Expr_name (Var_name R)))
                        (Expr_name (Var_name Rs)))
                       (Expr_name (Var_name Accu2))))))))
            ((c_lhs
               ((Pattern_binding (Var_name F))
                 (Pattern_binding (Var_name Accu)) (Pattern_list ())))
              (c_guard
                (((Expr_apply
                    ((fa_name (Expr_name (Atom_name (Atom is_function))))
                      (fa_args
                        ((Expr_name (Var_name F))
                          (Expr_literal (Lit_integer 2)))))))))
              (c_rhs (Expr_tuple ((Expr_list ()) (Expr_name (Var_name Accu))))))))
        (fd_spec ())))
    (Type_decl
      ((typ_expr (Type_variable (Var_name List2))) (typ_kind Spec)
        (typ_name (Atom takewhile))
        (typ_params
          ((Type_variable (Var_name Pred)) (Type_variable (Var_name List1))))))
    (Function_decl
      ((fd_name (Atom takewhile)) (fd_arity 2)
        (fd_cases
          (((c_lhs
              ((Pattern_binding (Var_name Pred))
                (Pattern_cons ((Pattern_binding (Var_name Hd)))
                  (Pattern_binding (Var_name Tail)))))
             (c_guard ())
             (c_rhs
               (Expr_case
                 (Expr_apply
                   ((fa_name (Expr_name (Var_name Pred)))
                     (fa_args ((Expr_name (Var_name Hd))))))
                 (((c_lhs ((Pattern_match (Lit_atom (Atom true)))))
                    (c_guard ())
                    (c_rhs
                      (Expr_cons ((Expr_name (Var_name Hd)))
                        (Expr_apply
                          ((fa_name (Expr_name (Atom_name (Atom takewhile))))
                            (fa_args
                              ((Expr_name (Var_name Pred))
                                (Expr_name (Var_name Tail)))))))))
                   ((c_lhs ((Pattern_match (Lit_atom (Atom false)))))
                     (c_guard ()) (c_rhs (Expr_list ())))))))
            ((c_lhs ((Pattern_binding (Var_name Pred)) (Pattern_list ())))
              (c_guard
                (((Expr_apply
                    ((fa_name (Expr_name (Atom_name (Atom is_function))))
                      (fa_args
                        ((Expr_name (Var_name Pred))
                          (Expr_literal (Lit_integer 1)))))))))
              (c_rhs (Expr_list ())))))
        (fd_spec ())))
    (Type_decl
      ((typ_expr (Type_variable (Var_name List2))) (typ_kind Spec)
        (typ_name (Atom dropwhile))
        (typ_params
          ((Type_variable (Var_name Pred)) (Type_variable (Var_name List1))))))
    (Function_decl
      ((fd_name (Atom dropwhile)) (fd_arity 2)
        (fd_cases
          (((c_lhs
              ((Pattern_binding (Var_name Pred))
                (Pattern_with_name
                  (Pattern_cons ((Pattern_binding (Var_name Hd)))
                    (Pattern_binding (Var_name Tail)))
                  (Pattern_binding (Var_name Rest)))))
             (c_guard ())
             (c_rhs
               (Expr_case
                 (Expr_apply
                   ((fa_name (Expr_name (Var_name Pred)))
                     (fa_args ((Expr_name (Var_name Hd))))))
                 (((c_lhs ((Pattern_match (Lit_atom (Atom true)))))
                    (c_guard ())
                    (c_rhs
                      (Expr_apply
                        ((fa_name (Expr_name (Atom_name (Atom dropwhile))))
                          (fa_args
                            ((Expr_name (Var_name Pred))
                              (Expr_name (Var_name Tail))))))))
                   ((c_lhs ((Pattern_match (Lit_atom (Atom false)))))
                     (c_guard ()) (c_rhs (Expr_name (Var_name Rest))))))))
            ((c_lhs ((Pattern_binding (Var_name Pred)) (Pattern_list ())))
              (c_guard
                (((Expr_apply
                    ((fa_name (Expr_name (Atom_name (Atom is_function))))
                      (fa_args
                        ((Expr_name (Var_name Pred))
                          (Expr_literal (Lit_integer 1)))))))))
              (c_rhs (Expr_list ())))))
        (fd_spec ())))
    (Type_decl
      ((typ_expr
         (Type_variant
           ((Type_tuple
              ((Type_const (Lit_atom (Atom value)))
                (Type_variable (Var_name Value))))
             (Type_const (Lit_atom (Atom false))))))
        (typ_kind Spec) (typ_name (Atom search))
        (typ_params
          ((Type_variable (Var_name Pred)) (Type_variable (Var_name List))))))
    (Function_decl
      ((fd_name (Atom search)) (fd_arity 2)
        (fd_cases
          (((c_lhs
              ((Pattern_binding (Var_name Pred))
                (Pattern_cons ((Pattern_binding (Var_name Hd)))
                  (Pattern_binding (Var_name Tail)))))
             (c_guard ())
             (c_rhs
               (Expr_case
                 (Expr_apply
                   ((fa_name (Expr_name (Var_name Pred)))
                     (fa_args ((Expr_name (Var_name Hd))))))
                 (((c_lhs ((Pattern_match (Lit_atom (Atom true)))))
                    (c_guard ())
                    (c_rhs
                      (Expr_tuple
                        ((Expr_literal (Lit_atom (Atom value)))
                          (Expr_name (Var_name Hd))))))
                   ((c_lhs ((Pattern_match (Lit_atom (Atom false)))))
                     (c_guard ())
                     (c_rhs
                       (Expr_apply
                         ((fa_name (Expr_name (Atom_name (Atom search))))
                           (fa_args
                             ((Expr_name (Var_name Pred))
                               (Expr_name (Var_name Tail))))))))))))
            ((c_lhs ((Pattern_binding (Var_name Pred)) (Pattern_list ())))
              (c_guard
                (((Expr_apply
                    ((fa_name (Expr_name (Atom_name (Atom is_function))))
                      (fa_args
                        ((Expr_name (Var_name Pred))
                          (Expr_literal (Lit_integer 1)))))))))
              (c_rhs (Expr_literal (Lit_atom (Atom false)))))))
        (fd_spec ())))
    (Type_decl
      ((typ_expr
         (Type_tuple
           ((Type_variable (Var_name List1)) (Type_variable (Var_name List2)))))
        (typ_kind Spec) (typ_name (Atom splitwith))
        (typ_params
          ((Type_variable (Var_name Pred)) (Type_variable (Var_name List))))))
    (Function_decl
      ((fd_name (Atom splitwith)) (fd_arity 2)
        (fd_cases
          (((c_lhs
              ((Pattern_binding (Var_name Pred))
                (Pattern_binding (Var_name List))))
             (c_guard
               (((Expr_apply
                   ((fa_name (Expr_name (Atom_name (Atom is_function))))
                     (fa_args
                       ((Expr_name (Var_name Pred))
                         (Expr_literal (Lit_integer 1)))))))))
             (c_rhs
               (Expr_apply
                 ((fa_name (Expr_name (Atom_name (Atom splitwith))))
                   (fa_args
                     ((Expr_name (Var_name Pred)) (Expr_name (Var_name List))
                       (Expr_list ())))))))))
        (fd_spec ())))
    (Function_decl
      ((fd_name (Atom splitwith)) (fd_arity 3)
        (fd_cases
          (((c_lhs
              ((Pattern_binding (Var_name Pred))
                (Pattern_cons ((Pattern_binding (Var_name Hd)))
                  (Pattern_binding (Var_name Tail)))
                (Pattern_binding (Var_name Taken))))
             (c_guard ())
             (c_rhs
               (Expr_case
                 (Expr_apply
                   ((fa_name (Expr_name (Var_name Pred)))
                     (fa_args ((Expr_name (Var_name Hd))))))
                 (((c_lhs ((Pattern_match (Lit_atom (Atom true)))))
                    (c_guard ())
                    (c_rhs
                      (Expr_apply
                        ((fa_name (Expr_name (Atom_name (Atom splitwith))))
                          (fa_args
                            ((Expr_name (Var_name Pred))
                              (Expr_name (Var_name Tail))
                              (Expr_cons ((Expr_name (Var_name Hd)))
                                (Expr_name (Var_name Taken)))))))))
                   ((c_lhs ((Pattern_match (Lit_atom (Atom false)))))
                     (c_guard ())
                     (c_rhs
                       (Expr_tuple
                         ((Expr_apply
                            ((fa_name (Expr_name (Atom_name (Atom reverse))))
                              (fa_args ((Expr_name (Var_name Taken))))))
                           (Expr_cons ((Expr_name (Var_name Hd)))
                             (Expr_name (Var_name Tail)))))))))))
            ((c_lhs
               ((Pattern_binding (Var_name Pred)) (Pattern_list ())
                 (Pattern_binding (Var_name Taken))))
              (c_guard
                (((Expr_apply
                    ((fa_name (Expr_name (Atom_name (Atom is_function))))
                      (fa_args
                        ((Expr_name (Var_name Pred))
                          (Expr_literal (Lit_integer 1)))))))))
              (c_rhs
                (Expr_tuple
                  ((Expr_apply
                     ((fa_name (Expr_name (Atom_name (Atom reverse))))
                       (fa_args ((Expr_name (Var_name Taken))))))
                    (Expr_list ())))))))
        (fd_spec ())))
    (Type_decl
      ((typ_expr
         (Type_tuple
           ((Type_variable (Var_name List2)) (Type_variable (Var_name List3)))))
        (typ_kind Spec) (typ_name (Atom split))
        (typ_params
          ((Type_variable (Var_name N)) (Type_variable (Var_name List1))))))
    (Function_decl
      ((fd_name (Atom split)) (fd_arity 2)
        (fd_cases
          (((c_lhs
              ((Pattern_binding (Var_name N))
                (Pattern_binding (Var_name List))))
             (c_guard
               (((Expr_apply
                   ((fa_name (Expr_name (Atom_name (Atom is_integer))))
                     (fa_args ((Expr_name (Var_name N))))))
                  (Expr_apply
                    ((fa_name
                       (Expr_name
                         (Qualified_name (n_mod (Atom_name (Atom erlang)))
                           (n_name (Atom_name (Atom '>='))))))
                      (fa_args
                        ((Expr_name (Var_name N))
                          (Expr_literal (Lit_integer 0))))))
                  (Expr_apply
                    ((fa_name (Expr_name (Atom_name (Atom is_list))))
                      (fa_args ((Expr_name (Var_name List)))))))))
             (c_rhs
               (Expr_case
                 (Expr_apply
                   ((fa_name (Expr_name (Atom_name (Atom split))))
                     (fa_args
                       ((Expr_name (Var_name N)) (Expr_name (Var_name List))
                         (Expr_list ())))))
                 (((c_lhs
                     ((Pattern_with_name
                        (Pattern_tuple
                          ((Pattern_binding (Var_name _))
                            (Pattern_binding (Var_name _))))
                        (Pattern_binding (Var_name Result)))))
                    (c_guard ()) (c_rhs (Expr_name (Var_name Result))))
                   ((c_lhs ((Pattern_binding (Var_name Fault))))
                     (c_guard
                       (((Expr_apply
                           ((fa_name (Expr_name (Atom_name (Atom is_atom))))
                             (fa_args ((Expr_name (Var_name Fault)))))))))
                     (c_rhs
                       (Expr_apply
                         ((fa_name
                            (Expr_name
                              (Qualified_name (n_mod (Atom_name (Atom erlang)))
                                (n_name (Atom_name (Atom error))))))
                           (fa_args
                             ((Expr_name (Var_name Fault))
                               (Expr_list
                                 ((Expr_name (Var_name N))
                                   (Expr_name (Var_name List))))))))))))))
            ((c_lhs
               ((Pattern_binding (Var_name N))
                 (Pattern_binding (Var_name List))))
              (c_guard ())
              (c_rhs
                (Expr_apply
                  ((fa_name
                     (Expr_name
                       (Qualified_name (n_mod (Atom_name (Atom erlang)))
                         (n_name (Atom_name (Atom error))))))
                    (fa_args
                      ((Expr_literal (Lit_atom (Atom badarg)))
                        (Expr_list
                          ((Expr_name (Var_name N))
                            (Expr_name (Var_name List))))))))))))
        (fd_spec ())))
    (Function_decl
      ((fd_name (Atom split)) (fd_arity 3)
        (fd_cases
          (((c_lhs
              ((Pattern_match (Lit_integer 0)) (Pattern_binding (Var_name L))
                (Pattern_binding (Var_name R))))
             (c_guard ())
             (c_rhs
               (Expr_tuple
                 ((Expr_apply
                    ((fa_name
                       (Expr_name
                         (Qualified_name (n_mod (Atom_name (Atom lists)))
                           (n_name (Atom_name (Atom reverse))))))
                      (fa_args ((Expr_name (Var_name R)) (Expr_list ())))))
                   (Expr_name (Var_name L))))))
            ((c_lhs
               ((Pattern_binding (Var_name N))
                 (Pattern_cons ((Pattern_binding (Var_name H)))
                   (Pattern_binding (Var_name T)))
                 (Pattern_binding (Var_name R))))
              (c_guard ())
              (c_rhs
                (Expr_apply
                  ((fa_name (Expr_name (Atom_name (Atom split))))
                    (fa_args
                      ((Expr_apply
                         ((fa_name
                            (Expr_name
                              (Qualified_name (n_mod (Atom_name (Atom erlang)))
                                (n_name (Atom_name (Atom '-'))))))
                           (fa_args
                             ((Expr_name (Var_name N))
                               (Expr_literal (Lit_integer 1))))))
                        (Expr_name (Var_name T))
                        (Expr_cons ((Expr_name (Var_name H)))
                          (Expr_name (Var_name R)))))))))
            ((c_lhs
               ((Pattern_binding (Var_name _)) (Pattern_list ())
                 (Pattern_binding (Var_name _))))
              (c_guard ()) (c_rhs (Expr_literal (Lit_atom (Atom badarg)))))))
        (fd_spec ())))
    (Type_decl
      ((typ_expr (Type_variable (Var_name List2))) (typ_kind Spec)
        (typ_name (Atom join))
        (typ_params
          ((Type_variable (Var_name Sep)) (Type_variable (Var_name List1))))))
    (Function_decl
      ((fd_name (Atom join)) (fd_arity 2)
        (fd_cases
          (((c_lhs ((Pattern_binding (Var_name _Sep)) (Pattern_list ())))
             (c_guard ()) (c_rhs (Expr_list ())))
            ((c_lhs
               ((Pattern_binding (Var_name Sep))
                 (Pattern_cons ((Pattern_binding (Var_name H)))
                   (Pattern_binding (Var_name T)))))
              (c_guard ())
              (c_rhs
                (Expr_cons ((Expr_name (Var_name H)))
                  (Expr_apply
                    ((fa_name (Expr_name (Atom_name (Atom join_prepend))))
                      (fa_args
                        ((Expr_name (Var_name Sep)) (Expr_name (Var_name T)))))))))))
        (fd_spec ())))
    (Function_decl
      ((fd_name (Atom join_prepend)) (fd_arity 2)
        (fd_cases
          (((c_lhs ((Pattern_binding (Var_name _Sep)) (Pattern_list ())))
             (c_guard ()) (c_rhs (Expr_list ())))
            ((c_lhs
               ((Pattern_binding (Var_name Sep))
                 (Pattern_cons ((Pattern_binding (Var_name H)))
                   (Pattern_binding (Var_name T)))))
              (c_guard ())
              (c_rhs
                (Expr_cons
                  ((Expr_name (Var_name Sep)) (Expr_name (Var_name H)))
                  (Expr_apply
                    ((fa_name (Expr_name (Atom_name (Atom join_prepend))))
                      (fa_args
                        ((Expr_name (Var_name Sep)) (Expr_name (Var_name T)))))))))))
        (fd_spec ())))
    (Module_comment
      (Comment
        "%% ================================================================="))
    (Module_comment
      (Comment "%% Here follows the implementation of the sort functions."))
    (Module_comment (Comment %%))
    (Module_comment
      (Comment
        "%% These functions used to be in their own module (lists_sort),"))
    (Module_comment
      (Comment
        "%% but have now been placed here to allow Dialyzer to produce better"))
    (Module_comment (Comment "%% type information."))
    (Module_comment
      (Comment
        "%% ================================================================="))
    (Module_attribute
      ((atr_name (Atom compile))
        (atr_value
          (Expr_tuple
            ((Expr_literal (Lit_atom (Atom inline)))
              (Expr_list
                ((Expr_tuple
                   ((Expr_literal (Lit_atom (Atom merge3_12)))
                     (Expr_literal (Lit_integer 7))))
                  (Expr_tuple
                    ((Expr_literal (Lit_atom (Atom merge3_21)))
                      (Expr_literal (Lit_integer 7))))
                  (Expr_tuple
                    ((Expr_literal (Lit_atom (Atom rmerge3_12)))
                      (Expr_literal (Lit_integer 7))))
                  (Expr_tuple
                    ((Expr_literal (Lit_atom (Atom rmerge3_21)))
                      (Expr_literal (Lit_integer 7)))))))))))
    (Module_attribute
      ((atr_name (Atom compile))
        (atr_value
          (Expr_tuple
            ((Expr_literal (Lit_atom (Atom inline)))
              (Expr_list
                ((Expr_tuple
                   ((Expr_literal (Lit_atom (Atom umerge3_12)))
                     (Expr_literal (Lit_integer 8))))
                  (Expr_tuple
                    ((Expr_literal (Lit_atom (Atom umerge3_21)))
                      (Expr_literal (Lit_integer 8))))
                  (Expr_tuple
                    ((Expr_literal (Lit_atom (Atom rumerge3_12a)))
                      (Expr_literal (Lit_integer 7))))
                  (Expr_tuple
                    ((Expr_literal (Lit_atom (Atom rumerge3_12b)))
                      (Expr_literal (Lit_integer 8)))))))))))
    (Module_attribute
      ((atr_name (Atom compile))
        (atr_value
          (Expr_tuple
            ((Expr_literal (Lit_atom (Atom inline)))
              (Expr_list
                ((Expr_tuple
                   ((Expr_literal (Lit_atom (Atom keymerge3_12)))
                     (Expr_literal (Lit_integer 12))))
                  (Expr_tuple
                    ((Expr_literal (Lit_atom (Atom keymerge3_21)))
                      (Expr_literal (Lit_integer 12))))
                  (Expr_tuple
                    ((Expr_literal (Lit_atom (Atom rkeymerge3_12)))
                      (Expr_literal (Lit_integer 12))))
                  (Expr_tuple
                    ((Expr_literal (Lit_atom (Atom rkeymerge3_21)))
                      (Expr_literal (Lit_integer 12)))))))))))
    (Module_attribute
      ((atr_name (Atom compile))
        (atr_value
          (Expr_tuple
            ((Expr_literal (Lit_atom (Atom inline)))
              (Expr_list
                ((Expr_tuple
                   ((Expr_literal (Lit_atom (Atom ukeymerge3_12)))
                     (Expr_literal (Lit_integer 13))))
                  (Expr_tuple
                    ((Expr_literal (Lit_atom (Atom ukeymerge3_21)))
                      (Expr_literal (Lit_integer 13))))
                  (Expr_tuple
                    ((Expr_literal (Lit_atom (Atom rukeymerge3_12a)))
                      (Expr_literal (Lit_integer 11))))
                  (Expr_tuple
                    ((Expr_literal (Lit_atom (Atom rukeymerge3_21a)))
                      (Expr_literal (Lit_integer 13))))
                  (Expr_tuple
                    ((Expr_literal (Lit_atom (Atom rukeymerge3_12b)))
                      (Expr_literal (Lit_integer 12))))
                  (Expr_tuple
                    ((Expr_literal (Lit_atom (Atom rukeymerge3_21b)))
                      (Expr_literal (Lit_integer 12)))))))))))
    (Module_comment (Comment "% sort/1"))
    (Module_comment (Comment "% Ascending."))
    (Function_decl
      ((fd_name (Atom split_1)) (fd_arity 5)
        (fd_cases
          (((c_lhs
              ((Pattern_binding (Var_name X)) (Pattern_binding (Var_name Y))
                (Pattern_cons ((Pattern_binding (Var_name Z)))
                  (Pattern_binding (Var_name L)))
                (Pattern_binding (Var_name R)) (Pattern_binding (Var_name Rs))))
             (c_guard
               (((Expr_apply
                   ((fa_name
                      (Expr_name
                        (Qualified_name (n_mod (Atom_name (Atom erlang)))
                          (n_name (Atom_name (Atom '>='))))))
                     (fa_args
                       ((Expr_name (Var_name Z)) (Expr_name (Var_name Y)))))))))
             (c_rhs
               (Expr_apply
                 ((fa_name (Expr_name (Atom_name (Atom split_1))))
                   (fa_args
                     ((Expr_name (Var_name Y)) (Expr_name (Var_name Z))
                       (Expr_name (Var_name L))
                       (Expr_cons ((Expr_name (Var_name X)))
                         (Expr_name (Var_name R)))
                       (Expr_name (Var_name Rs))))))))
            ((c_lhs
               ((Pattern_binding (Var_name X)) (Pattern_binding (Var_name Y))
                 (Pattern_cons ((Pattern_binding (Var_name Z)))
                   (Pattern_binding (Var_name L)))
                 (Pattern_binding (Var_name R))
                 (Pattern_binding (Var_name Rs))))
              (c_guard
                (((Expr_apply
                    ((fa_name
                       (Expr_name
                         (Qualified_name (n_mod (Atom_name (Atom erlang)))
                           (n_name (Atom_name (Atom '>='))))))
                      (fa_args
                        ((Expr_name (Var_name Z)) (Expr_name (Var_name X)))))))))
              (c_rhs
                (Expr_apply
                  ((fa_name (Expr_name (Atom_name (Atom split_1))))
                    (fa_args
                      ((Expr_name (Var_name Z)) (Expr_name (Var_name Y))
                        (Expr_name (Var_name L))
                        (Expr_cons ((Expr_name (Var_name X)))
                          (Expr_name (Var_name R)))
                        (Expr_name (Var_name Rs))))))))
            ((c_lhs
               ((Pattern_binding (Var_name X)) (Pattern_binding (Var_name Y))
                 (Pattern_cons ((Pattern_binding (Var_name Z)))
                   (Pattern_binding (Var_name L)))
                 (Pattern_list ()) (Pattern_binding (Var_name Rs))))
              (c_guard ())
              (c_rhs
                (Expr_apply
                  ((fa_name (Expr_name (Atom_name (Atom split_1))))
                    (fa_args
                      ((Expr_name (Var_name X)) (Expr_name (Var_name Y))
                        (Expr_name (Var_name L))
                        (Expr_list ((Expr_name (Var_name Z))))
                        (Expr_name (Var_name Rs))))))))
            ((c_lhs
               ((Pattern_binding (Var_name X)) (Pattern_binding (Var_name Y))
                 (Pattern_cons ((Pattern_binding (Var_name Z)))
                   (Pattern_binding (Var_name L)))
                 (Pattern_binding (Var_name R))
                 (Pattern_binding (Var_name Rs))))
              (c_guard ())
              (c_rhs
                (Expr_apply
                  ((fa_name (Expr_name (Atom_name (Atom split_1_1))))
                    (fa_args
                      ((Expr_name (Var_name X)) (Expr_name (Var_name Y))
                        (Expr_name (Var_name L)) (Expr_name (Var_name R))
                        (Expr_name (Var_name Rs)) (Expr_name (Var_name Z))))))))
            ((c_lhs
               ((Pattern_binding (Var_name X)) (Pattern_binding (Var_name Y))
                 (Pattern_list ()) (Pattern_binding (Var_name R))
                 (Pattern_binding (Var_name Rs))))
              (c_guard ())
              (c_rhs
                (Expr_apply
                  ((fa_name (Expr_name (Atom_name (Atom rmergel))))
                    (fa_args
                      ((Expr_cons
                         ((Expr_cons
                            ((Expr_name (Var_name Y)) (Expr_name (Var_name X)))
                            (Expr_name (Var_name R))))
                         (Expr_name (Var_name Rs)))
                        (Expr_list ())))))))))
        (fd_spec ())))
    (Function_decl
      ((fd_name (Atom split_1_1)) (fd_arity 6)
        (fd_cases
          (((c_lhs
              ((Pattern_binding (Var_name X)) (Pattern_binding (Var_name Y))
                (Pattern_cons ((Pattern_binding (Var_name Z)))
                  (Pattern_binding (Var_name L)))
                (Pattern_binding (Var_name R)) (Pattern_binding (Var_name Rs))
                (Pattern_binding (Var_name S))))
             (c_guard
               (((Expr_apply
                   ((fa_name
                      (Expr_name
                        (Qualified_name (n_mod (Atom_name (Atom erlang)))
                          (n_name (Atom_name (Atom '>='))))))
                     (fa_args
                       ((Expr_name (Var_name Z)) (Expr_name (Var_name Y)))))))))
             (c_rhs
               (Expr_apply
                 ((fa_name (Expr_name (Atom_name (Atom split_1_1))))
                   (fa_args
                     ((Expr_name (Var_name Y)) (Expr_name (Var_name Z))
                       (Expr_name (Var_name L))
                       (Expr_cons ((Expr_name (Var_name X)))
                         (Expr_name (Var_name R)))
                       (Expr_name (Var_name Rs)) (Expr_name (Var_name S))))))))
            ((c_lhs
               ((Pattern_binding (Var_name X)) (Pattern_binding (Var_name Y))
                 (Pattern_cons ((Pattern_binding (Var_name Z)))
                   (Pattern_binding (Var_name L)))
                 (Pattern_binding (Var_name R)) (Pattern_binding (Var_name Rs))
                 (Pattern_binding (Var_name S))))
              (c_guard
                (((Expr_apply
                    ((fa_name
                       (Expr_name
                         (Qualified_name (n_mod (Atom_name (Atom erlang)))
                           (n_name (Atom_name (Atom '>='))))))
                      (fa_args
                        ((Expr_name (Var_name Z)) (Expr_name (Var_name X)))))))))
              (c_rhs
                (Expr_apply
                  ((fa_name (Expr_name (Atom_name (Atom split_1_1))))
                    (fa_args
                      ((Expr_name (Var_name Z)) (Expr_name (Var_name Y))
                        (Expr_name (Var_name L))
                        (Expr_cons ((Expr_name (Var_name X)))
                          (Expr_name (Var_name R)))
                        (Expr_name (Var_name Rs)) (Expr_name (Var_name S))))))))
            ((c_lhs
               ((Pattern_binding (Var_name X)) (Pattern_binding (Var_name Y))
                 (Pattern_cons ((Pattern_binding (Var_name Z)))
                   (Pattern_binding (Var_name L)))
                 (Pattern_binding (Var_name R)) (Pattern_binding (Var_name Rs))
                 (Pattern_binding (Var_name S))))
              (c_guard
                (((Expr_apply
                    ((fa_name
                       (Expr_name
                         (Qualified_name (n_mod (Atom_name (Atom erlang)))
                           (n_name (Atom_name (Atom '=<'))))))
                      (fa_args
                        ((Expr_name (Var_name S)) (Expr_name (Var_name Z)))))))))
              (c_rhs
                (Expr_apply
                  ((fa_name (Expr_name (Atom_name (Atom split_1))))
                    (fa_args
                      ((Expr_name (Var_name S)) (Expr_name (Var_name Z))
                        (Expr_name (Var_name L)) (Expr_list ())
                        (Expr_cons
                          ((Expr_cons
                             ((Expr_name (Var_name Y))
                               (Expr_name (Var_name X)))
                             (Expr_name (Var_name R))))
                          (Expr_name (Var_name Rs)))))))))
            ((c_lhs
               ((Pattern_binding (Var_name X)) (Pattern_binding (Var_name Y))
                 (Pattern_cons ((Pattern_binding (Var_name Z)))
                   (Pattern_binding (Var_name L)))
                 (Pattern_binding (Var_name R)) (Pattern_binding (Var_name Rs))
                 (Pattern_binding (Var_name S))))
              (c_guard ())
              (c_rhs
                (Expr_apply
                  ((fa_name (Expr_name (Atom_name (Atom split_1))))
                    (fa_args
                      ((Expr_name (Var_name Z)) (Expr_name (Var_name S))
                        (Expr_name (Var_name L)) (Expr_list ())
                        (Expr_cons
                          ((Expr_cons
                             ((Expr_name (Var_name Y))
                               (Expr_name (Var_name X)))
                             (Expr_name (Var_name R))))
                          (Expr_name (Var_name Rs)))))))))
            ((c_lhs
               ((Pattern_binding (Var_name X)) (Pattern_binding (Var_name Y))
                 (Pattern_list ()) (Pattern_binding (Var_name R))
                 (Pattern_binding (Var_name Rs))
                 (Pattern_binding (Var_name S))))
              (c_guard ())
              (c_rhs
                (Expr_apply
                  ((fa_name (Expr_name (Atom_name (Atom rmergel))))
                    (fa_args
                      ((Expr_cons
                         ((Expr_list ((Expr_name (Var_name S))))
                           (Expr_cons
                             ((Expr_name (Var_name Y))
                               (Expr_name (Var_name X)))
                             (Expr_name (Var_name R))))
                         (Expr_name (Var_name Rs)))
                        (Expr_list ())))))))))
        (fd_spec ())))
    (Module_comment (Comment "% Descending."))
    (Function_decl
      ((fd_name (Atom split_2)) (fd_arity 5)
        (fd_cases
          (((c_lhs
              ((Pattern_binding (Var_name X)) (Pattern_binding (Var_name Y))
                (Pattern_cons ((Pattern_binding (Var_name Z)))
                  (Pattern_binding (Var_name L)))
                (Pattern_binding (Var_name R)) (Pattern_binding (Var_name Rs))))
             (c_guard
               (((Expr_apply
                   ((fa_name
                      (Expr_name
                        (Qualified_name (n_mod (Atom_name (Atom erlang)))
                          (n_name (Atom_name (Atom '=<'))))))
                     (fa_args
                       ((Expr_name (Var_name Z)) (Expr_name (Var_name Y)))))))))
             (c_rhs
               (Expr_apply
                 ((fa_name (Expr_name (Atom_name (Atom split_2))))
                   (fa_args
                     ((Expr_name (Var_name Y)) (Expr_name (Var_name Z))
                       (Expr_name (Var_name L))
                       (Expr_cons ((Expr_name (Var_name X)))
                         (Expr_name (Var_name R)))
                       (Expr_name (Var_name Rs))))))))
            ((c_lhs
               ((Pattern_binding (Var_name X)) (Pattern_binding (Var_name Y))
                 (Pattern_cons ((Pattern_binding (Var_name Z)))
                   (Pattern_binding (Var_name L)))
                 (Pattern_binding (Var_name R))
                 (Pattern_binding (Var_name Rs))))
              (c_guard
                (((Expr_apply
                    ((fa_name
                       (Expr_name
                         (Qualified_name (n_mod (Atom_name (Atom erlang)))
                           (n_name (Atom_name (Atom '=<'))))))
                      (fa_args
                        ((Expr_name (Var_name Z)) (Expr_name (Var_name X)))))))))
              (c_rhs
                (Expr_apply
                  ((fa_name (Expr_name (Atom_name (Atom split_2))))
                    (fa_args
                      ((Expr_name (Var_name Z)) (Expr_name (Var_name Y))
                        (Expr_name (Var_name L))
                        (Expr_cons ((Expr_name (Var_name X)))
                          (Expr_name (Var_name R)))
                        (Expr_name (Var_name Rs))))))))
            ((c_lhs
               ((Pattern_binding (Var_name X)) (Pattern_binding (Var_name Y))
                 (Pattern_cons ((Pattern_binding (Var_name Z)))
                   (Pattern_binding (Var_name L)))
                 (Pattern_list ()) (Pattern_binding (Var_name Rs))))
              (c_guard ())
              (c_rhs
                (Expr_apply
                  ((fa_name (Expr_name (Atom_name (Atom split_2))))
                    (fa_args
                      ((Expr_name (Var_name X)) (Expr_name (Var_name Y))
                        (Expr_name (Var_name L))
                        (Expr_list ((Expr_name (Var_name Z))))
                        (Expr_name (Var_name Rs))))))))
            ((c_lhs
               ((Pattern_binding (Var_name X)) (Pattern_binding (Var_name Y))
                 (Pattern_cons ((Pattern_binding (Var_name Z)))
                   (Pattern_binding (Var_name L)))
                 (Pattern_binding (Var_name R))
                 (Pattern_binding (Var_name Rs))))
              (c_guard ())
              (c_rhs
                (Expr_apply
                  ((fa_name (Expr_name (Atom_name (Atom split_2_1))))
                    (fa_args
                      ((Expr_name (Var_name X)) (Expr_name (Var_name Y))
                        (Expr_name (Var_name L)) (Expr_name (Var_name R))
                        (Expr_name (Var_name Rs)) (Expr_name (Var_name Z))))))))
            ((c_lhs
               ((Pattern_binding (Var_name X)) (Pattern_binding (Var_name Y))
                 (Pattern_list ()) (Pattern_binding (Var_name R))
                 (Pattern_binding (Var_name Rs))))
              (c_guard ())
              (c_rhs
                (Expr_apply
                  ((fa_name (Expr_name (Atom_name (Atom mergel))))
                    (fa_args
                      ((Expr_cons
                         ((Expr_cons
                            ((Expr_name (Var_name Y)) (Expr_name (Var_name X)))
                            (Expr_name (Var_name R))))
                         (Expr_name (Var_name Rs)))
                        (Expr_list ())))))))))
        (fd_spec ())))
    (Function_decl
      ((fd_name (Atom split_2_1)) (fd_arity 6)
        (fd_cases
          (((c_lhs
              ((Pattern_binding (Var_name X)) (Pattern_binding (Var_name Y))
                (Pattern_cons ((Pattern_binding (Var_name Z)))
                  (Pattern_binding (Var_name L)))
                (Pattern_binding (Var_name R)) (Pattern_binding (Var_name Rs))
                (Pattern_binding (Var_name S))))
             (c_guard
               (((Expr_apply
                   ((fa_name
                      (Expr_name
                        (Qualified_name (n_mod (Atom_name (Atom erlang)))
                          (n_name (Atom_name (Atom '=<'))))))
                     (fa_args
                       ((Expr_name (Var_name Z)) (Expr_name (Var_name Y)))))))))
             (c_rhs
               (Expr_apply
                 ((fa_name (Expr_name (Atom_name (Atom split_2_1))))
                   (fa_args
                     ((Expr_name (Var_name Y)) (Expr_name (Var_name Z))
                       (Expr_name (Var_name L))
                       (Expr_cons ((Expr_name (Var_name X)))
                         (Expr_name (Var_name R)))
                       (Expr_name (Var_name Rs)) (Expr_name (Var_name S))))))))
            ((c_lhs
               ((Pattern_binding (Var_name X)) (Pattern_binding (Var_name Y))
                 (Pattern_cons ((Pattern_binding (Var_name Z)))
                   (Pattern_binding (Var_name L)))
                 (Pattern_binding (Var_name R)) (Pattern_binding (Var_name Rs))
                 (Pattern_binding (Var_name S))))
              (c_guard
                (((Expr_apply
                    ((fa_name
                       (Expr_name
                         (Qualified_name (n_mod (Atom_name (Atom erlang)))
                           (n_name (Atom_name (Atom '=<'))))))
                      (fa_args
                        ((Expr_name (Var_name Z)) (Expr_name (Var_name X)))))))))
              (c_rhs
                (Expr_apply
                  ((fa_name (Expr_name (Atom_name (Atom split_2_1))))
                    (fa_args
                      ((Expr_name (Var_name Z)) (Expr_name (Var_name Y))
                        (Expr_name (Var_name L))
                        (Expr_cons ((Expr_name (Var_name X)))
                          (Expr_name (Var_name R)))
                        (Expr_name (Var_name Rs)) (Expr_name (Var_name S))))))))
            ((c_lhs
               ((Pattern_binding (Var_name X)) (Pattern_binding (Var_name Y))
                 (Pattern_cons ((Pattern_binding (Var_name Z)))
                   (Pattern_binding (Var_name L)))
                 (Pattern_binding (Var_name R)) (Pattern_binding (Var_name Rs))
                 (Pattern_binding (Var_name S))))
              (c_guard
                (((Expr_apply
                    ((fa_name
                       (Expr_name
                         (Qualified_name (n_mod (Atom_name (Atom erlang)))
                           (n_name (Atom_name (Atom '>'))))))
                      (fa_args
                        ((Expr_name (Var_name S)) (Expr_name (Var_name Z)))))))))
              (c_rhs
                (Expr_apply
                  ((fa_name (Expr_name (Atom_name (Atom split_2))))
                    (fa_args
                      ((Expr_name (Var_name S)) (Expr_name (Var_name Z))
                        (Expr_name (Var_name L)) (Expr_list ())
                        (Expr_cons
                          ((Expr_cons
                             ((Expr_name (Var_name Y))
                               (Expr_name (Var_name X)))
                             (Expr_name (Var_name R))))
                          (Expr_name (Var_name Rs)))))))))
            ((c_lhs
               ((Pattern_binding (Var_name X)) (Pattern_binding (Var_name Y))
                 (Pattern_cons ((Pattern_binding (Var_name Z)))
                   (Pattern_binding (Var_name L)))
                 (Pattern_binding (Var_name R)) (Pattern_binding (Var_name Rs))
                 (Pattern_binding (Var_name S))))
              (c_guard ())
              (c_rhs
                (Expr_apply
                  ((fa_name (Expr_name (Atom_name (Atom split_2))))
                    (fa_args
                      ((Expr_name (Var_name Z)) (Expr_name (Var_name S))
                        (Expr_name (Var_name L)) (Expr_list ())
                        (Expr_cons
                          ((Expr_cons
                             ((Expr_name (Var_name Y))
                               (Expr_name (Var_name X)))
                             (Expr_name (Var_name R))))
                          (Expr_name (Var_name Rs)))))))))
            ((c_lhs
               ((Pattern_binding (Var_name X)) (Pattern_binding (Var_name Y))
                 (Pattern_list ()) (Pattern_binding (Var_name R))
                 (Pattern_binding (Var_name Rs))
                 (Pattern_binding (Var_name S))))
              (c_guard ())
              (c_rhs
                (Expr_apply
                  ((fa_name (Expr_name (Atom_name (Atom mergel))))
                    (fa_args
                      ((Expr_cons
                         ((Expr_list ((Expr_name (Var_name S))))
                           (Expr_cons
                             ((Expr_name (Var_name Y))
                               (Expr_name (Var_name X)))
                             (Expr_name (Var_name R))))
                         (Expr_name (Var_name Rs)))
                        (Expr_list ())))))))))
        (fd_spec ())))
    (Module_comment (Comment "% merge/1"))
    (Function_decl
      ((fd_name (Atom mergel)) (fd_arity 2)
        (fd_cases
          (((c_lhs
              ((Pattern_cons ((Pattern_list ()))
                 (Pattern_binding (Var_name L)))
                (Pattern_binding (Var_name Acc))))
             (c_guard ())
             (c_rhs
               (Expr_apply
                 ((fa_name (Expr_name (Atom_name (Atom mergel))))
                   (fa_args
                     ((Expr_name (Var_name L)) (Expr_name (Var_name Acc))))))))
            ((c_lhs
               ((Pattern_cons
                  ((Pattern_binding (Var_name T1))
                    (Pattern_cons ((Pattern_binding (Var_name H2)))
                      (Pattern_binding (Var_name T2)))
                    (Pattern_cons ((Pattern_binding (Var_name H3)))
                      (Pattern_binding (Var_name T3))))
                  (Pattern_binding (Var_name L)))
                 (Pattern_binding (Var_name Acc))))
              (c_guard ())
              (c_rhs
                (Expr_apply
                  ((fa_name (Expr_name (Atom_name (Atom mergel))))
                    (fa_args
                      ((Expr_name (Var_name L))
                        (Expr_cons
                          ((Expr_apply
                             ((fa_name (Expr_name (Atom_name (Atom merge3_1))))
                               (fa_args
                                 ((Expr_name (Var_name T1)) (Expr_list ())
                                   (Expr_name (Var_name H2))
                                   (Expr_name (Var_name T2))
                                   (Expr_name (Var_name H3))
                                   (Expr_name (Var_name T3)))))))
                          (Expr_name (Var_name Acc)))))))))
            ((c_lhs
               ((Pattern_list
                  ((Pattern_binding (Var_name T1))
                    (Pattern_cons ((Pattern_binding (Var_name H2)))
                      (Pattern_binding (Var_name T2)))))
                 (Pattern_binding (Var_name Acc))))
              (c_guard ())
              (c_rhs
                (Expr_apply
                  ((fa_name (Expr_name (Atom_name (Atom rmergel))))
                    (fa_args
                      ((Expr_cons
                         ((Expr_apply
                            ((fa_name (Expr_name (Atom_name (Atom merge2_1))))
                              (fa_args
                                ((Expr_name (Var_name T1))
                                  (Expr_name (Var_name H2))
                                  (Expr_name (Var_name T2)) (Expr_list ()))))))
                         (Expr_name (Var_name Acc)))
                        (Expr_list ())))))))
            ((c_lhs
               ((Pattern_list ((Pattern_binding (Var_name L))))
                 (Pattern_list ())))
              (c_guard ()) (c_rhs (Expr_name (Var_name L))))
            ((c_lhs
               ((Pattern_list ((Pattern_binding (Var_name L))))
                 (Pattern_binding (Var_name Acc))))
              (c_guard ())
              (c_rhs
                (Expr_apply
                  ((fa_name (Expr_name (Atom_name (Atom rmergel))))
                    (fa_args
                      ((Expr_cons
                         ((Expr_apply
                            ((fa_name
                               (Expr_name
                                 (Qualified_name
                                   (n_mod (Atom_name (Atom lists)))
                                   (n_name (Atom_name (Atom reverse))))))
                              (fa_args
                                ((Expr_name (Var_name L)) (Expr_list ()))))))
                         (Expr_name (Var_name Acc)))
                        (Expr_list ())))))))
            ((c_lhs ((Pattern_list ()) (Pattern_list ()))) (c_guard ())
              (c_rhs (Expr_list ())))
            ((c_lhs ((Pattern_list ()) (Pattern_binding (Var_name Acc))))
              (c_guard ())
              (c_rhs
                (Expr_apply
                  ((fa_name (Expr_name (Atom_name (Atom rmergel))))
                    (fa_args ((Expr_name (Var_name Acc)) (Expr_list ())))))))
            ((c_lhs
               ((Pattern_cons
                  ((Pattern_binding (Var_name A)) (Pattern_list ()))
                  (Pattern_binding (Var_name L)))
                 (Pattern_binding (Var_name Acc))))
              (c_guard ())
              (c_rhs
                (Expr_apply
                  ((fa_name (Expr_name (Atom_name (Atom mergel))))
                    (fa_args
                      ((Expr_cons ((Expr_name (Var_name A)))
                         (Expr_name (Var_name L)))
                        (Expr_name (Var_name Acc))))))))
            ((c_lhs
               ((Pattern_cons
                  ((Pattern_binding (Var_name A))
                    (Pattern_binding (Var_name B)) (Pattern_list ()))
                  (Pattern_binding (Var_name L)))
                 (Pattern_binding (Var_name Acc))))
              (c_guard ())
              (c_rhs
                (Expr_apply
                  ((fa_name (Expr_name (Atom_name (Atom mergel))))
                    (fa_args
                      ((Expr_cons
                         ((Expr_name (Var_name A)) (Expr_name (Var_name B)))
                         (Expr_name (Var_name L)))
                        (Expr_name (Var_name Acc))))))))))
        (fd_spec ())))
    (Function_decl
      ((fd_name (Atom rmergel)) (fd_arity 2)
        (fd_cases
          (((c_lhs
              ((Pattern_cons
                 ((Pattern_cons ((Pattern_binding (Var_name H3)))
                    (Pattern_binding (Var_name T3)))
                   (Pattern_cons ((Pattern_binding (Var_name H2)))
                     (Pattern_binding (Var_name T2)))
                   (Pattern_binding (Var_name T1)))
                 (Pattern_binding (Var_name L)))
                (Pattern_binding (Var_name Acc))))
             (c_guard ())
             (c_rhs
               (Expr_apply
                 ((fa_name (Expr_name (Atom_name (Atom rmergel))))
                   (fa_args
                     ((Expr_name (Var_name L))
                       (Expr_cons
                         ((Expr_apply
                            ((fa_name (Expr_name (Atom_name (Atom rmerge3_1))))
                              (fa_args
                                ((Expr_name (Var_name T1)) (Expr_list ())
                                  (Expr_name (Var_name H2))
                                  (Expr_name (Var_name T2))
                                  (Expr_name (Var_name H3))
                                  (Expr_name (Var_name T3)))))))
                         (Expr_name (Var_name Acc)))))))))
            ((c_lhs
               ((Pattern_list
                  ((Pattern_cons ((Pattern_binding (Var_name H2)))
                     (Pattern_binding (Var_name T2)))
                    (Pattern_binding (Var_name T1))))
                 (Pattern_binding (Var_name Acc))))
              (c_guard ())
              (c_rhs
                (Expr_apply
                  ((fa_name (Expr_name (Atom_name (Atom mergel))))
                    (fa_args
                      ((Expr_cons
                         ((Expr_apply
                            ((fa_name (Expr_name (Atom_name (Atom rmerge2_1))))
                              (fa_args
                                ((Expr_name (Var_name T1))
                                  (Expr_name (Var_name H2))
                                  (Expr_name (Var_name T2)) (Expr_list ()))))))
                         (Expr_name (Var_name Acc)))
                        (Expr_list ())))))))
            ((c_lhs
               ((Pattern_list ((Pattern_binding (Var_name L))))
                 (Pattern_binding (Var_name Acc))))
              (c_guard ())
              (c_rhs
                (Expr_apply
                  ((fa_name (Expr_name (Atom_name (Atom mergel))))
                    (fa_args
                      ((Expr_cons
                         ((Expr_apply
                            ((fa_name
                               (Expr_name
                                 (Qualified_name
                                   (n_mod (Atom_name (Atom lists)))
                                   (n_name (Atom_name (Atom reverse))))))
                              (fa_args
                                ((Expr_name (Var_name L)) (Expr_list ()))))))
                         (Expr_name (Var_name Acc)))
                        (Expr_list ())))))))
            ((c_lhs ((Pattern_list ()) (Pattern_binding (Var_name Acc))))
              (c_guard ())
              (c_rhs
                (Expr_apply
                  ((fa_name (Expr_name (Atom_name (Atom mergel))))
                    (fa_args ((Expr_name (Var_name Acc)) (Expr_list ())))))))))
        (fd_spec ())))
    (Module_comment (Comment "% merge3/3"))
    (Module_comment (Comment "% Take L1 apart."))
    (Function_decl
      ((fd_name (Atom merge3_1)) (fd_arity 6)
        (fd_cases
          (((c_lhs
              ((Pattern_cons ((Pattern_binding (Var_name H1)))
                 (Pattern_binding (Var_name T1)))
                (Pattern_binding (Var_name M)) (Pattern_binding (Var_name H2))
                (Pattern_binding (Var_name T2)) (Pattern_binding (Var_name H3))
                (Pattern_binding (Var_name T3))))
             (c_guard
               (((Expr_apply
                   ((fa_name
                      (Expr_name
                        (Qualified_name (n_mod (Atom_name (Atom erlang)))
                          (n_name (Atom_name (Atom '=<'))))))
                     (fa_args
                       ((Expr_name (Var_name H1)) (Expr_name (Var_name H2)))))))))
             (c_rhs
               (Expr_apply
                 ((fa_name (Expr_name (Atom_name (Atom merge3_12))))
                   (fa_args
                     ((Expr_name (Var_name T1)) (Expr_name (Var_name H1))
                       (Expr_name (Var_name H2)) (Expr_name (Var_name T2))
                       (Expr_name (Var_name H3)) (Expr_name (Var_name T3))
                       (Expr_name (Var_name M))))))))
            ((c_lhs
               ((Pattern_cons ((Pattern_binding (Var_name H1)))
                  (Pattern_binding (Var_name T1)))
                 (Pattern_binding (Var_name M)) (Pattern_binding (Var_name H2))
                 (Pattern_binding (Var_name T2))
                 (Pattern_binding (Var_name H3))
                 (Pattern_binding (Var_name T3))))
              (c_guard ())
              (c_rhs
                (Expr_apply
                  ((fa_name (Expr_name (Atom_name (Atom merge3_21))))
                    (fa_args
                      ((Expr_name (Var_name T1)) (Expr_name (Var_name H1))
                        (Expr_name (Var_name H2)) (Expr_name (Var_name T2))
                        (Expr_name (Var_name H3)) (Expr_name (Var_name T3))
                        (Expr_name (Var_name M))))))))
            ((c_lhs
               ((Pattern_list ()) (Pattern_binding (Var_name M))
                 (Pattern_binding (Var_name H2))
                 (Pattern_binding (Var_name T2))
                 (Pattern_binding (Var_name H3))
                 (Pattern_binding (Var_name T3))))
              (c_guard
                (((Expr_apply
                    ((fa_name
                       (Expr_name
                         (Qualified_name (n_mod (Atom_name (Atom erlang)))
                           (n_name (Atom_name (Atom '=<'))))))
                      (fa_args
                        ((Expr_name (Var_name H2)) (Expr_name (Var_name H3)))))))))
              (c_rhs
                (Expr_apply
                  ((fa_name (Expr_name (Atom_name (Atom merge2_1))))
                    (fa_args
                      ((Expr_name (Var_name T2)) (Expr_name (Var_name H3))
                        (Expr_name (Var_name T3))
                        (Expr_cons ((Expr_name (Var_name H2)))
                          (Expr_name (Var_name M)))))))))
            ((c_lhs
               ((Pattern_list ()) (Pattern_binding (Var_name M))
                 (Pattern_binding (Var_name H2))
                 (Pattern_binding (Var_name T2))
                 (Pattern_binding (Var_name H3))
                 (Pattern_binding (Var_name T3))))
              (c_guard ())
              (c_rhs
                (Expr_apply
                  ((fa_name (Expr_name (Atom_name (Atom merge2_2))))
                    (fa_args
                      ((Expr_name (Var_name T2)) (Expr_name (Var_name H3))
                        (Expr_name (Var_name T3)) (Expr_name (Var_name M))
                        (Expr_name (Var_name H2))))))))))
        (fd_spec ())))
    (Module_comment (Comment "% Take L2 apart."))
    (Function_decl
      ((fd_name (Atom merge3_2)) (fd_arity 6)
        (fd_cases
          (((c_lhs
              ((Pattern_binding (Var_name T1)) (Pattern_binding (Var_name H1))
                (Pattern_binding (Var_name M))
                (Pattern_cons ((Pattern_binding (Var_name H2)))
                  (Pattern_binding (Var_name T2)))
                (Pattern_binding (Var_name H3))
                (Pattern_binding (Var_name T3))))
             (c_guard
               (((Expr_apply
                   ((fa_name
                      (Expr_name
                        (Qualified_name (n_mod (Atom_name (Atom erlang)))
                          (n_name (Atom_name (Atom '=<'))))))
                     (fa_args
                       ((Expr_name (Var_name H1)) (Expr_name (Var_name H2)))))))))
             (c_rhs
               (Expr_apply
                 ((fa_name (Expr_name (Atom_name (Atom merge3_12))))
                   (fa_args
                     ((Expr_name (Var_name T1)) (Expr_name (Var_name H1))
                       (Expr_name (Var_name H2)) (Expr_name (Var_name T2))
                       (Expr_name (Var_name H3)) (Expr_name (Var_name T3))
                       (Expr_name (Var_name M))))))))
            ((c_lhs
               ((Pattern_binding (Var_name T1)) (Pattern_binding (Var_name H1))
                 (Pattern_binding (Var_name M))
                 (Pattern_cons ((Pattern_binding (Var_name H2)))
                   (Pattern_binding (Var_name T2)))
                 (Pattern_binding (Var_name H3))
                 (Pattern_binding (Var_name T3))))
              (c_guard ())
              (c_rhs
                (Expr_apply
                  ((fa_name (Expr_name (Atom_name (Atom merge3_21))))
                    (fa_args
                      ((Expr_name (Var_name T1)) (Expr_name (Var_name H1))
                        (Expr_name (Var_name H2)) (Expr_name (Var_name T2))
                        (Expr_name (Var_name H3)) (Expr_name (Var_name T3))
                        (Expr_name (Var_name M))))))))
            ((c_lhs
               ((Pattern_binding (Var_name T1)) (Pattern_binding (Var_name H1))
                 (Pattern_binding (Var_name M)) (Pattern_list ())
                 (Pattern_binding (Var_name H3))
                 (Pattern_binding (Var_name T3))))
              (c_guard
                (((Expr_apply
                    ((fa_name
                       (Expr_name
                         (Qualified_name (n_mod (Atom_name (Atom erlang)))
                           (n_name (Atom_name (Atom '=<'))))))
                      (fa_args
                        ((Expr_name (Var_name H1)) (Expr_name (Var_name H3)))))))))
              (c_rhs
                (Expr_apply
                  ((fa_name (Expr_name (Atom_name (Atom merge2_1))))
                    (fa_args
                      ((Expr_name (Var_name T1)) (Expr_name (Var_name H3))
                        (Expr_name (Var_name T3))
                        (Expr_cons ((Expr_name (Var_name H1)))
                          (Expr_name (Var_name M)))))))))
            ((c_lhs
               ((Pattern_binding (Var_name T1)) (Pattern_binding (Var_name H1))
                 (Pattern_binding (Var_name M)) (Pattern_list ())
                 (Pattern_binding (Var_name H3))
                 (Pattern_binding (Var_name T3))))
              (c_guard ())
              (c_rhs
                (Expr_apply
                  ((fa_name (Expr_name (Atom_name (Atom merge2_2))))
                    (fa_args
                      ((Expr_name (Var_name T1)) (Expr_name (Var_name H3))
                        (Expr_name (Var_name T3)) (Expr_name (Var_name M))
                        (Expr_name (Var_name H1))))))))))
        (fd_spec ())))
    (Module_comment (Comment " H1 =< H2. Inlined."))
    (Function_decl
      ((fd_name (Atom merge3_12)) (fd_arity 7)
        (fd_cases
          (((c_lhs
              ((Pattern_binding (Var_name T1)) (Pattern_binding (Var_name H1))
                (Pattern_binding (Var_name H2)) (Pattern_binding (Var_name T2))
                (Pattern_binding (Var_name H3)) (Pattern_binding (Var_name T3))
                (Pattern_binding (Var_name M))))
             (c_guard
               (((Expr_apply
                   ((fa_name
                      (Expr_name
                        (Qualified_name (n_mod (Atom_name (Atom erlang)))
                          (n_name (Atom_name (Atom '=<'))))))
                     (fa_args
                       ((Expr_name (Var_name H1)) (Expr_name (Var_name H3)))))))))
             (c_rhs
               (Expr_apply
                 ((fa_name (Expr_name (Atom_name (Atom merge3_1))))
                   (fa_args
                     ((Expr_name (Var_name T1))
                       (Expr_cons ((Expr_name (Var_name H1)))
                         (Expr_name (Var_name M)))
                       (Expr_name (Var_name H2)) (Expr_name (Var_name T2))
                       (Expr_name (Var_name H3)) (Expr_name (Var_name T3))))))))
            ((c_lhs
               ((Pattern_binding (Var_name T1)) (Pattern_binding (Var_name H1))
                 (Pattern_binding (Var_name H2))
                 (Pattern_binding (Var_name T2))
                 (Pattern_binding (Var_name H3))
                 (Pattern_binding (Var_name T3))
                 (Pattern_binding (Var_name M))))
              (c_guard ())
              (c_rhs
                (Expr_apply
                  ((fa_name (Expr_name (Atom_name (Atom merge3_12_3))))
                    (fa_args
                      ((Expr_name (Var_name T1)) (Expr_name (Var_name H1))
                        (Expr_name (Var_name H2)) (Expr_name (Var_name T2))
                        (Expr_cons ((Expr_name (Var_name H3)))
                          (Expr_name (Var_name M)))
                        (Expr_name (Var_name T3))))))))))
        (fd_spec ())))
    (Module_comment (Comment " H1 =< H2, take L3 apart."))
    (Function_decl
      ((fd_name (Atom merge3_12_3)) (fd_arity 6)
        (fd_cases
          (((c_lhs
              ((Pattern_binding (Var_name T1)) (Pattern_binding (Var_name H1))
                (Pattern_binding (Var_name H2)) (Pattern_binding (Var_name T2))
                (Pattern_binding (Var_name M))
                (Pattern_cons ((Pattern_binding (Var_name H3)))
                  (Pattern_binding (Var_name T3)))))
             (c_guard
               (((Expr_apply
                   ((fa_name
                      (Expr_name
                        (Qualified_name (n_mod (Atom_name (Atom erlang)))
                          (n_name (Atom_name (Atom '=<'))))))
                     (fa_args
                       ((Expr_name (Var_name H1)) (Expr_name (Var_name H3)))))))))
             (c_rhs
               (Expr_apply
                 ((fa_name (Expr_name (Atom_name (Atom merge3_1))))
                   (fa_args
                     ((Expr_name (Var_name T1))
                       (Expr_cons ((Expr_name (Var_name H1)))
                         (Expr_name (Var_name M)))
                       (Expr_name (Var_name H2)) (Expr_name (Var_name T2))
                       (Expr_name (Var_name H3)) (Expr_name (Var_name T3))))))))
            ((c_lhs
               ((Pattern_binding (Var_name T1)) (Pattern_binding (Var_name H1))
                 (Pattern_binding (Var_name H2))
                 (Pattern_binding (Var_name T2)) (Pattern_binding (Var_name M))
                 (Pattern_cons ((Pattern_binding (Var_name H3)))
                   (Pattern_binding (Var_name T3)))))
              (c_guard ())
              (c_rhs
                (Expr_apply
                  ((fa_name (Expr_name (Atom_name (Atom merge3_12_3))))
                    (fa_args
                      ((Expr_name (Var_name T1)) (Expr_name (Var_name H1))
                        (Expr_name (Var_name H2)) (Expr_name (Var_name T2))
                        (Expr_cons ((Expr_name (Var_name H3)))
                          (Expr_name (Var_name M)))
                        (Expr_name (Var_name T3))))))))
            ((c_lhs
               ((Pattern_binding (Var_name T1)) (Pattern_binding (Var_name H1))
                 (Pattern_binding (Var_name H2))
                 (Pattern_binding (Var_name T2)) (Pattern_binding (Var_name M))
                 (Pattern_list ())))
              (c_guard ())
              (c_rhs
                (Expr_apply
                  ((fa_name (Expr_name (Atom_name (Atom merge2_1))))
                    (fa_args
                      ((Expr_name (Var_name T1)) (Expr_name (Var_name H2))
                        (Expr_name (Var_name T2))
                        (Expr_cons ((Expr_name (Var_name H1)))
                          (Expr_name (Var_name M)))))))))))
        (fd_spec ())))
    (Module_comment (Comment " H1 > H2. Inlined."))
    (Function_decl
      ((fd_name (Atom merge3_21)) (fd_arity 7)
        (fd_cases
          (((c_lhs
              ((Pattern_binding (Var_name T1)) (Pattern_binding (Var_name H1))
                (Pattern_binding (Var_name H2)) (Pattern_binding (Var_name T2))
                (Pattern_binding (Var_name H3)) (Pattern_binding (Var_name T3))
                (Pattern_binding (Var_name M))))
             (c_guard
               (((Expr_apply
                   ((fa_name
                      (Expr_name
                        (Qualified_name (n_mod (Atom_name (Atom erlang)))
                          (n_name (Atom_name (Atom '=<'))))))
                     (fa_args
                       ((Expr_name (Var_name H2)) (Expr_name (Var_name H3)))))))))
             (c_rhs
               (Expr_apply
                 ((fa_name (Expr_name (Atom_name (Atom merge3_2))))
                   (fa_args
                     ((Expr_name (Var_name T1)) (Expr_name (Var_name H1))
                       (Expr_cons ((Expr_name (Var_name H2)))
                         (Expr_name (Var_name M)))
                       (Expr_name (Var_name T2)) (Expr_name (Var_name H3))
                       (Expr_name (Var_name T3))))))))
            ((c_lhs
               ((Pattern_binding (Var_name T1)) (Pattern_binding (Var_name H1))
                 (Pattern_binding (Var_name H2))
                 (Pattern_binding (Var_name T2))
                 (Pattern_binding (Var_name H3))
                 (Pattern_binding (Var_name T3))
                 (Pattern_binding (Var_name M))))
              (c_guard ())
              (c_rhs
                (Expr_apply
                  ((fa_name (Expr_name (Atom_name (Atom merge3_21_3))))
                    (fa_args
                      ((Expr_name (Var_name T1)) (Expr_name (Var_name H1))
                        (Expr_name (Var_name H2)) (Expr_name (Var_name T2))
                        (Expr_cons ((Expr_name (Var_name H3)))
                          (Expr_name (Var_name M)))
                        (Expr_name (Var_name T3))))))))))
        (fd_spec ())))
    (Module_comment (Comment " H1 > H2, take L3 apart."))
    (Function_decl
      ((fd_name (Atom merge3_21_3)) (fd_arity 6)
        (fd_cases
          (((c_lhs
              ((Pattern_binding (Var_name T1)) (Pattern_binding (Var_name H1))
                (Pattern_binding (Var_name H2)) (Pattern_binding (Var_name T2))
                (Pattern_binding (Var_name M))
                (Pattern_cons ((Pattern_binding (Var_name H3)))
                  (Pattern_binding (Var_name T3)))))
             (c_guard
               (((Expr_apply
                   ((fa_name
                      (Expr_name
                        (Qualified_name (n_mod (Atom_name (Atom erlang)))
                          (n_name (Atom_name (Atom '=<'))))))
                     (fa_args
                       ((Expr_name (Var_name H2)) (Expr_name (Var_name H3)))))))))
             (c_rhs
               (Expr_apply
                 ((fa_name (Expr_name (Atom_name (Atom merge3_2))))
                   (fa_args
                     ((Expr_name (Var_name T1)) (Expr_name (Var_name H1))
                       (Expr_cons ((Expr_name (Var_name H2)))
                         (Expr_name (Var_name M)))
                       (Expr_name (Var_name T2)) (Expr_name (Var_name H3))
                       (Expr_name (Var_name T3))))))))
            ((c_lhs
               ((Pattern_binding (Var_name T1)) (Pattern_binding (Var_name H1))
                 (Pattern_binding (Var_name H2))
                 (Pattern_binding (Var_name T2)) (Pattern_binding (Var_name M))
                 (Pattern_cons ((Pattern_binding (Var_name H3)))
                   (Pattern_binding (Var_name T3)))))
              (c_guard ())
              (c_rhs
                (Expr_apply
                  ((fa_name (Expr_name (Atom_name (Atom merge3_21_3))))
                    (fa_args
                      ((Expr_name (Var_name T1)) (Expr_name (Var_name H1))
                        (Expr_name (Var_name H2)) (Expr_name (Var_name T2))
                        (Expr_cons ((Expr_name (Var_name H3)))
                          (Expr_name (Var_name M)))
                        (Expr_name (Var_name T3))))))))
            ((c_lhs
               ((Pattern_binding (Var_name T1)) (Pattern_binding (Var_name H1))
                 (Pattern_binding (Var_name H2))
                 (Pattern_binding (Var_name T2)) (Pattern_binding (Var_name M))
                 (Pattern_list ())))
              (c_guard ())
              (c_rhs
                (Expr_apply
                  ((fa_name (Expr_name (Atom_name (Atom merge2_2))))
                    (fa_args
                      ((Expr_name (Var_name T1)) (Expr_name (Var_name H2))
                        (Expr_name (Var_name T2)) (Expr_name (Var_name M))
                        (Expr_name (Var_name H1))))))))))
        (fd_spec ())))
    (Module_comment (Comment "% rmerge/3"))
    (Module_comment (Comment "% Take L1 apart."))
    (Function_decl
      ((fd_name (Atom rmerge3_1)) (fd_arity 6)
        (fd_cases
          (((c_lhs
              ((Pattern_cons ((Pattern_binding (Var_name H1)))
                 (Pattern_binding (Var_name T1)))
                (Pattern_binding (Var_name M)) (Pattern_binding (Var_name H2))
                (Pattern_binding (Var_name T2)) (Pattern_binding (Var_name H3))
                (Pattern_binding (Var_name T3))))
             (c_guard
               (((Expr_apply
                   ((fa_name
                      (Expr_name
                        (Qualified_name (n_mod (Atom_name (Atom erlang)))
                          (n_name (Atom_name (Atom '=<'))))))
                     (fa_args
                       ((Expr_name (Var_name H1)) (Expr_name (Var_name H2)))))))))
             (c_rhs
               (Expr_apply
                 ((fa_name (Expr_name (Atom_name (Atom rmerge3_12))))
                   (fa_args
                     ((Expr_name (Var_name T1)) (Expr_name (Var_name H1))
                       (Expr_name (Var_name H2)) (Expr_name (Var_name T2))
                       (Expr_name (Var_name H3)) (Expr_name (Var_name T3))
                       (Expr_name (Var_name M))))))))
            ((c_lhs
               ((Pattern_cons ((Pattern_binding (Var_name H1)))
                  (Pattern_binding (Var_name T1)))
                 (Pattern_binding (Var_name M)) (Pattern_binding (Var_name H2))
                 (Pattern_binding (Var_name T2))
                 (Pattern_binding (Var_name H3))
                 (Pattern_binding (Var_name T3))))
              (c_guard ())
              (c_rhs
                (Expr_apply
                  ((fa_name (Expr_name (Atom_name (Atom rmerge3_21))))
                    (fa_args
                      ((Expr_name (Var_name T1)) (Expr_name (Var_name H1))
                        (Expr_name (Var_name H2)) (Expr_name (Var_name T2))
                        (Expr_name (Var_name H3)) (Expr_name (Var_name T3))
                        (Expr_name (Var_name M))))))))
            ((c_lhs
               ((Pattern_list ()) (Pattern_binding (Var_name M))
                 (Pattern_binding (Var_name H2))
                 (Pattern_binding (Var_name T2))
                 (Pattern_binding (Var_name H3))
                 (Pattern_binding (Var_name T3))))
              (c_guard
                (((Expr_apply
                    ((fa_name
                       (Expr_name
                         (Qualified_name (n_mod (Atom_name (Atom erlang)))
                           (n_name (Atom_name (Atom '=<'))))))
                      (fa_args
                        ((Expr_name (Var_name H2)) (Expr_name (Var_name H3)))))))))
              (c_rhs
                (Expr_apply
                  ((fa_name (Expr_name (Atom_name (Atom rmerge2_2))))
                    (fa_args
                      ((Expr_name (Var_name T2)) (Expr_name (Var_name H3))
                        (Expr_name (Var_name T3)) (Expr_name (Var_name M))
                        (Expr_name (Var_name H2))))))))
            ((c_lhs
               ((Pattern_list ()) (Pattern_binding (Var_name M))
                 (Pattern_binding (Var_name H2))
                 (Pattern_binding (Var_name T2))
                 (Pattern_binding (Var_name H3))
                 (Pattern_binding (Var_name T3))))
              (c_guard ())
              (c_rhs
                (Expr_apply
                  ((fa_name (Expr_name (Atom_name (Atom rmerge2_1))))
                    (fa_args
                      ((Expr_name (Var_name T2)) (Expr_name (Var_name H3))
                        (Expr_name (Var_name T3))
                        (Expr_cons ((Expr_name (Var_name H2)))
                          (Expr_name (Var_name M)))))))))))
        (fd_spec ())))
    (Module_comment (Comment "% Take L2 apart."))
    (Function_decl
      ((fd_name (Atom rmerge3_2)) (fd_arity 6)
        (fd_cases
          (((c_lhs
              ((Pattern_binding (Var_name T1)) (Pattern_binding (Var_name H1))
                (Pattern_binding (Var_name M))
                (Pattern_cons ((Pattern_binding (Var_name H2)))
                  (Pattern_binding (Var_name T2)))
                (Pattern_binding (Var_name H3))
                (Pattern_binding (Var_name T3))))
             (c_guard
               (((Expr_apply
                   ((fa_name
                      (Expr_name
                        (Qualified_name (n_mod (Atom_name (Atom erlang)))
                          (n_name (Atom_name (Atom '=<'))))))
                     (fa_args
                       ((Expr_name (Var_name H1)) (Expr_name (Var_name H2)))))))))
             (c_rhs
               (Expr_apply
                 ((fa_name (Expr_name (Atom_name (Atom rmerge3_12))))
                   (fa_args
                     ((Expr_name (Var_name T1)) (Expr_name (Var_name H1))
                       (Expr_name (Var_name H2)) (Expr_name (Var_name T2))
                       (Expr_name (Var_name H3)) (Expr_name (Var_name T3))
                       (Expr_name (Var_name M))))))))
            ((c_lhs
               ((Pattern_binding (Var_name T1)) (Pattern_binding (Var_name H1))
                 (Pattern_binding (Var_name M))
                 (Pattern_cons ((Pattern_binding (Var_name H2)))
                   (Pattern_binding (Var_name T2)))
                 (Pattern_binding (Var_name H3))
                 (Pattern_binding (Var_name T3))))
              (c_guard ())
              (c_rhs
                (Expr_apply
                  ((fa_name (Expr_name (Atom_name (Atom rmerge3_21))))
                    (fa_args
                      ((Expr_name (Var_name T1)) (Expr_name (Var_name H1))
                        (Expr_name (Var_name H2)) (Expr_name (Var_name T2))
                        (Expr_name (Var_name H3)) (Expr_name (Var_name T3))
                        (Expr_name (Var_name M))))))))
            ((c_lhs
               ((Pattern_binding (Var_name T1)) (Pattern_binding (Var_name H1))
                 (Pattern_binding (Var_name M)) (Pattern_list ())
                 (Pattern_binding (Var_name H3))
                 (Pattern_binding (Var_name T3))))
              (c_guard
                (((Expr_apply
                    ((fa_name
                       (Expr_name
                         (Qualified_name (n_mod (Atom_name (Atom erlang)))
                           (n_name (Atom_name (Atom '=<'))))))
                      (fa_args
                        ((Expr_name (Var_name H1)) (Expr_name (Var_name H3)))))))))
              (c_rhs
                (Expr_apply
                  ((fa_name (Expr_name (Atom_name (Atom rmerge2_2))))
                    (fa_args
                      ((Expr_name (Var_name T1)) (Expr_name (Var_name H3))
                        (Expr_name (Var_name T3)) (Expr_name (Var_name M))
                        (Expr_name (Var_name H1))))))))
            ((c_lhs
               ((Pattern_binding (Var_name T1)) (Pattern_binding (Var_name H1))
                 (Pattern_binding (Var_name M)) (Pattern_list ())
                 (Pattern_binding (Var_name H3))
                 (Pattern_binding (Var_name T3))))
              (c_guard ())
              (c_rhs
                (Expr_apply
                  ((fa_name (Expr_name (Atom_name (Atom rmerge2_1))))
                    (fa_args
                      ((Expr_name (Var_name T1)) (Expr_name (Var_name H3))
                        (Expr_name (Var_name T3))
                        (Expr_cons ((Expr_name (Var_name H1)))
                          (Expr_name (Var_name M)))))))))))
        (fd_spec ())))
    (Module_comment (Comment " H1 =< H2. Inlined."))
    (Function_decl
      ((fd_name (Atom rmerge3_12)) (fd_arity 7)
        (fd_cases
          (((c_lhs
              ((Pattern_binding (Var_name T1)) (Pattern_binding (Var_name H1))
                (Pattern_binding (Var_name H2)) (Pattern_binding (Var_name T2))
                (Pattern_binding (Var_name H3)) (Pattern_binding (Var_name T3))
                (Pattern_binding (Var_name M))))
             (c_guard
               (((Expr_apply
                   ((fa_name
                      (Expr_name
                        (Qualified_name (n_mod (Atom_name (Atom erlang)))
                          (n_name (Atom_name (Atom '=<'))))))
                     (fa_args
                       ((Expr_name (Var_name H2)) (Expr_name (Var_name H3)))))))))
             (c_rhs
               (Expr_apply
                 ((fa_name (Expr_name (Atom_name (Atom rmerge3_12_3))))
                   (fa_args
                     ((Expr_name (Var_name T1)) (Expr_name (Var_name H1))
                       (Expr_name (Var_name H2)) (Expr_name (Var_name T2))
                       (Expr_cons ((Expr_name (Var_name H3)))
                         (Expr_name (Var_name M)))
                       (Expr_name (Var_name T3))))))))
            ((c_lhs
               ((Pattern_binding (Var_name T1)) (Pattern_binding (Var_name H1))
                 (Pattern_binding (Var_name H2))
                 (Pattern_binding (Var_name T2))
                 (Pattern_binding (Var_name H3))
                 (Pattern_binding (Var_name T3))
                 (Pattern_binding (Var_name M))))
              (c_guard ())
              (c_rhs
                (Expr_apply
                  ((fa_name (Expr_name (Atom_name (Atom rmerge3_2))))
                    (fa_args
                      ((Expr_name (Var_name T1)) (Expr_name (Var_name H1))
                        (Expr_cons ((Expr_name (Var_name H2)))
                          (Expr_name (Var_name M)))
                        (Expr_name (Var_name T2)) (Expr_name (Var_name H3))
                        (Expr_name (Var_name T3))))))))))
        (fd_spec ())))
    (Module_comment (Comment " H1 =< H2, take L3 apart."))
    (Function_decl
      ((fd_name (Atom rmerge3_12_3)) (fd_arity 6)
        (fd_cases
          (((c_lhs
              ((Pattern_binding (Var_name T1)) (Pattern_binding (Var_name H1))
                (Pattern_binding (Var_name H2)) (Pattern_binding (Var_name T2))
                (Pattern_binding (Var_name M))
                (Pattern_cons ((Pattern_binding (Var_name H3)))
                  (Pattern_binding (Var_name T3)))))
             (c_guard
               (((Expr_apply
                   ((fa_name
                      (Expr_name
                        (Qualified_name (n_mod (Atom_name (Atom erlang)))
                          (n_name (Atom_name (Atom '=<'))))))
                     (fa_args
                       ((Expr_name (Var_name H2)) (Expr_name (Var_name H3)))))))))
             (c_rhs
               (Expr_apply
                 ((fa_name (Expr_name (Atom_name (Atom rmerge3_12_3))))
                   (fa_args
                     ((Expr_name (Var_name T1)) (Expr_name (Var_name H1))
                       (Expr_name (Var_name H2)) (Expr_name (Var_name T2))
                       (Expr_cons ((Expr_name (Var_name H3)))
                         (Expr_name (Var_name M)))
                       (Expr_name (Var_name T3))))))))
            ((c_lhs
               ((Pattern_binding (Var_name T1)) (Pattern_binding (Var_name H1))
                 (Pattern_binding (Var_name H2))
                 (Pattern_binding (Var_name T2)) (Pattern_binding (Var_name M))
                 (Pattern_cons ((Pattern_binding (Var_name H3)))
                   (Pattern_binding (Var_name T3)))))
              (c_guard ())
              (c_rhs
                (Expr_apply
                  ((fa_name (Expr_name (Atom_name (Atom rmerge3_2))))
                    (fa_args
                      ((Expr_name (Var_name T1)) (Expr_name (Var_name H1))
                        (Expr_cons ((Expr_name (Var_name H2)))
                          (Expr_name (Var_name M)))
                        (Expr_name (Var_name T2)) (Expr_name (Var_name H3))
                        (Expr_name (Var_name T3))))))))
            ((c_lhs
               ((Pattern_binding (Var_name T1)) (Pattern_binding (Var_name H1))
                 (Pattern_binding (Var_name H2))
                 (Pattern_binding (Var_name T2)) (Pattern_binding (Var_name M))
                 (Pattern_list ())))
              (c_guard ())
              (c_rhs
                (Expr_apply
                  ((fa_name (Expr_name (Atom_name (Atom rmerge2_2))))
                    (fa_args
                      ((Expr_name (Var_name T1)) (Expr_name (Var_name H2))
                        (Expr_name (Var_name T2)) (Expr_name (Var_name M))
                        (Expr_name (Var_name H1))))))))))
        (fd_spec ())))
    (Module_comment (Comment " H1 > H2. Inlined."))
    (Function_decl
      ((fd_name (Atom rmerge3_21)) (fd_arity 7)
        (fd_cases
          (((c_lhs
              ((Pattern_binding (Var_name T1)) (Pattern_binding (Var_name H1))
                (Pattern_binding (Var_name H2)) (Pattern_binding (Var_name T2))
                (Pattern_binding (Var_name H3)) (Pattern_binding (Var_name T3))
                (Pattern_binding (Var_name M))))
             (c_guard
               (((Expr_apply
                   ((fa_name
                      (Expr_name
                        (Qualified_name (n_mod (Atom_name (Atom erlang)))
                          (n_name (Atom_name (Atom '=<'))))))
                     (fa_args
                       ((Expr_name (Var_name H1)) (Expr_name (Var_name H3)))))))))
             (c_rhs
               (Expr_apply
                 ((fa_name (Expr_name (Atom_name (Atom rmerge3_21_3))))
                   (fa_args
                     ((Expr_name (Var_name T1)) (Expr_name (Var_name H1))
                       (Expr_name (Var_name H2)) (Expr_name (Var_name T2))
                       (Expr_cons ((Expr_name (Var_name H3)))
                         (Expr_name (Var_name M)))
                       (Expr_name (Var_name T3))))))))
            ((c_lhs
               ((Pattern_binding (Var_name T1)) (Pattern_binding (Var_name H1))
                 (Pattern_binding (Var_name H2))
                 (Pattern_binding (Var_name T2))
                 (Pattern_binding (Var_name H3))
                 (Pattern_binding (Var_name T3))
                 (Pattern_binding (Var_name M))))
              (c_guard ())
              (c_rhs
                (Expr_apply
                  ((fa_name (Expr_name (Atom_name (Atom rmerge3_1))))
                    (fa_args
                      ((Expr_name (Var_name T1))
                        (Expr_cons ((Expr_name (Var_name H1)))
                          (Expr_name (Var_name M)))
                        (Expr_name (Var_name H2)) (Expr_name (Var_name T2))
                        (Expr_name (Var_name H3)) (Expr_name (Var_name T3))))))))))
        (fd_spec ())))
    (Module_comment (Comment " H1 > H2, take L3 apart."))
    (Function_decl
      ((fd_name (Atom rmerge3_21_3)) (fd_arity 6)
        (fd_cases
          (((c_lhs
              ((Pattern_binding (Var_name T1)) (Pattern_binding (Var_name H1))
                (Pattern_binding (Var_name H2)) (Pattern_binding (Var_name T2))
                (Pattern_binding (Var_name M))
                (Pattern_cons ((Pattern_binding (Var_name H3)))
                  (Pattern_binding (Var_name T3)))))
             (c_guard
               (((Expr_apply
                   ((fa_name
                      (Expr_name
                        (Qualified_name (n_mod (Atom_name (Atom erlang)))
                          (n_name (Atom_name (Atom '=<'))))))
                     (fa_args
                       ((Expr_name (Var_name H1)) (Expr_name (Var_name H3)))))))))
             (c_rhs
               (Expr_apply
                 ((fa_name (Expr_name (Atom_name (Atom rmerge3_21_3))))
                   (fa_args
                     ((Expr_name (Var_name T1)) (Expr_name (Var_name H1))
                       (Expr_name (Var_name H2)) (Expr_name (Var_name T2))
                       (Expr_cons ((Expr_name (Var_name H3)))
                         (Expr_name (Var_name M)))
                       (Expr_name (Var_name T3))))))))
            ((c_lhs
               ((Pattern_binding (Var_name T1)) (Pattern_binding (Var_name H1))
                 (Pattern_binding (Var_name H2))
                 (Pattern_binding (Var_name T2)) (Pattern_binding (Var_name M))
                 (Pattern_cons ((Pattern_binding (Var_name H3)))
                   (Pattern_binding (Var_name T3)))))
              (c_guard ())
              (c_rhs
                (Expr_apply
                  ((fa_name (Expr_name (Atom_name (Atom rmerge3_1))))
                    (fa_args
                      ((Expr_name (Var_name T1))
                        (Expr_cons ((Expr_name (Var_name H1)))
                          (Expr_name (Var_name M)))
                        (Expr_name (Var_name H2)) (Expr_name (Var_name T2))
                        (Expr_name (Var_name H3)) (Expr_name (Var_name T3))))))))
            ((c_lhs
               ((Pattern_binding (Var_name T1)) (Pattern_binding (Var_name H1))
                 (Pattern_binding (Var_name H2))
                 (Pattern_binding (Var_name T2)) (Pattern_binding (Var_name M))
                 (Pattern_list ())))
              (c_guard ())
              (c_rhs
                (Expr_apply
                  ((fa_name (Expr_name (Atom_name (Atom rmerge2_1))))
                    (fa_args
                      ((Expr_name (Var_name T1)) (Expr_name (Var_name H2))
                        (Expr_name (Var_name T2))
                        (Expr_cons ((Expr_name (Var_name H1)))
                          (Expr_name (Var_name M)))))))))))
        (fd_spec ())))
    (Module_comment (Comment "% merge/2"))
    (Function_decl
      ((fd_name (Atom merge2_1)) (fd_arity 4)
        (fd_cases
          (((c_lhs
              ((Pattern_cons ((Pattern_binding (Var_name H1)))
                 (Pattern_binding (Var_name T1)))
                (Pattern_binding (Var_name H2)) (Pattern_binding (Var_name T2))
                (Pattern_binding (Var_name M))))
             (c_guard
               (((Expr_apply
                   ((fa_name
                      (Expr_name
                        (Qualified_name (n_mod (Atom_name (Atom erlang)))
                          (n_name (Atom_name (Atom '=<'))))))
                     (fa_args
                       ((Expr_name (Var_name H1)) (Expr_name (Var_name H2)))))))))
             (c_rhs
               (Expr_apply
                 ((fa_name (Expr_name (Atom_name (Atom merge2_1))))
                   (fa_args
                     ((Expr_name (Var_name T1)) (Expr_name (Var_name H2))
                       (Expr_name (Var_name T2))
                       (Expr_cons ((Expr_name (Var_name H1)))
                         (Expr_name (Var_name M)))))))))
            ((c_lhs
               ((Pattern_cons ((Pattern_binding (Var_name H1)))
                  (Pattern_binding (Var_name T1)))
                 (Pattern_binding (Var_name H2))
                 (Pattern_binding (Var_name T2))
                 (Pattern_binding (Var_name M))))
              (c_guard ())
              (c_rhs
                (Expr_apply
                  ((fa_name (Expr_name (Atom_name (Atom merge2_2))))
                    (fa_args
                      ((Expr_name (Var_name T1)) (Expr_name (Var_name H2))
                        (Expr_name (Var_name T2)) (Expr_name (Var_name M))
                        (Expr_name (Var_name H1))))))))
            ((c_lhs
               ((Pattern_list ()) (Pattern_binding (Var_name H2))
                 (Pattern_binding (Var_name T2))
                 (Pattern_binding (Var_name M))))
              (c_guard ())
              (c_rhs
                (Expr_apply
                  ((fa_name
                     (Expr_name
                       (Qualified_name (n_mod (Atom_name (Atom lists)))
                         (n_name (Atom_name (Atom reverse))))))
                    (fa_args
                      ((Expr_name (Var_name T2))
                        (Expr_cons ((Expr_name (Var_name H2)))
                          (Expr_name (Var_name M)))))))))))
        (fd_spec ())))
    (Function_decl
      ((fd_name (Atom merge2_2)) (fd_arity 5)
        (fd_cases
          (((c_lhs
              ((Pattern_binding (Var_name T1)) (Pattern_binding (Var_name HdM))
                (Pattern_cons ((Pattern_binding (Var_name H2)))
                  (Pattern_binding (Var_name T2)))
                (Pattern_binding (Var_name M)) (Pattern_binding (Var_name H1))))
             (c_guard
               (((Expr_apply
                   ((fa_name
                      (Expr_name
                        (Qualified_name (n_mod (Atom_name (Atom erlang)))
                          (n_name (Atom_name (Atom '=<'))))))
                     (fa_args
                       ((Expr_name (Var_name H1)) (Expr_name (Var_name H2)))))))))
             (c_rhs
               (Expr_apply
                 ((fa_name (Expr_name (Atom_name (Atom merge2_1))))
                   (fa_args
                     ((Expr_name (Var_name T1)) (Expr_name (Var_name H2))
                       (Expr_name (Var_name T2))
                       (Expr_cons
                         ((Expr_name (Var_name H1)) (Expr_name (Var_name HdM)))
                         (Expr_name (Var_name M)))))))))
            ((c_lhs
               ((Pattern_binding (Var_name T1))
                 (Pattern_binding (Var_name HdM))
                 (Pattern_cons ((Pattern_binding (Var_name H2)))
                   (Pattern_binding (Var_name T2)))
                 (Pattern_binding (Var_name M))
                 (Pattern_binding (Var_name H1))))
              (c_guard ())
              (c_rhs
                (Expr_apply
                  ((fa_name (Expr_name (Atom_name (Atom merge2_2))))
                    (fa_args
                      ((Expr_name (Var_name T1)) (Expr_name (Var_name H2))
                        (Expr_name (Var_name T2))
                        (Expr_cons ((Expr_name (Var_name HdM)))
                          (Expr_name (Var_name M)))
                        (Expr_name (Var_name H1))))))))
            ((c_lhs
               ((Pattern_binding (Var_name T1))
                 (Pattern_binding (Var_name HdM)) (Pattern_list ())
                 (Pattern_binding (Var_name M))
                 (Pattern_binding (Var_name H1))))
              (c_guard ())
              (c_rhs
                (Expr_apply
                  ((fa_name
                     (Expr_name
                       (Qualified_name (n_mod (Atom_name (Atom lists)))
                         (n_name (Atom_name (Atom reverse))))))
                    (fa_args
                      ((Expr_name (Var_name T1))
                        (Expr_cons
                          ((Expr_name (Var_name H1))
                            (Expr_name (Var_name HdM)))
                          (Expr_name (Var_name M)))))))))))
        (fd_spec ())))
    (Module_comment (Comment "% rmerge/2"))
    (Function_decl
      ((fd_name (Atom rmerge2_1)) (fd_arity 4)
        (fd_cases
          (((c_lhs
              ((Pattern_cons ((Pattern_binding (Var_name H1)))
                 (Pattern_binding (Var_name T1)))
                (Pattern_binding (Var_name H2)) (Pattern_binding (Var_name T2))
                (Pattern_binding (Var_name M))))
             (c_guard
               (((Expr_apply
                   ((fa_name
                      (Expr_name
                        (Qualified_name (n_mod (Atom_name (Atom erlang)))
                          (n_name (Atom_name (Atom '=<'))))))
                     (fa_args
                       ((Expr_name (Var_name H1)) (Expr_name (Var_name H2)))))))))
             (c_rhs
               (Expr_apply
                 ((fa_name (Expr_name (Atom_name (Atom rmerge2_2))))
                   (fa_args
                     ((Expr_name (Var_name T1)) (Expr_name (Var_name H2))
                       (Expr_name (Var_name T2)) (Expr_name (Var_name M))
                       (Expr_name (Var_name H1))))))))
            ((c_lhs
               ((Pattern_cons ((Pattern_binding (Var_name H1)))
                  (Pattern_binding (Var_name T1)))
                 (Pattern_binding (Var_name H2))
                 (Pattern_binding (Var_name T2))
                 (Pattern_binding (Var_name M))))
              (c_guard ())
              (c_rhs
                (Expr_apply
                  ((fa_name (Expr_name (Atom_name (Atom rmerge2_1))))
                    (fa_args
                      ((Expr_name (Var_name T1)) (Expr_name (Var_name H2))
                        (Expr_name (Var_name T2))
                        (Expr_cons ((Expr_name (Var_name H1)))
                          (Expr_name (Var_name M)))))))))
            ((c_lhs
               ((Pattern_list ()) (Pattern_binding (Var_name H2))
                 (Pattern_binding (Var_name T2))
                 (Pattern_binding (Var_name M))))
              (c_guard ())
              (c_rhs
                (Expr_apply
                  ((fa_name
                     (Expr_name
                       (Qualified_name (n_mod (Atom_name (Atom lists)))
                         (n_name (Atom_name (Atom reverse))))))
                    (fa_args
                      ((Expr_name (Var_name T2))
                        (Expr_cons ((Expr_name (Var_name H2)))
                          (Expr_name (Var_name M)))))))))))
        (fd_spec ())))
    (Function_decl
      ((fd_name (Atom rmerge2_2)) (fd_arity 5)
        (fd_cases
          (((c_lhs
              ((Pattern_binding (Var_name T1)) (Pattern_binding (Var_name HdM))
                (Pattern_cons ((Pattern_binding (Var_name H2)))
                  (Pattern_binding (Var_name T2)))
                (Pattern_binding (Var_name M)) (Pattern_binding (Var_name H1))))
             (c_guard
               (((Expr_apply
                   ((fa_name
                      (Expr_name
                        (Qualified_name (n_mod (Atom_name (Atom erlang)))
                          (n_name (Atom_name (Atom '=<'))))))
                     (fa_args
                       ((Expr_name (Var_name H1)) (Expr_name (Var_name H2)))))))))
             (c_rhs
               (Expr_apply
                 ((fa_name (Expr_name (Atom_name (Atom rmerge2_2))))
                   (fa_args
                     ((Expr_name (Var_name T1)) (Expr_name (Var_name H2))
                       (Expr_name (Var_name T2))
                       (Expr_cons ((Expr_name (Var_name HdM)))
                         (Expr_name (Var_name M)))
                       (Expr_name (Var_name H1))))))))
            ((c_lhs
               ((Pattern_binding (Var_name T1))
                 (Pattern_binding (Var_name HdM))
                 (Pattern_cons ((Pattern_binding (Var_name H2)))
                   (Pattern_binding (Var_name T2)))
                 (Pattern_binding (Var_name M))
                 (Pattern_binding (Var_name H1))))
              (c_guard ())
              (c_rhs
                (Expr_apply
                  ((fa_name (Expr_name (Atom_name (Atom rmerge2_1))))
                    (fa_args
                      ((Expr_name (Var_name T1)) (Expr_name (Var_name H2))
                        (Expr_name (Var_name T2))
                        (Expr_cons
                          ((Expr_name (Var_name H1))
                            (Expr_name (Var_name HdM)))
                          (Expr_name (Var_name M)))))))))
            ((c_lhs
               ((Pattern_binding (Var_name T1))
                 (Pattern_binding (Var_name HdM)) (Pattern_list ())
                 (Pattern_binding (Var_name M))
                 (Pattern_binding (Var_name H1))))
              (c_guard ())
              (c_rhs
                (Expr_apply
                  ((fa_name
                     (Expr_name
                       (Qualified_name (n_mod (Atom_name (Atom lists)))
                         (n_name (Atom_name (Atom reverse))))))
                    (fa_args
                      ((Expr_name (Var_name T1))
                        (Expr_cons
                          ((Expr_name (Var_name H1))
                            (Expr_name (Var_name HdM)))
                          (Expr_name (Var_name M)))))))))))
        (fd_spec ())))
    (Module_comment (Comment "% usort/1"))
    (Module_comment (Comment "% Ascending."))
    (Function_decl
      ((fd_name (Atom usplit_1)) (fd_arity 5)
        (fd_cases
          (((c_lhs
              ((Pattern_binding (Var_name X)) (Pattern_binding (Var_name Y))
                (Pattern_cons ((Pattern_binding (Var_name Z)))
                  (Pattern_binding (Var_name L)))
                (Pattern_binding (Var_name R)) (Pattern_binding (Var_name Rs))))
             (c_guard
               (((Expr_apply
                   ((fa_name
                      (Expr_name
                        (Qualified_name (n_mod (Atom_name (Atom erlang)))
                          (n_name (Atom_name (Atom '>'))))))
                     (fa_args
                       ((Expr_name (Var_name Z)) (Expr_name (Var_name Y)))))))))
             (c_rhs
               (Expr_apply
                 ((fa_name (Expr_name (Atom_name (Atom usplit_1))))
                   (fa_args
                     ((Expr_name (Var_name Y)) (Expr_name (Var_name Z))
                       (Expr_name (Var_name L))
                       (Expr_cons ((Expr_name (Var_name X)))
                         (Expr_name (Var_name R)))
                       (Expr_name (Var_name Rs))))))))
            ((c_lhs
               ((Pattern_binding (Var_name X)) (Pattern_binding (Var_name Y))
                 (Pattern_cons ((Pattern_binding (Var_name Z)))
                   (Pattern_binding (Var_name L)))
                 (Pattern_binding (Var_name R))
                 (Pattern_binding (Var_name Rs))))
              (c_guard
                (((Expr_apply
                    ((fa_name
                       (Expr_name
                         (Qualified_name (n_mod (Atom_name (Atom erlang)))
                           (n_name (Atom_name (Atom '=='))))))
                      (fa_args
                        ((Expr_name (Var_name Z)) (Expr_name (Var_name Y)))))))))
              (c_rhs
                (Expr_apply
                  ((fa_name (Expr_name (Atom_name (Atom usplit_1))))
                    (fa_args
                      ((Expr_name (Var_name X)) (Expr_name (Var_name Y))
                        (Expr_name (Var_name L)) (Expr_name (Var_name R))
                        (Expr_name (Var_name Rs))))))))
            ((c_lhs
               ((Pattern_binding (Var_name X)) (Pattern_binding (Var_name Y))
                 (Pattern_cons ((Pattern_binding (Var_name Z)))
                   (Pattern_binding (Var_name L)))
                 (Pattern_binding (Var_name R))
                 (Pattern_binding (Var_name Rs))))
              (c_guard
                (((Expr_apply
                    ((fa_name
                       (Expr_name
                         (Qualified_name (n_mod (Atom_name (Atom erlang)))
                           (n_name (Atom_name (Atom '>'))))))
                      (fa_args
                        ((Expr_name (Var_name Z)) (Expr_name (Var_name X)))))))))
              (c_rhs
                (Expr_apply
                  ((fa_name (Expr_name (Atom_name (Atom usplit_1))))
                    (fa_args
                      ((Expr_name (Var_name Z)) (Expr_name (Var_name Y))
                        (Expr_name (Var_name L))
                        (Expr_cons ((Expr_name (Var_name X)))
                          (Expr_name (Var_name R)))
                        (Expr_name (Var_name Rs))))))))
            ((c_lhs
               ((Pattern_binding (Var_name X)) (Pattern_binding (Var_name Y))
                 (Pattern_cons ((Pattern_binding (Var_name Z)))
                   (Pattern_binding (Var_name L)))
                 (Pattern_binding (Var_name R))
                 (Pattern_binding (Var_name Rs))))
              (c_guard
                (((Expr_apply
                    ((fa_name
                       (Expr_name
                         (Qualified_name (n_mod (Atom_name (Atom erlang)))
                           (n_name (Atom_name (Atom '=='))))))
                      (fa_args
                        ((Expr_name (Var_name Z)) (Expr_name (Var_name X)))))))))
              (c_rhs
                (Expr_apply
                  ((fa_name (Expr_name (Atom_name (Atom usplit_1))))
                    (fa_args
                      ((Expr_name (Var_name X)) (Expr_name (Var_name Y))
                        (Expr_name (Var_name L)) (Expr_name (Var_name R))
                        (Expr_name (Var_name Rs))))))))
            ((c_lhs
               ((Pattern_binding (Var_name X)) (Pattern_binding (Var_name Y))
                 (Pattern_cons ((Pattern_binding (Var_name Z)))
                   (Pattern_binding (Var_name L)))
                 (Pattern_list ()) (Pattern_binding (Var_name Rs))))
              (c_guard ())
              (c_rhs
                (Expr_apply
                  ((fa_name (Expr_name (Atom_name (Atom usplit_1))))
                    (fa_args
                      ((Expr_name (Var_name X)) (Expr_name (Var_name Y))
                        (Expr_name (Var_name L))
                        (Expr_list ((Expr_name (Var_name Z))))
                        (Expr_name (Var_name Rs))))))))
            ((c_lhs
               ((Pattern_binding (Var_name X)) (Pattern_binding (Var_name Y))
                 (Pattern_cons ((Pattern_binding (Var_name Z)))
                   (Pattern_binding (Var_name L)))
                 (Pattern_binding (Var_name R))
                 (Pattern_binding (Var_name Rs))))
              (c_guard ())
              (c_rhs
                (Expr_apply
                  ((fa_name (Expr_name (Atom_name (Atom usplit_1_1))))
                    (fa_args
                      ((Expr_name (Var_name X)) (Expr_name (Var_name Y))
                        (Expr_name (Var_name L)) (Expr_name (Var_name R))
                        (Expr_name (Var_name Rs)) (Expr_name (Var_name Z))))))))
            ((c_lhs
               ((Pattern_binding (Var_name X)) (Pattern_binding (Var_name Y))
                 (Pattern_list ()) (Pattern_binding (Var_name R))
                 (Pattern_binding (Var_name Rs))))
              (c_guard ())
              (c_rhs
                (Expr_apply
                  ((fa_name (Expr_name (Atom_name (Atom rumergel))))
                    (fa_args
                      ((Expr_cons
                         ((Expr_cons
                            ((Expr_name (Var_name Y)) (Expr_name (Var_name X)))
                            (Expr_name (Var_name R))))
                         (Expr_name (Var_name Rs)))
                        (Expr_list ()) (Expr_literal (Lit_atom (Atom asc)))))))))))
        (fd_spec ())))
    (Function_decl
      ((fd_name (Atom usplit_1_1)) (fd_arity 6)
        (fd_cases
          (((c_lhs
              ((Pattern_binding (Var_name X)) (Pattern_binding (Var_name Y))
                (Pattern_cons ((Pattern_binding (Var_name Z)))
                  (Pattern_binding (Var_name L)))
                (Pattern_binding (Var_name R)) (Pattern_binding (Var_name Rs))
                (Pattern_binding (Var_name S))))
             (c_guard
               (((Expr_apply
                   ((fa_name
                      (Expr_name
                        (Qualified_name (n_mod (Atom_name (Atom erlang)))
                          (n_name (Atom_name (Atom '>'))))))
                     (fa_args
                       ((Expr_name (Var_name Z)) (Expr_name (Var_name Y)))))))))
             (c_rhs
               (Expr_apply
                 ((fa_name (Expr_name (Atom_name (Atom usplit_1_1))))
                   (fa_args
                     ((Expr_name (Var_name Y)) (Expr_name (Var_name Z))
                       (Expr_name (Var_name L))
                       (Expr_cons ((Expr_name (Var_name X)))
                         (Expr_name (Var_name R)))
                       (Expr_name (Var_name Rs)) (Expr_name (Var_name S))))))))
            ((c_lhs
               ((Pattern_binding (Var_name X)) (Pattern_binding (Var_name Y))
                 (Pattern_cons ((Pattern_binding (Var_name Z)))
                   (Pattern_binding (Var_name L)))
                 (Pattern_binding (Var_name R)) (Pattern_binding (Var_name Rs))
                 (Pattern_binding (Var_name S))))
              (c_guard
                (((Expr_apply
                    ((fa_name
                       (Expr_name
                         (Qualified_name (n_mod (Atom_name (Atom erlang)))
                           (n_name (Atom_name (Atom '=='))))))
                      (fa_args
                        ((Expr_name (Var_name Z)) (Expr_name (Var_name Y)))))))))
              (c_rhs
                (Expr_apply
                  ((fa_name (Expr_name (Atom_name (Atom usplit_1_1))))
                    (fa_args
                      ((Expr_name (Var_name X)) (Expr_name (Var_name Y))
                        (Expr_name (Var_name L)) (Expr_name (Var_name R))
                        (Expr_name (Var_name Rs)) (Expr_name (Var_name S))))))))
            ((c_lhs
               ((Pattern_binding (Var_name X)) (Pattern_binding (Var_name Y))
                 (Pattern_cons ((Pattern_binding (Var_name Z)))
                   (Pattern_binding (Var_name L)))
                 (Pattern_binding (Var_name R)) (Pattern_binding (Var_name Rs))
                 (Pattern_binding (Var_name S))))
              (c_guard
                (((Expr_apply
                    ((fa_name
                       (Expr_name
                         (Qualified_name (n_mod (Atom_name (Atom erlang)))
                           (n_name (Atom_name (Atom '>'))))))
                      (fa_args
                        ((Expr_name (Var_name Z)) (Expr_name (Var_name X)))))))))
              (c_rhs
                (Expr_apply
                  ((fa_name (Expr_name (Atom_name (Atom usplit_1_1))))
                    (fa_args
                      ((Expr_name (Var_name Z)) (Expr_name (Var_name Y))
                        (Expr_name (Var_name L))
                        (Expr_cons ((Expr_name (Var_name X)))
                          (Expr_name (Var_name R)))
                        (Expr_name (Var_name Rs)) (Expr_name (Var_name S))))))))
            ((c_lhs
               ((Pattern_binding (Var_name X)) (Pattern_binding (Var_name Y))
                 (Pattern_cons ((Pattern_binding (Var_name Z)))
                   (Pattern_binding (Var_name L)))
                 (Pattern_binding (Var_name R)) (Pattern_binding (Var_name Rs))
                 (Pattern_binding (Var_name S))))
              (c_guard
                (((Expr_apply
                    ((fa_name
                       (Expr_name
                         (Qualified_name (n_mod (Atom_name (Atom erlang)))
                           (n_name (Atom_name (Atom '=='))))))
                      (fa_args
                        ((Expr_name (Var_name Z)) (Expr_name (Var_name X)))))))))
              (c_rhs
                (Expr_apply
                  ((fa_name (Expr_name (Atom_name (Atom usplit_1_1))))
                    (fa_args
                      ((Expr_name (Var_name X)) (Expr_name (Var_name Y))
                        (Expr_name (Var_name L)) (Expr_name (Var_name R))
                        (Expr_name (Var_name Rs)) (Expr_name (Var_name S))))))))
            ((c_lhs
               ((Pattern_binding (Var_name X)) (Pattern_binding (Var_name Y))
                 (Pattern_cons ((Pattern_binding (Var_name Z)))
                   (Pattern_binding (Var_name L)))
                 (Pattern_binding (Var_name R)) (Pattern_binding (Var_name Rs))
                 (Pattern_binding (Var_name S))))
              (c_guard
                (((Expr_apply
                    ((fa_name
                       (Expr_name
                         (Qualified_name (n_mod (Atom_name (Atom erlang)))
                           (n_name (Atom_name (Atom '>'))))))
                      (fa_args
                        ((Expr_name (Var_name Z)) (Expr_name (Var_name S)))))))))
              (c_rhs
                (Expr_apply
                  ((fa_name (Expr_name (Atom_name (Atom usplit_1))))
                    (fa_args
                      ((Expr_name (Var_name S)) (Expr_name (Var_name Z))
                        (Expr_name (Var_name L)) (Expr_list ())
                        (Expr_cons
                          ((Expr_cons
                             ((Expr_name (Var_name Y))
                               (Expr_name (Var_name X)))
                             (Expr_name (Var_name R))))
                          (Expr_name (Var_name Rs)))))))))
            ((c_lhs
               ((Pattern_binding (Var_name X)) (Pattern_binding (Var_name Y))
                 (Pattern_cons ((Pattern_binding (Var_name Z)))
                   (Pattern_binding (Var_name L)))
                 (Pattern_binding (Var_name R)) (Pattern_binding (Var_name Rs))
                 (Pattern_binding (Var_name S))))
              (c_guard
                (((Expr_apply
                    ((fa_name
                       (Expr_name
                         (Qualified_name (n_mod (Atom_name (Atom erlang)))
                           (n_name (Atom_name (Atom '=='))))))
                      (fa_args
                        ((Expr_name (Var_name Z)) (Expr_name (Var_name S)))))))))
              (c_rhs
                (Expr_apply
                  ((fa_name (Expr_name (Atom_name (Atom usplit_1_1))))
                    (fa_args
                      ((Expr_name (Var_name X)) (Expr_name (Var_name Y))
                        (Expr_name (Var_name L)) (Expr_name (Var_name R))
                        (Expr_name (Var_name Rs)) (Expr_name (Var_name S))))))))
            ((c_lhs
               ((Pattern_binding (Var_name X)) (Pattern_binding (Var_name Y))
                 (Pattern_cons ((Pattern_binding (Var_name Z)))
                   (Pattern_binding (Var_name L)))
                 (Pattern_binding (Var_name R)) (Pattern_binding (Var_name Rs))
                 (Pattern_binding (Var_name S))))
              (c_guard ())
              (c_rhs
                (Expr_apply
                  ((fa_name (Expr_name (Atom_name (Atom usplit_1))))
                    (fa_args
                      ((Expr_name (Var_name Z)) (Expr_name (Var_name S))
                        (Expr_name (Var_name L)) (Expr_list ())
                        (Expr_cons
                          ((Expr_cons
                             ((Expr_name (Var_name Y))
                               (Expr_name (Var_name X)))
                             (Expr_name (Var_name R))))
                          (Expr_name (Var_name Rs)))))))))
            ((c_lhs
               ((Pattern_binding (Var_name X)) (Pattern_binding (Var_name Y))
                 (Pattern_list ()) (Pattern_binding (Var_name R))
                 (Pattern_binding (Var_name Rs))
                 (Pattern_binding (Var_name S))))
              (c_guard ())
              (c_rhs
                (Expr_apply
                  ((fa_name (Expr_name (Atom_name (Atom rumergel))))
                    (fa_args
                      ((Expr_cons
                         ((Expr_list ((Expr_name (Var_name S))))
                           (Expr_cons
                             ((Expr_name (Var_name Y))
                               (Expr_name (Var_name X)))
                             (Expr_name (Var_name R))))
                         (Expr_name (Var_name Rs)))
                        (Expr_list ()) (Expr_literal (Lit_atom (Atom asc)))))))))))
        (fd_spec ())))
    (Module_comment (Comment "% Descending."))
    (Function_decl
      ((fd_name (Atom usplit_2)) (fd_arity 5)
        (fd_cases
          (((c_lhs
              ((Pattern_binding (Var_name X)) (Pattern_binding (Var_name Y))
                (Pattern_cons ((Pattern_binding (Var_name Z)))
                  (Pattern_binding (Var_name L)))
                (Pattern_binding (Var_name R)) (Pattern_binding (Var_name Rs))))
             (c_guard
               (((Expr_apply
                   ((fa_name
                      (Expr_name
                        (Qualified_name (n_mod (Atom_name (Atom erlang)))
                          (n_name (Atom_name (Atom '<'))))))
                     (fa_args
                       ((Expr_name (Var_name Z)) (Expr_name (Var_name Y)))))))))
             (c_rhs
               (Expr_apply
                 ((fa_name (Expr_name (Atom_name (Atom usplit_2))))
                   (fa_args
                     ((Expr_name (Var_name Y)) (Expr_name (Var_name Z))
                       (Expr_name (Var_name L))
                       (Expr_cons ((Expr_name (Var_name X)))
                         (Expr_name (Var_name R)))
                       (Expr_name (Var_name Rs))))))))
            ((c_lhs
               ((Pattern_binding (Var_name X)) (Pattern_binding (Var_name Y))
                 (Pattern_cons ((Pattern_binding (Var_name Z)))
                   (Pattern_binding (Var_name L)))
                 (Pattern_binding (Var_name R))
                 (Pattern_binding (Var_name Rs))))
              (c_guard
                (((Expr_apply
                    ((fa_name
                       (Expr_name
                         (Qualified_name (n_mod (Atom_name (Atom erlang)))
                           (n_name (Atom_name (Atom '=='))))))
                      (fa_args
                        ((Expr_name (Var_name Z)) (Expr_name (Var_name Y)))))))))
              (c_rhs
                (Expr_apply
                  ((fa_name (Expr_name (Atom_name (Atom usplit_2))))
                    (fa_args
                      ((Expr_name (Var_name X)) (Expr_name (Var_name Y))
                        (Expr_name (Var_name L)) (Expr_name (Var_name R))
                        (Expr_name (Var_name Rs))))))))
            ((c_lhs
               ((Pattern_binding (Var_name X)) (Pattern_binding (Var_name Y))
                 (Pattern_cons ((Pattern_binding (Var_name Z)))
                   (Pattern_binding (Var_name L)))
                 (Pattern_binding (Var_name R))
                 (Pattern_binding (Var_name Rs))))
              (c_guard
                (((Expr_apply
                    ((fa_name
                       (Expr_name
                         (Qualified_name (n_mod (Atom_name (Atom erlang)))
                           (n_name (Atom_name (Atom '<'))))))
                      (fa_args
                        ((Expr_name (Var_name Z)) (Expr_name (Var_name X)))))))))
              (c_rhs
                (Expr_apply
                  ((fa_name (Expr_name (Atom_name (Atom usplit_2))))
                    (fa_args
                      ((Expr_name (Var_name Z)) (Expr_name (Var_name Y))
                        (Expr_name (Var_name L))
                        (Expr_cons ((Expr_name (Var_name X)))
                          (Expr_name (Var_name R)))
                        (Expr_name (Var_name Rs))))))))
            ((c_lhs
               ((Pattern_binding (Var_name X)) (Pattern_binding (Var_name Y))
                 (Pattern_cons ((Pattern_binding (Var_name Z)))
                   (Pattern_binding (Var_name L)))
                 (Pattern_binding (Var_name R))
                 (Pattern_binding (Var_name Rs))))
              (c_guard
                (((Expr_apply
                    ((fa_name
                       (Expr_name
                         (Qualified_name (n_mod (Atom_name (Atom erlang)))
                           (n_name (Atom_name (Atom '=='))))))
                      (fa_args
                        ((Expr_name (Var_name Z)) (Expr_name (Var_name X)))))))))
              (c_rhs
                (Expr_apply
                  ((fa_name (Expr_name (Atom_name (Atom usplit_2))))
                    (fa_args
                      ((Expr_name (Var_name X)) (Expr_name (Var_name Y))
                        (Expr_name (Var_name L)) (Expr_name (Var_name R))
                        (Expr_name (Var_name Rs))))))))
            ((c_lhs
               ((Pattern_binding (Var_name X)) (Pattern_binding (Var_name Y))
                 (Pattern_cons ((Pattern_binding (Var_name Z)))
                   (Pattern_binding (Var_name L)))
                 (Pattern_list ()) (Pattern_binding (Var_name Rs))))
              (c_guard ())
              (c_rhs
                (Expr_apply
                  ((fa_name (Expr_name (Atom_name (Atom usplit_2))))
                    (fa_args
                      ((Expr_name (Var_name X)) (Expr_name (Var_name Y))
                        (Expr_name (Var_name L))
                        (Expr_list ((Expr_name (Var_name Z))))
                        (Expr_name (Var_name Rs))))))))
            ((c_lhs
               ((Pattern_binding (Var_name X)) (Pattern_binding (Var_name Y))
                 (Pattern_cons ((Pattern_binding (Var_name Z)))
                   (Pattern_binding (Var_name L)))
                 (Pattern_binding (Var_name R))
                 (Pattern_binding (Var_name Rs))))
              (c_guard ())
              (c_rhs
                (Expr_apply
                  ((fa_name (Expr_name (Atom_name (Atom usplit_2_1))))
                    (fa_args
                      ((Expr_name (Var_name X)) (Expr_name (Var_name Y))
                        (Expr_name (Var_name L)) (Expr_name (Var_name R))
                        (Expr_name (Var_name Rs)) (Expr_name (Var_name Z))))))))
            ((c_lhs
               ((Pattern_binding (Var_name X)) (Pattern_binding (Var_name Y))
                 (Pattern_list ()) (Pattern_binding (Var_name R))
                 (Pattern_binding (Var_name Rs))))
              (c_guard ())
              (c_rhs
                (Expr_apply
                  ((fa_name (Expr_name (Atom_name (Atom umergel))))
                    (fa_args
                      ((Expr_cons
                         ((Expr_cons
                            ((Expr_name (Var_name Y)) (Expr_name (Var_name X)))
                            (Expr_name (Var_name R))))
                         (Expr_name (Var_name Rs)))
                        (Expr_list ()) (Expr_literal (Lit_atom (Atom desc)))))))))))
        (fd_spec ())))
    (Function_decl
      ((fd_name (Atom usplit_2_1)) (fd_arity 6)
        (fd_cases
          (((c_lhs
              ((Pattern_binding (Var_name X)) (Pattern_binding (Var_name Y))
                (Pattern_cons ((Pattern_binding (Var_name Z)))
                  (Pattern_binding (Var_name L)))
                (Pattern_binding (Var_name R)) (Pattern_binding (Var_name Rs))
                (Pattern_binding (Var_name S))))
             (c_guard
               (((Expr_apply
                   ((fa_name
                      (Expr_name
                        (Qualified_name (n_mod (Atom_name (Atom erlang)))
                          (n_name (Atom_name (Atom '<'))))))
                     (fa_args
                       ((Expr_name (Var_name Z)) (Expr_name (Var_name Y)))))))))
             (c_rhs
               (Expr_apply
                 ((fa_name (Expr_name (Atom_name (Atom usplit_2_1))))
                   (fa_args
                     ((Expr_name (Var_name Y)) (Expr_name (Var_name Z))
                       (Expr_name (Var_name L))
                       (Expr_cons ((Expr_name (Var_name X)))
                         (Expr_name (Var_name R)))
                       (Expr_name (Var_name Rs)) (Expr_name (Var_name S))))))))
            ((c_lhs
               ((Pattern_binding (Var_name X)) (Pattern_binding (Var_name Y))
                 (Pattern_cons ((Pattern_binding (Var_name Z)))
                   (Pattern_binding (Var_name L)))
                 (Pattern_binding (Var_name R)) (Pattern_binding (Var_name Rs))
                 (Pattern_binding (Var_name S))))
              (c_guard
                (((Expr_apply
                    ((fa_name
                       (Expr_name
                         (Qualified_name (n_mod (Atom_name (Atom erlang)))
                           (n_name (Atom_name (Atom '=='))))))
                      (fa_args
                        ((Expr_name (Var_name Z)) (Expr_name (Var_name Y)))))))))
              (c_rhs
                (Expr_apply
                  ((fa_name (Expr_name (Atom_name (Atom usplit_2_1))))
                    (fa_args
                      ((Expr_name (Var_name X)) (Expr_name (Var_name Y))
                        (Expr_name (Var_name L)) (Expr_name (Var_name R))
                        (Expr_name (Var_name Rs)) (Expr_name (Var_name S))))))))
            ((c_lhs
               ((Pattern_binding (Var_name X)) (Pattern_binding (Var_name Y))
                 (Pattern_cons ((Pattern_binding (Var_name Z)))
                   (Pattern_binding (Var_name L)))
                 (Pattern_binding (Var_name R)) (Pattern_binding (Var_name Rs))
                 (Pattern_binding (Var_name S))))
              (c_guard
                (((Expr_apply
                    ((fa_name
                       (Expr_name
                         (Qualified_name (n_mod (Atom_name (Atom erlang)))
                           (n_name (Atom_name (Atom '<'))))))
                      (fa_args
                        ((Expr_name (Var_name Z)) (Expr_name (Var_name X)))))))))
              (c_rhs
                (Expr_apply
                  ((fa_name (Expr_name (Atom_name (Atom usplit_2_1))))
                    (fa_args
                      ((Expr_name (Var_name Z)) (Expr_name (Var_name Y))
                        (Expr_name (Var_name L))
                        (Expr_cons ((Expr_name (Var_name X)))
                          (Expr_name (Var_name R)))
                        (Expr_name (Var_name Rs)) (Expr_name (Var_name S))))))))
            ((c_lhs
               ((Pattern_binding (Var_name X)) (Pattern_binding (Var_name Y))
                 (Pattern_cons ((Pattern_binding (Var_name Z)))
                   (Pattern_binding (Var_name L)))
                 (Pattern_binding (Var_name R)) (Pattern_binding (Var_name Rs))
                 (Pattern_binding (Var_name S))))
              (c_guard
                (((Expr_apply
                    ((fa_name
                       (Expr_name
                         (Qualified_name (n_mod (Atom_name (Atom erlang)))
                           (n_name (Atom_name (Atom '=='))))))
                      (fa_args
                        ((Expr_name (Var_name Z)) (Expr_name (Var_name X)))))))))
              (c_rhs
                (Expr_apply
                  ((fa_name (Expr_name (Atom_name (Atom usplit_2_1))))
                    (fa_args
                      ((Expr_name (Var_name X)) (Expr_name (Var_name Y))
                        (Expr_name (Var_name L)) (Expr_name (Var_name R))
                        (Expr_name (Var_name Rs)) (Expr_name (Var_name S))))))))
            ((c_lhs
               ((Pattern_binding (Var_name X)) (Pattern_binding (Var_name Y))
                 (Pattern_cons ((Pattern_binding (Var_name Z)))
                   (Pattern_binding (Var_name L)))
                 (Pattern_binding (Var_name R)) (Pattern_binding (Var_name Rs))
                 (Pattern_binding (Var_name S))))
              (c_guard
                (((Expr_apply
                    ((fa_name
                       (Expr_name
                         (Qualified_name (n_mod (Atom_name (Atom erlang)))
                           (n_name (Atom_name (Atom '<'))))))
                      (fa_args
                        ((Expr_name (Var_name Z)) (Expr_name (Var_name S)))))))))
              (c_rhs
                (Expr_apply
                  ((fa_name (Expr_name (Atom_name (Atom usplit_2))))
                    (fa_args
                      ((Expr_name (Var_name S)) (Expr_name (Var_name Z))
                        (Expr_name (Var_name L)) (Expr_list ())
                        (Expr_cons
                          ((Expr_cons
                             ((Expr_name (Var_name Y))
                               (Expr_name (Var_name X)))
                             (Expr_name (Var_name R))))
                          (Expr_name (Var_name Rs)))))))))
            ((c_lhs
               ((Pattern_binding (Var_name X)) (Pattern_binding (Var_name Y))
                 (Pattern_cons ((Pattern_binding (Var_name Z)))
                   (Pattern_binding (Var_name L)))
                 (Pattern_binding (Var_name R)) (Pattern_binding (Var_name Rs))
                 (Pattern_binding (Var_name S))))
              (c_guard
                (((Expr_apply
                    ((fa_name
                       (Expr_name
                         (Qualified_name (n_mod (Atom_name (Atom erlang)))
                           (n_name (Atom_name (Atom '=='))))))
                      (fa_args
                        ((Expr_name (Var_name Z)) (Expr_name (Var_name S)))))))))
              (c_rhs
                (Expr_apply
                  ((fa_name (Expr_name (Atom_name (Atom usplit_2_1))))
                    (fa_args
                      ((Expr_name (Var_name X)) (Expr_name (Var_name Y))
                        (Expr_name (Var_name L)) (Expr_name (Var_name R))
                        (Expr_name (Var_name Rs)) (Expr_name (Var_name S))))))))
            ((c_lhs
               ((Pattern_binding (Var_name X)) (Pattern_binding (Var_name Y))
                 (Pattern_cons ((Pattern_binding (Var_name Z)))
                   (Pattern_binding (Var_name L)))
                 (Pattern_binding (Var_name R)) (Pattern_binding (Var_name Rs))
                 (Pattern_binding (Var_name S))))
              (c_guard ())
              (c_rhs
                (Expr_apply
                  ((fa_name (Expr_name (Atom_name (Atom usplit_2))))
                    (fa_args
                      ((Expr_name (Var_name Z)) (Expr_name (Var_name S))
                        (Expr_name (Var_name L)) (Expr_list ())
                        (Expr_cons
                          ((Expr_cons
                             ((Expr_name (Var_name Y))
                               (Expr_name (Var_name X)))
                             (Expr_name (Var_name R))))
                          (Expr_name (Var_name Rs)))))))))
            ((c_lhs
               ((Pattern_binding (Var_name X)) (Pattern_binding (Var_name Y))
                 (Pattern_list ()) (Pattern_binding (Var_name R))
                 (Pattern_binding (Var_name Rs))
                 (Pattern_binding (Var_name S))))
              (c_guard ())
              (c_rhs
                (Expr_apply
                  ((fa_name (Expr_name (Atom_name (Atom umergel))))
                    (fa_args
                      ((Expr_cons
                         ((Expr_list ((Expr_name (Var_name S))))
                           (Expr_cons
                             ((Expr_name (Var_name Y))
                               (Expr_name (Var_name X)))
                             (Expr_name (Var_name R))))
                         (Expr_name (Var_name Rs)))
                        (Expr_list ()) (Expr_literal (Lit_atom (Atom desc)))))))))))
        (fd_spec ())))
    (Module_comment (Comment "% umerge/1"))
    (Function_decl
      ((fd_name (Atom umergel)) (fd_arity 1)
        (fd_cases
          (((c_lhs ((Pattern_binding (Var_name L)))) (c_guard ())
             (c_rhs
               (Expr_apply
                 ((fa_name (Expr_name (Atom_name (Atom umergel))))
                   (fa_args
                     ((Expr_name (Var_name L)) (Expr_list ())
                       (Expr_literal (Lit_atom (Atom asc)))))))))))
        (fd_spec ())))
    (Function_decl
      ((fd_name (Atom umergel)) (fd_arity 3)
        (fd_cases
          (((c_lhs
              ((Pattern_cons ((Pattern_list ()))
                 (Pattern_binding (Var_name L)))
                (Pattern_binding (Var_name Acc))
                (Pattern_binding (Var_name O))))
             (c_guard ())
             (c_rhs
               (Expr_apply
                 ((fa_name (Expr_name (Atom_name (Atom umergel))))
                   (fa_args
                     ((Expr_name (Var_name L)) (Expr_name (Var_name Acc))
                       (Expr_name (Var_name O))))))))
            ((c_lhs
               ((Pattern_cons
                  ((Pattern_binding (Var_name T1))
                    (Pattern_cons ((Pattern_binding (Var_name H2)))
                      (Pattern_binding (Var_name T2)))
                    (Pattern_cons ((Pattern_binding (Var_name H3)))
                      (Pattern_binding (Var_name T3))))
                  (Pattern_binding (Var_name L)))
                 (Pattern_binding (Var_name Acc))
                 (Pattern_match (Lit_atom (Atom asc)))))
              (c_guard ())
              (c_rhs
                (Expr_apply
                  ((fa_name (Expr_name (Atom_name (Atom umergel))))
                    (fa_args
                      ((Expr_name (Var_name L))
                        (Expr_cons
                          ((Expr_apply
                             ((fa_name
                                (Expr_name (Atom_name (Atom umerge3_1))))
                               (fa_args
                                 ((Expr_name (Var_name T1))
                                   (Expr_cons ((Expr_name (Var_name H2)))
                                     (Expr_name (Var_name H3)))
                                   (Expr_name (Var_name T2))
                                   (Expr_name (Var_name H2)) (Expr_list ())
                                   (Expr_name (Var_name T3))
                                   (Expr_name (Var_name H3)))))))
                          (Expr_name (Var_name Acc)))
                        (Expr_literal (Lit_atom (Atom asc)))))))))
            ((c_lhs
               ((Pattern_cons
                  ((Pattern_cons ((Pattern_binding (Var_name H3)))
                     (Pattern_binding (Var_name T3)))
                    (Pattern_cons ((Pattern_binding (Var_name H2)))
                      (Pattern_binding (Var_name T2)))
                    (Pattern_binding (Var_name T1)))
                  (Pattern_binding (Var_name L)))
                 (Pattern_binding (Var_name Acc))
                 (Pattern_match (Lit_atom (Atom desc)))))
              (c_guard ())
              (c_rhs
                (Expr_apply
                  ((fa_name (Expr_name (Atom_name (Atom umergel))))
                    (fa_args
                      ((Expr_name (Var_name L))
                        (Expr_cons
                          ((Expr_apply
                             ((fa_name
                                (Expr_name (Atom_name (Atom umerge3_1))))
                               (fa_args
                                 ((Expr_name (Var_name T1))
                                   (Expr_cons ((Expr_name (Var_name H2)))
                                     (Expr_name (Var_name H3)))
                                   (Expr_name (Var_name T2))
                                   (Expr_name (Var_name H2)) (Expr_list ())
                                   (Expr_name (Var_name T3))
                                   (Expr_name (Var_name H3)))))))
                          (Expr_name (Var_name Acc)))
                        (Expr_literal (Lit_atom (Atom desc)))))))))
            ((c_lhs
               ((Pattern_cons
                  ((Pattern_binding (Var_name A)) (Pattern_list ()))
                  (Pattern_binding (Var_name L)))
                 (Pattern_binding (Var_name Acc))
                 (Pattern_binding (Var_name O))))
              (c_guard ())
              (c_rhs
                (Expr_apply
                  ((fa_name (Expr_name (Atom_name (Atom umergel))))
                    (fa_args
                      ((Expr_cons ((Expr_name (Var_name A)))
                         (Expr_name (Var_name L)))
                        (Expr_name (Var_name Acc)) (Expr_name (Var_name O))))))))
            ((c_lhs
               ((Pattern_cons
                  ((Pattern_binding (Var_name A))
                    (Pattern_binding (Var_name B)) (Pattern_list ()))
                  (Pattern_binding (Var_name L)))
                 (Pattern_binding (Var_name Acc))
                 (Pattern_binding (Var_name O))))
              (c_guard ())
              (c_rhs
                (Expr_apply
                  ((fa_name (Expr_name (Atom_name (Atom umergel))))
                    (fa_args
                      ((Expr_cons
                         ((Expr_name (Var_name A)) (Expr_name (Var_name B)))
                         (Expr_name (Var_name L)))
                        (Expr_name (Var_name Acc)) (Expr_name (Var_name O))))))))
            ((c_lhs
               ((Pattern_cons
                  ((Pattern_cons ((Pattern_binding (Var_name H1)))
                     (Pattern_binding (Var_name T1)))
                    (Pattern_binding (Var_name T2)))
                  (Pattern_binding (Var_name L)))
                 (Pattern_binding (Var_name Acc))
                 (Pattern_match (Lit_atom (Atom asc)))))
              (c_guard ())
              (c_rhs
                (Expr_apply
                  ((fa_name (Expr_name (Atom_name (Atom umergel))))
                    (fa_args
                      ((Expr_name (Var_name L))
                        (Expr_cons
                          ((Expr_apply
                             ((fa_name
                                (Expr_name (Atom_name (Atom umerge2_2))))
                               (fa_args
                                 ((Expr_name (Var_name T1))
                                   (Expr_name (Var_name T2)) (Expr_list ())
                                   (Expr_name (Var_name H1)))))))
                          (Expr_name (Var_name Acc)))
                        (Expr_literal (Lit_atom (Atom asc)))))))))
            ((c_lhs
               ((Pattern_cons
                  ((Pattern_binding (Var_name T2))
                    (Pattern_cons ((Pattern_binding (Var_name H1)))
                      (Pattern_binding (Var_name T1))))
                  (Pattern_binding (Var_name L)))
                 (Pattern_binding (Var_name Acc))
                 (Pattern_match (Lit_atom (Atom desc)))))
              (c_guard ())
              (c_rhs
                (Expr_apply
                  ((fa_name (Expr_name (Atom_name (Atom umergel))))
                    (fa_args
                      ((Expr_name (Var_name L))
                        (Expr_cons
                          ((Expr_apply
                             ((fa_name
                                (Expr_name (Atom_name (Atom umerge2_2))))
                               (fa_args
                                 ((Expr_name (Var_name T1))
                                   (Expr_name (Var_name T2)) (Expr_list ())
                                   (Expr_name (Var_name H1)))))))
                          (Expr_name (Var_name Acc)))
                        (Expr_literal (Lit_atom (Atom desc)))))))))
            ((c_lhs
               ((Pattern_list ((Pattern_binding (Var_name L))))
                 (Pattern_list ()) (Pattern_binding (Var_name _O))))
              (c_guard ()) (c_rhs (Expr_name (Var_name L))))
            ((c_lhs
               ((Pattern_list ((Pattern_binding (Var_name L))))
                 (Pattern_binding (Var_name Acc))
                 (Pattern_binding (Var_name O))))
              (c_guard ())
              (c_rhs
                (Expr_apply
                  ((fa_name (Expr_name (Atom_name (Atom rumergel))))
                    (fa_args
                      ((Expr_cons
                         ((Expr_apply
                            ((fa_name
                               (Expr_name
                                 (Qualified_name
                                   (n_mod (Atom_name (Atom lists)))
                                   (n_name (Atom_name (Atom reverse))))))
                              (fa_args
                                ((Expr_name (Var_name L)) (Expr_list ()))))))
                         (Expr_name (Var_name Acc)))
                        (Expr_list ()) (Expr_name (Var_name O))))))))
            ((c_lhs
               ((Pattern_list ()) (Pattern_list ())
                 (Pattern_binding (Var_name _O))))
              (c_guard ()) (c_rhs (Expr_list ())))
            ((c_lhs
               ((Pattern_list ()) (Pattern_binding (Var_name Acc))
                 (Pattern_binding (Var_name O))))
              (c_guard ())
              (c_rhs
                (Expr_apply
                  ((fa_name (Expr_name (Atom_name (Atom rumergel))))
                    (fa_args
                      ((Expr_name (Var_name Acc)) (Expr_list ())
                        (Expr_name (Var_name O))))))))))
        (fd_spec ())))
    (Function_decl
      ((fd_name (Atom rumergel)) (fd_arity 3)
        (fd_cases
          (((c_lhs
              ((Pattern_cons
                 ((Pattern_cons ((Pattern_binding (Var_name H3)))
                    (Pattern_binding (Var_name T3)))
                   (Pattern_cons ((Pattern_binding (Var_name H2)))
                     (Pattern_binding (Var_name T2)))
                   (Pattern_binding (Var_name T1)))
                 (Pattern_binding (Var_name L)))
                (Pattern_binding (Var_name Acc))
                (Pattern_match (Lit_atom (Atom asc)))))
             (c_guard ())
             (c_rhs
               (Expr_apply
                 ((fa_name (Expr_name (Atom_name (Atom rumergel))))
                   (fa_args
                     ((Expr_name (Var_name L))
                       (Expr_cons
                         ((Expr_apply
                            ((fa_name
                               (Expr_name (Atom_name (Atom rumerge3_1))))
                              (fa_args
                                ((Expr_name (Var_name T1))
                                  (Expr_name (Var_name T2))
                                  (Expr_name (Var_name H2)) (Expr_list ())
                                  (Expr_name (Var_name T3))
                                  (Expr_name (Var_name H3)))))))
                         (Expr_name (Var_name Acc)))
                       (Expr_literal (Lit_atom (Atom asc)))))))))
            ((c_lhs
               ((Pattern_cons
                  ((Pattern_binding (Var_name T1))
                    (Pattern_cons ((Pattern_binding (Var_name H2)))
                      (Pattern_binding (Var_name T2)))
                    (Pattern_cons ((Pattern_binding (Var_name H3)))
                      (Pattern_binding (Var_name T3))))
                  (Pattern_binding (Var_name L)))
                 (Pattern_binding (Var_name Acc))
                 (Pattern_match (Lit_atom (Atom desc)))))
              (c_guard ())
              (c_rhs
                (Expr_apply
                  ((fa_name (Expr_name (Atom_name (Atom rumergel))))
                    (fa_args
                      ((Expr_name (Var_name L))
                        (Expr_cons
                          ((Expr_apply
                             ((fa_name
                                (Expr_name (Atom_name (Atom rumerge3_1))))
                               (fa_args
                                 ((Expr_name (Var_name T1))
                                   (Expr_name (Var_name T2))
                                   (Expr_name (Var_name H2)) (Expr_list ())
                                   (Expr_name (Var_name T3))
                                   (Expr_name (Var_name H3)))))))
                          (Expr_name (Var_name Acc)))
                        (Expr_literal (Lit_atom (Atom desc)))))))))
            ((c_lhs
               ((Pattern_cons
                  ((Pattern_cons ((Pattern_binding (Var_name H2)))
                     (Pattern_binding (Var_name T2)))
                    (Pattern_binding (Var_name T1)))
                  (Pattern_binding (Var_name L)))
                 (Pattern_binding (Var_name Acc))
                 (Pattern_match (Lit_atom (Atom asc)))))
              (c_guard ())
              (c_rhs
                (Expr_apply
                  ((fa_name (Expr_name (Atom_name (Atom rumergel))))
                    (fa_args
                      ((Expr_name (Var_name L))
                        (Expr_cons
                          ((Expr_apply
                             ((fa_name
                                (Expr_name (Atom_name (Atom rumerge2_1))))
                               (fa_args
                                 ((Expr_name (Var_name T1))
                                   (Expr_name (Var_name T2)) (Expr_list ())
                                   (Expr_name (Var_name H2)))))))
                          (Expr_name (Var_name Acc)))
                        (Expr_literal (Lit_atom (Atom asc)))))))))
            ((c_lhs
               ((Pattern_cons
                  ((Pattern_binding (Var_name T1))
                    (Pattern_cons ((Pattern_binding (Var_name H2)))
                      (Pattern_binding (Var_name T2))))
                  (Pattern_binding (Var_name L)))
                 (Pattern_binding (Var_name Acc))
                 (Pattern_match (Lit_atom (Atom desc)))))
              (c_guard ())
              (c_rhs
                (Expr_apply
                  ((fa_name (Expr_name (Atom_name (Atom rumergel))))
                    (fa_args
                      ((Expr_name (Var_name L))
                        (Expr_cons
                          ((Expr_apply
                             ((fa_name
                                (Expr_name (Atom_name (Atom rumerge2_1))))
                               (fa_args
                                 ((Expr_name (Var_name T1))
                                   (Expr_name (Var_name T2)) (Expr_list ())
                                   (Expr_name (Var_name H2)))))))
                          (Expr_name (Var_name Acc)))
                        (Expr_literal (Lit_atom (Atom desc)))))))))
            ((c_lhs
               ((Pattern_list ((Pattern_binding (Var_name L))))
                 (Pattern_binding (Var_name Acc))
                 (Pattern_binding (Var_name O))))
              (c_guard ())
              (c_rhs
                (Expr_apply
                  ((fa_name (Expr_name (Atom_name (Atom umergel))))
                    (fa_args
                      ((Expr_cons
                         ((Expr_apply
                            ((fa_name
                               (Expr_name
                                 (Qualified_name
                                   (n_mod (Atom_name (Atom lists)))
                                   (n_name (Atom_name (Atom reverse))))))
                              (fa_args
                                ((Expr_name (Var_name L)) (Expr_list ()))))))
                         (Expr_name (Var_name Acc)))
                        (Expr_list ()) (Expr_name (Var_name O))))))))
            ((c_lhs
               ((Pattern_list ()) (Pattern_binding (Var_name Acc))
                 (Pattern_binding (Var_name O))))
              (c_guard ())
              (c_rhs
                (Expr_apply
                  ((fa_name (Expr_name (Atom_name (Atom umergel))))
                    (fa_args
                      ((Expr_name (Var_name Acc)) (Expr_list ())
                        (Expr_name (Var_name O))))))))))
        (fd_spec ())))
    (Module_comment (Comment "% umerge3/3"))
    (Module_comment (Comment "% Take L1 apart."))
    (Function_decl
      ((fd_name (Atom umerge3_1)) (fd_arity 7)
        (fd_cases
          (((c_lhs
              ((Pattern_cons ((Pattern_binding (Var_name H1)))
                 (Pattern_binding (Var_name T1)))
                (Pattern_binding (Var_name HdM))
                (Pattern_binding (Var_name T2)) (Pattern_binding (Var_name H2))
                (Pattern_binding (Var_name M)) (Pattern_binding (Var_name T3))
                (Pattern_binding (Var_name H3))))
             (c_guard
               (((Expr_apply
                   ((fa_name
                      (Expr_name
                        (Qualified_name (n_mod (Atom_name (Atom erlang)))
                          (n_name (Atom_name (Atom '=<'))))))
                     (fa_args
                       ((Expr_name (Var_name H1)) (Expr_name (Var_name H2)))))))))
             (c_rhs
               (Expr_apply
                 ((fa_name (Expr_name (Atom_name (Atom umerge3_12))))
                   (fa_args
                     ((Expr_name (Var_name T1)) (Expr_name (Var_name H1))
                       (Expr_name (Var_name T2)) (Expr_name (Var_name H2))
                       (Expr_name (Var_name M)) (Expr_name (Var_name T3))
                       (Expr_name (Var_name H3)) (Expr_name (Var_name HdM))))))))
            ((c_lhs
               ((Pattern_cons ((Pattern_binding (Var_name H1)))
                  (Pattern_binding (Var_name T1)))
                 (Pattern_binding (Var_name HdM))
                 (Pattern_binding (Var_name T2))
                 (Pattern_binding (Var_name H2)) (Pattern_binding (Var_name M))
                 (Pattern_binding (Var_name T3))
                 (Pattern_binding (Var_name H3))))
              (c_guard
                (((Expr_apply
                    ((fa_name
                       (Expr_name
                         (Qualified_name (n_mod (Atom_name (Atom erlang)))
                           (n_name (Atom_name (Atom '=='))))))
                      (fa_args
                        ((Expr_name (Var_name H2)) (Expr_name (Var_name HdM)))))))))
              (c_rhs
                (Expr_apply
                  ((fa_name (Expr_name (Atom_name (Atom umerge3_2))))
                    (fa_args
                      ((Expr_name (Var_name T1)) (Expr_name (Var_name H1))
                        (Expr_name (Var_name T2)) (Expr_name (Var_name H2))
                        (Expr_name (Var_name M)) (Expr_name (Var_name T3))
                        (Expr_name (Var_name H3))))))))
            ((c_lhs
               ((Pattern_cons ((Pattern_binding (Var_name H1)))
                  (Pattern_binding (Var_name T1)))
                 (Pattern_binding (Var_name HdM))
                 (Pattern_binding (Var_name T2))
                 (Pattern_binding (Var_name H2)) (Pattern_binding (Var_name M))
                 (Pattern_binding (Var_name T3))
                 (Pattern_binding (Var_name H3))))
              (c_guard ())
              (c_rhs
                (Expr_apply
                  ((fa_name (Expr_name (Atom_name (Atom umerge3_21))))
                    (fa_args
                      ((Expr_name (Var_name T1)) (Expr_name (Var_name H1))
                        (Expr_name (Var_name T2)) (Expr_name (Var_name H2))
                        (Expr_name (Var_name M)) (Expr_name (Var_name T3))
                        (Expr_name (Var_name H3)) (Expr_name (Var_name HdM))))))))
            ((c_lhs
               ((Pattern_list ()) (Pattern_binding (Var_name HdM))
                 (Pattern_binding (Var_name T2))
                 (Pattern_binding (Var_name H2)) (Pattern_binding (Var_name M))
                 (Pattern_binding (Var_name T3))
                 (Pattern_binding (Var_name H3))))
              (c_guard
                (((Expr_apply
                    ((fa_name
                       (Expr_name
                         (Qualified_name (n_mod (Atom_name (Atom erlang)))
                           (n_name (Atom_name (Atom '=='))))))
                      (fa_args
                        ((Expr_name (Var_name H2)) (Expr_name (Var_name HdM)))))))))
              (c_rhs
                (Expr_apply
                  ((fa_name (Expr_name (Atom_name (Atom umerge2_1))))
                    (fa_args
                      ((Expr_name (Var_name T2)) (Expr_name (Var_name T3))
                        (Expr_name (Var_name M)) (Expr_name (Var_name HdM))
                        (Expr_name (Var_name H3))))))))
            ((c_lhs
               ((Pattern_list ()) (Pattern_binding (Var_name _HdM))
                 (Pattern_binding (Var_name T2))
                 (Pattern_binding (Var_name H2)) (Pattern_binding (Var_name M))
                 (Pattern_binding (Var_name T3))
                 (Pattern_binding (Var_name H3))))
              (c_guard
                (((Expr_apply
                    ((fa_name
                       (Expr_name
                         (Qualified_name (n_mod (Atom_name (Atom erlang)))
                           (n_name (Atom_name (Atom '=<'))))))
                      (fa_args
                        ((Expr_name (Var_name H2)) (Expr_name (Var_name H3)))))))))
              (c_rhs
                (Expr_apply
                  ((fa_name (Expr_name (Atom_name (Atom umerge2_1))))
                    (fa_args
                      ((Expr_name (Var_name T2)) (Expr_name (Var_name T3))
                        (Expr_cons ((Expr_name (Var_name H2)))
                          (Expr_name (Var_name M)))
                        (Expr_name (Var_name H2)) (Expr_name (Var_name H3))))))))
            ((c_lhs
               ((Pattern_list ()) (Pattern_binding (Var_name HdM))
                 (Pattern_binding (Var_name T2))
                 (Pattern_binding (Var_name H2)) (Pattern_binding (Var_name M))
                 (Pattern_binding (Var_name T3))
                 (Pattern_binding (Var_name H3))))
              (c_guard
                (((Expr_apply
                    ((fa_name
                       (Expr_name
                         (Qualified_name (n_mod (Atom_name (Atom erlang)))
                           (n_name (Atom_name (Atom '=='))))))
                      (fa_args
                        ((Expr_name (Var_name H3)) (Expr_name (Var_name HdM)))))))))
              (c_rhs
                (Expr_apply
                  ((fa_name (Expr_name (Atom_name (Atom umerge2_2))))
                    (fa_args
                      ((Expr_name (Var_name T2)) (Expr_name (Var_name T3))
                        (Expr_name (Var_name M)) (Expr_name (Var_name H2))))))))
            ((c_lhs
               ((Pattern_list ()) (Pattern_binding (Var_name _HdM))
                 (Pattern_binding (Var_name T2))
                 (Pattern_binding (Var_name H2)) (Pattern_binding (Var_name M))
                 (Pattern_binding (Var_name T3))
                 (Pattern_binding (Var_name H3))))
              (c_guard ())
              (c_rhs
                (Expr_apply
                  ((fa_name (Expr_name (Atom_name (Atom umerge2_2))))
                    (fa_args
                      ((Expr_name (Var_name T2)) (Expr_name (Var_name T3))
                        (Expr_cons ((Expr_name (Var_name H3)))
                          (Expr_name (Var_name M)))
                        (Expr_name (Var_name H2))))))))))
        (fd_spec ())))
    (Module_comment (Comment "% Take L2 apart."))
    (Function_decl
      ((fd_name (Atom umerge3_2)) (fd_arity 7)
        (fd_cases
          (((c_lhs
              ((Pattern_binding (Var_name T1)) (Pattern_binding (Var_name H1))
                (Pattern_cons ((Pattern_binding (Var_name H2)))
                  (Pattern_binding (Var_name T2)))
                (Pattern_binding (Var_name HdM)) (Pattern_binding (Var_name M))
                (Pattern_binding (Var_name T3))
                (Pattern_binding (Var_name H3))))
             (c_guard
               (((Expr_apply
                   ((fa_name
                      (Expr_name
                        (Qualified_name (n_mod (Atom_name (Atom erlang)))
                          (n_name (Atom_name (Atom '=<'))))))
                     (fa_args
                       ((Expr_name (Var_name H1)) (Expr_name (Var_name H2)))))))))
             (c_rhs
               (Expr_apply
                 ((fa_name (Expr_name (Atom_name (Atom umerge3_12))))
                   (fa_args
                     ((Expr_name (Var_name T1)) (Expr_name (Var_name H1))
                       (Expr_name (Var_name T2)) (Expr_name (Var_name H2))
                       (Expr_name (Var_name M)) (Expr_name (Var_name T3))
                       (Expr_name (Var_name H3)) (Expr_name (Var_name HdM))))))))
            ((c_lhs
               ((Pattern_binding (Var_name T1)) (Pattern_binding (Var_name H1))
                 (Pattern_cons ((Pattern_binding (Var_name H2)))
                   (Pattern_binding (Var_name T2)))
                 (Pattern_binding (Var_name HdM))
                 (Pattern_binding (Var_name M)) (Pattern_binding (Var_name T3))
                 (Pattern_binding (Var_name H3))))
              (c_guard ())
              (c_rhs
                (Expr_apply
                  ((fa_name (Expr_name (Atom_name (Atom umerge3_21))))
                    (fa_args
                      ((Expr_name (Var_name T1)) (Expr_name (Var_name H1))
                        (Expr_name (Var_name T2)) (Expr_name (Var_name H2))
                        (Expr_name (Var_name M)) (Expr_name (Var_name T3))
                        (Expr_name (Var_name H3)) (Expr_name (Var_name HdM))))))))
            ((c_lhs
               ((Pattern_binding (Var_name T1)) (Pattern_binding (Var_name H1))
                 (Pattern_list ()) (Pattern_binding (Var_name _HdM))
                 (Pattern_binding (Var_name M)) (Pattern_binding (Var_name T3))
                 (Pattern_binding (Var_name H3))))
              (c_guard
                (((Expr_apply
                    ((fa_name
                       (Expr_name
                         (Qualified_name (n_mod (Atom_name (Atom erlang)))
                           (n_name (Atom_name (Atom '=<'))))))
                      (fa_args
                        ((Expr_name (Var_name H1)) (Expr_name (Var_name H3)))))))))
              (c_rhs
                (Expr_apply
                  ((fa_name (Expr_name (Atom_name (Atom umerge2_1))))
                    (fa_args
                      ((Expr_name (Var_name T1)) (Expr_name (Var_name T3))
                        (Expr_cons ((Expr_name (Var_name H1)))
                          (Expr_name (Var_name M)))
                        (Expr_name (Var_name H1)) (Expr_name (Var_name H3))))))))
            ((c_lhs
               ((Pattern_binding (Var_name T1)) (Pattern_binding (Var_name H1))
                 (Pattern_list ()) (Pattern_binding (Var_name HdM))
                 (Pattern_binding (Var_name M)) (Pattern_binding (Var_name T3))
                 (Pattern_binding (Var_name H3))))
              (c_guard
                (((Expr_apply
                    ((fa_name
                       (Expr_name
                         (Qualified_name (n_mod (Atom_name (Atom erlang)))
                           (n_name (Atom_name (Atom '=='))))))
                      (fa_args
                        ((Expr_name (Var_name H3)) (Expr_name (Var_name HdM)))))))))
              (c_rhs
                (Expr_apply
                  ((fa_name (Expr_name (Atom_name (Atom umerge2_2))))
                    (fa_args
                      ((Expr_name (Var_name T1)) (Expr_name (Var_name T3))
                        (Expr_name (Var_name M)) (Expr_name (Var_name H1))))))))
            ((c_lhs
               ((Pattern_binding (Var_name T1)) (Pattern_binding (Var_name H1))
                 (Pattern_list ()) (Pattern_binding (Var_name _HdM))
                 (Pattern_binding (Var_name M)) (Pattern_binding (Var_name T3))
                 (Pattern_binding (Var_name H3))))
              (c_guard ())
              (c_rhs
                (Expr_apply
                  ((fa_name (Expr_name (Atom_name (Atom umerge2_2))))
                    (fa_args
                      ((Expr_name (Var_name T1)) (Expr_name (Var_name T3))
                        (Expr_cons ((Expr_name (Var_name H3)))
                          (Expr_name (Var_name M)))
                        (Expr_name (Var_name H1))))))))))
        (fd_spec ())))
    (Module_comment (Comment " H1 =< H2. Inlined."))
    (Function_decl
      ((fd_name (Atom umerge3_12)) (fd_arity 8)
        (fd_cases
          (((c_lhs
              ((Pattern_binding (Var_name T1)) (Pattern_binding (Var_name H1))
                (Pattern_binding (Var_name T2)) (Pattern_binding (Var_name H2))
                (Pattern_binding (Var_name M)) (Pattern_binding (Var_name T3))
                (Pattern_binding (Var_name H3))
                (Pattern_binding (Var_name _HdM))))
             (c_guard
               (((Expr_apply
                   ((fa_name
                      (Expr_name
                        (Qualified_name (n_mod (Atom_name (Atom erlang)))
                          (n_name (Atom_name (Atom '=<'))))))
                     (fa_args
                       ((Expr_name (Var_name H1)) (Expr_name (Var_name H3)))))))))
             (c_rhs
               (Expr_apply
                 ((fa_name (Expr_name (Atom_name (Atom umerge3_1))))
                   (fa_args
                     ((Expr_name (Var_name T1)) (Expr_name (Var_name H1))
                       (Expr_name (Var_name T2)) (Expr_name (Var_name H2))
                       (Expr_cons ((Expr_name (Var_name H1)))
                         (Expr_name (Var_name M)))
                       (Expr_name (Var_name T3)) (Expr_name (Var_name H3))))))))
            ((c_lhs
               ((Pattern_binding (Var_name T1)) (Pattern_binding (Var_name H1))
                 (Pattern_binding (Var_name T2))
                 (Pattern_binding (Var_name H2)) (Pattern_binding (Var_name M))
                 (Pattern_binding (Var_name T3))
                 (Pattern_binding (Var_name H3))
                 (Pattern_binding (Var_name HdM))))
              (c_guard
                (((Expr_apply
                    ((fa_name
                       (Expr_name
                         (Qualified_name (n_mod (Atom_name (Atom erlang)))
                           (n_name (Atom_name (Atom '=='))))))
                      (fa_args
                        ((Expr_name (Var_name H3)) (Expr_name (Var_name HdM)))))))))
              (c_rhs
                (Expr_apply
                  ((fa_name (Expr_name (Atom_name (Atom umerge3_12_3))))
                    (fa_args
                      ((Expr_name (Var_name T1)) (Expr_name (Var_name H1))
                        (Expr_name (Var_name T2)) (Expr_name (Var_name H2))
                        (Expr_name (Var_name M)) (Expr_name (Var_name T3))))))))
            ((c_lhs
               ((Pattern_binding (Var_name T1)) (Pattern_binding (Var_name H1))
                 (Pattern_binding (Var_name T2))
                 (Pattern_binding (Var_name H2)) (Pattern_binding (Var_name M))
                 (Pattern_binding (Var_name T3))
                 (Pattern_binding (Var_name H3))
                 (Pattern_binding (Var_name _HdM))))
              (c_guard ())
              (c_rhs
                (Expr_apply
                  ((fa_name (Expr_name (Atom_name (Atom umerge3_12_3))))
                    (fa_args
                      ((Expr_name (Var_name T1)) (Expr_name (Var_name H1))
                        (Expr_name (Var_name T2)) (Expr_name (Var_name H2))
                        (Expr_cons ((Expr_name (Var_name H3)))
                          (Expr_name (Var_name M)))
                        (Expr_name (Var_name T3))))))))))
        (fd_spec ())))
    (Module_comment (Comment " H1 =< H2, take L3 apart."))
    (Function_decl
      ((fd_name (Atom umerge3_12_3)) (fd_arity 6)
        (fd_cases
          (((c_lhs
              ((Pattern_binding (Var_name T1)) (Pattern_binding (Var_name H1))
                (Pattern_binding (Var_name T2)) (Pattern_binding (Var_name H2))
                (Pattern_binding (Var_name M))
                (Pattern_cons ((Pattern_binding (Var_name H3)))
                  (Pattern_binding (Var_name T3)))))
             (c_guard
               (((Expr_apply
                   ((fa_name
                      (Expr_name
                        (Qualified_name (n_mod (Atom_name (Atom erlang)))
                          (n_name (Atom_name (Atom '=<'))))))
                     (fa_args
                       ((Expr_name (Var_name H1)) (Expr_name (Var_name H3)))))))))
             (c_rhs
               (Expr_apply
                 ((fa_name (Expr_name (Atom_name (Atom umerge3_1))))
                   (fa_args
                     ((Expr_name (Var_name T1)) (Expr_name (Var_name H1))
                       (Expr_name (Var_name T2)) (Expr_name (Var_name H2))
                       (Expr_cons ((Expr_name (Var_name H1)))
                         (Expr_name (Var_name M)))
                       (Expr_name (Var_name T3)) (Expr_name (Var_name H3))))))))
            ((c_lhs
               ((Pattern_binding (Var_name T1)) (Pattern_binding (Var_name H1))
                 (Pattern_binding (Var_name T2))
                 (Pattern_binding (Var_name H2)) (Pattern_binding (Var_name M))
                 (Pattern_cons ((Pattern_binding (Var_name H3)))
                   (Pattern_binding (Var_name T3)))))
              (c_guard ())
              (c_rhs
                (Expr_apply
                  ((fa_name (Expr_name (Atom_name (Atom umerge3_12_3))))
                    (fa_args
                      ((Expr_name (Var_name T1)) (Expr_name (Var_name H1))
                        (Expr_name (Var_name T2)) (Expr_name (Var_name H2))
                        (Expr_cons ((Expr_name (Var_name H3)))
                          (Expr_name (Var_name M)))
                        (Expr_name (Var_name T3))))))))
            ((c_lhs
               ((Pattern_binding (Var_name T1)) (Pattern_binding (Var_name H1))
                 (Pattern_binding (Var_name T2))
                 (Pattern_binding (Var_name H2)) (Pattern_binding (Var_name M))
                 (Pattern_list ())))
              (c_guard ())
              (c_rhs
                (Expr_apply
                  ((fa_name (Expr_name (Atom_name (Atom umerge2_1))))
                    (fa_args
                      ((Expr_name (Var_name T1)) (Expr_name (Var_name T2))
                        (Expr_cons ((Expr_name (Var_name H1)))
                          (Expr_name (Var_name M)))
                        (Expr_name (Var_name H1)) (Expr_name (Var_name H2))))))))))
        (fd_spec ())))
    (Module_comment (Comment " H1 > H2. Inlined."))
    (Function_decl
      ((fd_name (Atom umerge3_21)) (fd_arity 8)
        (fd_cases
          (((c_lhs
              ((Pattern_binding (Var_name T1)) (Pattern_binding (Var_name H1))
                (Pattern_binding (Var_name T2)) (Pattern_binding (Var_name H2))
                (Pattern_binding (Var_name M)) (Pattern_binding (Var_name T3))
                (Pattern_binding (Var_name H3))
                (Pattern_binding (Var_name _HdM))))
             (c_guard
               (((Expr_apply
                   ((fa_name
                      (Expr_name
                        (Qualified_name (n_mod (Atom_name (Atom erlang)))
                          (n_name (Atom_name (Atom '=<'))))))
                     (fa_args
                       ((Expr_name (Var_name H2)) (Expr_name (Var_name H3)))))))))
             (c_rhs
               (Expr_apply
                 ((fa_name (Expr_name (Atom_name (Atom umerge3_2))))
                   (fa_args
                     ((Expr_name (Var_name T1)) (Expr_name (Var_name H1))
                       (Expr_name (Var_name T2)) (Expr_name (Var_name H2))
                       (Expr_cons ((Expr_name (Var_name H2)))
                         (Expr_name (Var_name M)))
                       (Expr_name (Var_name T3)) (Expr_name (Var_name H3))))))))
            ((c_lhs
               ((Pattern_binding (Var_name T1)) (Pattern_binding (Var_name H1))
                 (Pattern_binding (Var_name T2))
                 (Pattern_binding (Var_name H2)) (Pattern_binding (Var_name M))
                 (Pattern_binding (Var_name T3))
                 (Pattern_binding (Var_name H3))
                 (Pattern_binding (Var_name HdM))))
              (c_guard
                (((Expr_apply
                    ((fa_name
                       (Expr_name
                         (Qualified_name (n_mod (Atom_name (Atom erlang)))
                           (n_name (Atom_name (Atom '=='))))))
                      (fa_args
                        ((Expr_name (Var_name H3)) (Expr_name (Var_name HdM)))))))))
              (c_rhs
                (Expr_apply
                  ((fa_name (Expr_name (Atom_name (Atom umerge3_21_3))))
                    (fa_args
                      ((Expr_name (Var_name T1)) (Expr_name (Var_name H1))
                        (Expr_name (Var_name T2)) (Expr_name (Var_name H2))
                        (Expr_name (Var_name M)) (Expr_name (Var_name T3))))))))
            ((c_lhs
               ((Pattern_binding (Var_name T1)) (Pattern_binding (Var_name H1))
                 (Pattern_binding (Var_name T2))
                 (Pattern_binding (Var_name H2)) (Pattern_binding (Var_name M))
                 (Pattern_binding (Var_name T3))
                 (Pattern_binding (Var_name H3))
                 (Pattern_binding (Var_name _HdM))))
              (c_guard ())
              (c_rhs
                (Expr_apply
                  ((fa_name (Expr_name (Atom_name (Atom umerge3_21_3))))
                    (fa_args
                      ((Expr_name (Var_name T1)) (Expr_name (Var_name H1))
                        (Expr_name (Var_name T2)) (Expr_name (Var_name H2))
                        (Expr_cons ((Expr_name (Var_name H3)))
                          (Expr_name (Var_name M)))
                        (Expr_name (Var_name T3))))))))))
        (fd_spec ())))
    (Module_comment (Comment " H1 > H2, take L3 apart."))
    (Function_decl
      ((fd_name (Atom umerge3_21_3)) (fd_arity 6)
        (fd_cases
          (((c_lhs
              ((Pattern_binding (Var_name T1)) (Pattern_binding (Var_name H1))
                (Pattern_binding (Var_name T2)) (Pattern_binding (Var_name H2))
                (Pattern_binding (Var_name M))
                (Pattern_cons ((Pattern_binding (Var_name H3)))
                  (Pattern_binding (Var_name T3)))))
             (c_guard
               (((Expr_apply
                   ((fa_name
                      (Expr_name
                        (Qualified_name (n_mod (Atom_name (Atom erlang)))
                          (n_name (Atom_name (Atom '=<'))))))
                     (fa_args
                       ((Expr_name (Var_name H2)) (Expr_name (Var_name H3)))))))))
             (c_rhs
               (Expr_apply
                 ((fa_name (Expr_name (Atom_name (Atom umerge3_2))))
                   (fa_args
                     ((Expr_name (Var_name T1)) (Expr_name (Var_name H1))
                       (Expr_name (Var_name T2)) (Expr_name (Var_name H2))
                       (Expr_cons ((Expr_name (Var_name H2)))
                         (Expr_name (Var_name M)))
                       (Expr_name (Var_name T3)) (Expr_name (Var_name H3))))))))
            ((c_lhs
               ((Pattern_binding (Var_name T1)) (Pattern_binding (Var_name H1))
                 (Pattern_binding (Var_name T2))
                 (Pattern_binding (Var_name H2)) (Pattern_binding (Var_name M))
                 (Pattern_cons ((Pattern_binding (Var_name H3)))
                   (Pattern_binding (Var_name T3)))))
              (c_guard ())
              (c_rhs
                (Expr_apply
                  ((fa_name (Expr_name (Atom_name (Atom umerge3_21_3))))
                    (fa_args
                      ((Expr_name (Var_name T1)) (Expr_name (Var_name H1))
                        (Expr_name (Var_name T2)) (Expr_name (Var_name H2))
                        (Expr_cons ((Expr_name (Var_name H3)))
                          (Expr_name (Var_name M)))
                        (Expr_name (Var_name T3))))))))
            ((c_lhs
               ((Pattern_binding (Var_name T1)) (Pattern_binding (Var_name H1))
                 (Pattern_binding (Var_name T2))
                 (Pattern_binding (Var_name H2)) (Pattern_binding (Var_name M))
                 (Pattern_list ())))
              (c_guard ())
              (c_rhs
                (Expr_apply
                  ((fa_name (Expr_name (Atom_name (Atom umerge2_2))))
                    (fa_args
                      ((Expr_name (Var_name T1)) (Expr_name (Var_name T2))
                        (Expr_cons ((Expr_name (Var_name H2)))
                          (Expr_name (Var_name M)))
                        (Expr_name (Var_name H1))))))))))
        (fd_spec ())))
    (Module_comment (Comment "% Take L1 apart."))
    (Function_decl
      ((fd_name (Atom rumerge3_1)) (fd_arity 6)
        (fd_cases
          (((c_lhs
              ((Pattern_cons ((Pattern_binding (Var_name H1)))
                 (Pattern_binding (Var_name T1)))
                (Pattern_binding (Var_name T2)) (Pattern_binding (Var_name H2))
                (Pattern_binding (Var_name M)) (Pattern_binding (Var_name T3))
                (Pattern_binding (Var_name H3))))
             (c_guard
               (((Expr_apply
                   ((fa_name
                      (Expr_name
                        (Qualified_name (n_mod (Atom_name (Atom erlang)))
                          (n_name (Atom_name (Atom '=<'))))))
                     (fa_args
                       ((Expr_name (Var_name H1)) (Expr_name (Var_name H2)))))))))
             (c_rhs
               (Expr_apply
                 ((fa_name (Expr_name (Atom_name (Atom rumerge3_12a))))
                   (fa_args
                     ((Expr_name (Var_name T1)) (Expr_name (Var_name H1))
                       (Expr_name (Var_name T2)) (Expr_name (Var_name H2))
                       (Expr_name (Var_name M)) (Expr_name (Var_name T3))
                       (Expr_name (Var_name H3))))))))
            ((c_lhs
               ((Pattern_cons ((Pattern_binding (Var_name H1)))
                  (Pattern_binding (Var_name T1)))
                 (Pattern_binding (Var_name T2))
                 (Pattern_binding (Var_name H2)) (Pattern_binding (Var_name M))
                 (Pattern_binding (Var_name T3))
                 (Pattern_binding (Var_name H3))))
              (c_guard
                (((Expr_apply
                    ((fa_name
                       (Expr_name
                         (Qualified_name (n_mod (Atom_name (Atom erlang)))
                           (n_name (Atom_name (Atom '=<'))))))
                      (fa_args
                        ((Expr_name (Var_name H1)) (Expr_name (Var_name H3)))))))))
              (c_rhs
                (Expr_apply
                  ((fa_name (Expr_name (Atom_name (Atom rumerge3_21_3))))
                    (fa_args
                      ((Expr_name (Var_name T1)) (Expr_name (Var_name T2))
                        (Expr_name (Var_name H2)) (Expr_name (Var_name M))
                        (Expr_name (Var_name T3)) (Expr_name (Var_name H3))
                        (Expr_name (Var_name H1))))))))
            ((c_lhs
               ((Pattern_cons ((Pattern_binding (Var_name H1)))
                  (Pattern_binding (Var_name T1)))
                 (Pattern_binding (Var_name T2))
                 (Pattern_binding (Var_name H2)) (Pattern_binding (Var_name M))
                 (Pattern_binding (Var_name T3))
                 (Pattern_binding (Var_name H3))))
              (c_guard ())
              (c_rhs
                (Expr_apply
                  ((fa_name (Expr_name (Atom_name (Atom rumerge3_1))))
                    (fa_args
                      ((Expr_name (Var_name T1)) (Expr_name (Var_name T2))
                        (Expr_name (Var_name H2))
                        (Expr_cons ((Expr_name (Var_name H1)))
                          (Expr_name (Var_name M)))
                        (Expr_name (Var_name T3)) (Expr_name (Var_name H3))))))))
            ((c_lhs
               ((Pattern_list ()) (Pattern_binding (Var_name T2))
                 (Pattern_binding (Var_name H2)) (Pattern_binding (Var_name M))
                 (Pattern_binding (Var_name T3))
                 (Pattern_binding (Var_name H3))))
              (c_guard
                (((Expr_apply
                    ((fa_name
                       (Expr_name
                         (Qualified_name (n_mod (Atom_name (Atom erlang)))
                           (n_name (Atom_name (Atom '=<'))))))
                      (fa_args
                        ((Expr_name (Var_name H2)) (Expr_name (Var_name H3)))))))))
              (c_rhs
                (Expr_apply
                  ((fa_name (Expr_name (Atom_name (Atom rumerge2_2))))
                    (fa_args
                      ((Expr_name (Var_name T2)) (Expr_name (Var_name T3))
                        (Expr_name (Var_name M)) (Expr_name (Var_name H3))
                        (Expr_name (Var_name H2))))))))
            ((c_lhs
               ((Pattern_list ()) (Pattern_binding (Var_name T2))
                 (Pattern_binding (Var_name H2)) (Pattern_binding (Var_name M))
                 (Pattern_binding (Var_name T3))
                 (Pattern_binding (Var_name H3))))
              (c_guard ())
              (c_rhs
                (Expr_apply
                  ((fa_name (Expr_name (Atom_name (Atom rumerge2_1))))
                    (fa_args
                      ((Expr_name (Var_name T2)) (Expr_name (Var_name T3))
                        (Expr_cons ((Expr_name (Var_name H2)))
                          (Expr_name (Var_name M)))
                        (Expr_name (Var_name H3))))))))))
        (fd_spec ())))
    (Module_comment (Comment " H1 =< H2. Inlined."))
    (Function_decl
      ((fd_name (Atom rumerge3_12a)) (fd_arity 7)
        (fd_cases
          (((c_lhs
              ((Pattern_binding (Var_name T1)) (Pattern_binding (Var_name H1))
                (Pattern_binding (Var_name T2)) (Pattern_binding (Var_name H2))
                (Pattern_binding (Var_name M)) (Pattern_binding (Var_name T3))
                (Pattern_binding (Var_name H3))))
             (c_guard
               (((Expr_apply
                   ((fa_name
                      (Expr_name
                        (Qualified_name (n_mod (Atom_name (Atom erlang)))
                          (n_name (Atom_name (Atom '=<'))))))
                     (fa_args
                       ((Expr_name (Var_name H2)) (Expr_name (Var_name H3)))))))))
             (c_rhs
               (Expr_apply
                 ((fa_name (Expr_name (Atom_name (Atom rumerge3_12_3))))
                   (fa_args
                     ((Expr_name (Var_name T1)) (Expr_name (Var_name T2))
                       (Expr_name (Var_name H2)) (Expr_name (Var_name M))
                       (Expr_name (Var_name T3)) (Expr_name (Var_name H3))
                       (Expr_name (Var_name H1))))))))
            ((c_lhs
               ((Pattern_binding (Var_name T1)) (Pattern_binding (Var_name H1))
                 (Pattern_binding (Var_name T2))
                 (Pattern_binding (Var_name H2)) (Pattern_binding (Var_name M))
                 (Pattern_binding (Var_name T3))
                 (Pattern_binding (Var_name H3))))
              (c_guard ())
              (c_rhs
                (Expr_apply
                  ((fa_name (Expr_name (Atom_name (Atom rumerge3_2))))
                    (fa_args
                      ((Expr_name (Var_name T1)) (Expr_name (Var_name T2))
                        (Expr_name (Var_name H2)) (Expr_name (Var_name M))
                        (Expr_name (Var_name T3)) (Expr_name (Var_name H3))
                        (Expr_name (Var_name H1))))))))))
        (fd_spec ())))
    (Module_comment (Comment "% Take L2 apart. H2M > H3. H2M > H2."))
    (Function_decl
      ((fd_name (Atom rumerge3_2)) (fd_arity 7)
        (fd_cases
          (((c_lhs
              ((Pattern_binding (Var_name T1))
                (Pattern_cons ((Pattern_binding (Var_name H2)))
                  (Pattern_binding (Var_name T2)))
                (Pattern_binding (Var_name H2M)) (Pattern_binding (Var_name M))
                (Pattern_binding (Var_name T3)) (Pattern_binding (Var_name H3))
                (Pattern_binding (Var_name H1))))
             (c_guard
               (((Expr_apply
                   ((fa_name
                      (Expr_name
                        (Qualified_name (n_mod (Atom_name (Atom erlang)))
                          (n_name (Atom_name (Atom '=<'))))))
                     (fa_args
                       ((Expr_name (Var_name H1)) (Expr_name (Var_name H2)))))))))
             (c_rhs
               (Expr_comment (Comment " H2M > H1.")
                 (Expr_apply
                   ((fa_name (Expr_name (Atom_name (Atom rumerge3_12b))))
                     (fa_args
                       ((Expr_name (Var_name T1)) (Expr_name (Var_name H1))
                         (Expr_name (Var_name T2)) (Expr_name (Var_name H2))
                         (Expr_name (Var_name M)) (Expr_name (Var_name T3))
                         (Expr_name (Var_name H3)) (Expr_name (Var_name H2M)))))))))
            ((c_lhs
               ((Pattern_binding (Var_name T1))
                 (Pattern_cons ((Pattern_binding (Var_name H2)))
                   (Pattern_binding (Var_name T2)))
                 (Pattern_binding (Var_name H2M))
                 (Pattern_binding (Var_name M)) (Pattern_binding (Var_name T3))
                 (Pattern_binding (Var_name H3))
                 (Pattern_binding (Var_name H1))))
              (c_guard
                (((Expr_apply
                    ((fa_name
                       (Expr_name
                         (Qualified_name (n_mod (Atom_name (Atom erlang)))
                           (n_name (Atom_name (Atom '=='))))))
                      (fa_args
                        ((Expr_name (Var_name H1)) (Expr_name (Var_name H2M)))))))))
              (c_rhs
                (Expr_apply
                  ((fa_name (Expr_name (Atom_name (Atom rumerge3_1))))
                    (fa_args
                      ((Expr_name (Var_name T1)) (Expr_name (Var_name T2))
                        (Expr_name (Var_name H2))
                        (Expr_cons ((Expr_name (Var_name H1)))
                          (Expr_name (Var_name M)))
                        (Expr_name (Var_name T3)) (Expr_name (Var_name H3))))))))
            ((c_lhs
               ((Pattern_binding (Var_name T1))
                 (Pattern_cons ((Pattern_binding (Var_name H2)))
                   (Pattern_binding (Var_name T2)))
                 (Pattern_binding (Var_name H2M))
                 (Pattern_binding (Var_name M)) (Pattern_binding (Var_name T3))
                 (Pattern_binding (Var_name H3))
                 (Pattern_binding (Var_name H1))))
              (c_guard
                (((Expr_apply
                    ((fa_name
                       (Expr_name
                         (Qualified_name (n_mod (Atom_name (Atom erlang)))
                           (n_name (Atom_name (Atom '=<'))))))
                      (fa_args
                        ((Expr_name (Var_name H1)) (Expr_name (Var_name H3)))))))))
              (c_rhs
                (Expr_comment (Comment " H2M > H1.")
                  (Expr_apply
                    ((fa_name (Expr_name (Atom_name (Atom rumerge3_21_3))))
                      (fa_args
                        ((Expr_name (Var_name T1)) (Expr_name (Var_name T2))
                          (Expr_name (Var_name H2))
                          (Expr_cons ((Expr_name (Var_name H2M)))
                            (Expr_name (Var_name M)))
                          (Expr_name (Var_name T3)) (Expr_name (Var_name H3))
                          (Expr_name (Var_name H1)))))))))
            ((c_lhs
               ((Pattern_binding (Var_name T1))
                 (Pattern_cons ((Pattern_binding (Var_name H2)))
                   (Pattern_binding (Var_name T2)))
                 (Pattern_binding (Var_name H2M))
                 (Pattern_binding (Var_name M)) (Pattern_binding (Var_name T3))
                 (Pattern_binding (Var_name H3))
                 (Pattern_binding (Var_name H1))))
              (c_guard ())
              (c_rhs
                (Expr_comment (Comment " H2M > H1.")
                  (Expr_apply
                    ((fa_name (Expr_name (Atom_name (Atom rumerge3_1))))
                      (fa_args
                        ((Expr_name (Var_name T1)) (Expr_name (Var_name T2))
                          (Expr_name (Var_name H2))
                          (Expr_cons
                            ((Expr_name (Var_name H1))
                              (Expr_name (Var_name H2M)))
                            (Expr_name (Var_name M)))
                          (Expr_name (Var_name T3)) (Expr_name (Var_name H3)))))))))
            ((c_lhs
               ((Pattern_binding (Var_name T1)) (Pattern_list ())
                 (Pattern_binding (Var_name H2M))
                 (Pattern_binding (Var_name M)) (Pattern_binding (Var_name T3))
                 (Pattern_binding (Var_name H3))
                 (Pattern_binding (Var_name H1))))
              (c_guard
                (((Expr_apply
                    ((fa_name
                       (Expr_name
                         (Qualified_name (n_mod (Atom_name (Atom erlang)))
                           (n_name (Atom_name (Atom '=='))))))
                      (fa_args
                        ((Expr_name (Var_name H1)) (Expr_name (Var_name H2M)))))))))
              (c_rhs
                (Expr_apply
                  ((fa_name (Expr_name (Atom_name (Atom rumerge2_1))))
                    (fa_args
                      ((Expr_name (Var_name T1)) (Expr_name (Var_name T3))
                        (Expr_cons ((Expr_name (Var_name H1)))
                          (Expr_name (Var_name M)))
                        (Expr_name (Var_name H3))))))))
            ((c_lhs
               ((Pattern_binding (Var_name T1)) (Pattern_list ())
                 (Pattern_binding (Var_name H2M))
                 (Pattern_binding (Var_name M)) (Pattern_binding (Var_name T3))
                 (Pattern_binding (Var_name H3))
                 (Pattern_binding (Var_name H1))))
              (c_guard
                (((Expr_apply
                    ((fa_name
                       (Expr_name
                         (Qualified_name (n_mod (Atom_name (Atom erlang)))
                           (n_name (Atom_name (Atom '=<'))))))
                      (fa_args
                        ((Expr_name (Var_name H1)) (Expr_name (Var_name H3)))))))))
              (c_rhs
                (Expr_apply
                  ((fa_name (Expr_name (Atom_name (Atom rumerge2_2))))
                    (fa_args
                      ((Expr_name (Var_name T1)) (Expr_name (Var_name T3))
                        (Expr_cons ((Expr_name (Var_name H2M)))
                          (Expr_name (Var_name M)))
                        (Expr_name (Var_name H3)) (Expr_name (Var_name H1))))))))
            ((c_lhs
               ((Pattern_binding (Var_name T1)) (Pattern_list ())
                 (Pattern_binding (Var_name H2M))
                 (Pattern_binding (Var_name M)) (Pattern_binding (Var_name T3))
                 (Pattern_binding (Var_name H3))
                 (Pattern_binding (Var_name H1))))
              (c_guard ())
              (c_rhs
                (Expr_apply
                  ((fa_name (Expr_name (Atom_name (Atom rumerge2_1))))
                    (fa_args
                      ((Expr_name (Var_name T1)) (Expr_name (Var_name T3))
                        (Expr_cons
                          ((Expr_name (Var_name H1))
                            (Expr_name (Var_name H2M)))
                          (Expr_name (Var_name M)))
                        (Expr_name (Var_name H3))))))))))
        (fd_spec ())))
    (Module_comment (Comment " H1 =< H2. Inlined."))
    (Function_decl
      ((fd_name (Atom rumerge3_12b)) (fd_arity 8)
        (fd_cases
          (((c_lhs
              ((Pattern_binding (Var_name T1)) (Pattern_binding (Var_name H1))
                (Pattern_binding (Var_name T2)) (Pattern_binding (Var_name H2))
                (Pattern_binding (Var_name M)) (Pattern_binding (Var_name T3))
                (Pattern_binding (Var_name H3))
                (Pattern_binding (Var_name H2M))))
             (c_guard
               (((Expr_apply
                   ((fa_name
                      (Expr_name
                        (Qualified_name (n_mod (Atom_name (Atom erlang)))
                          (n_name (Atom_name (Atom '=<'))))))
                     (fa_args
                       ((Expr_name (Var_name H2)) (Expr_name (Var_name H3)))))))))
             (c_rhs
               (Expr_apply
                 ((fa_name (Expr_name (Atom_name (Atom rumerge3_12_3))))
                   (fa_args
                     ((Expr_name (Var_name T1)) (Expr_name (Var_name T2))
                       (Expr_name (Var_name H2))
                       (Expr_cons ((Expr_name (Var_name H2M)))
                         (Expr_name (Var_name M)))
                       (Expr_name (Var_name T3)) (Expr_name (Var_name H3))
                       (Expr_name (Var_name H1))))))))
            ((c_lhs
               ((Pattern_binding (Var_name T1)) (Pattern_binding (Var_name H1))
                 (Pattern_binding (Var_name T2))
                 (Pattern_binding (Var_name H2)) (Pattern_binding (Var_name M))
                 (Pattern_binding (Var_name T3))
                 (Pattern_binding (Var_name H3))
                 (Pattern_binding (Var_name H2M))))
              (c_guard ())
              (c_rhs
                (Expr_apply
                  ((fa_name (Expr_name (Atom_name (Atom rumerge3_2))))
                    (fa_args
                      ((Expr_name (Var_name T1)) (Expr_name (Var_name T2))
                        (Expr_name (Var_name H2))
                        (Expr_cons ((Expr_name (Var_name H2M)))
                          (Expr_name (Var_name M)))
                        (Expr_name (Var_name T3)) (Expr_name (Var_name H3))
                        (Expr_name (Var_name H1))))))))))
        (fd_spec ())))
    (Module_comment (Comment " H1 =< H2, take L3 apart."))
    (Function_decl
      ((fd_name (Atom rumerge3_12_3)) (fd_arity 7)
        (fd_cases
          (((c_lhs
              ((Pattern_binding (Var_name T1)) (Pattern_binding (Var_name T2))
                (Pattern_binding (Var_name H2)) (Pattern_binding (Var_name M))
                (Pattern_cons ((Pattern_binding (Var_name H3)))
                  (Pattern_binding (Var_name T3)))
                (Pattern_binding (Var_name H3M))
                (Pattern_binding (Var_name H1))))
             (c_guard
               (((Expr_apply
                   ((fa_name
                      (Expr_name
                        (Qualified_name (n_mod (Atom_name (Atom erlang)))
                          (n_name (Atom_name (Atom '=<'))))))
                     (fa_args
                       ((Expr_name (Var_name H2)) (Expr_name (Var_name H3)))))))))
             (c_rhs
               (Expr_apply
                 ((fa_name (Expr_name (Atom_name (Atom rumerge3_12_3))))
                   (fa_args
                     ((Expr_name (Var_name T1)) (Expr_name (Var_name T2))
                       (Expr_name (Var_name H2))
                       (Expr_cons ((Expr_name (Var_name H3M)))
                         (Expr_name (Var_name M)))
                       (Expr_name (Var_name T3)) (Expr_name (Var_name H3))
                       (Expr_name (Var_name H1))))))))
            ((c_lhs
               ((Pattern_binding (Var_name T1)) (Pattern_binding (Var_name T2))
                 (Pattern_binding (Var_name H2)) (Pattern_binding (Var_name M))
                 (Pattern_cons ((Pattern_binding (Var_name H3)))
                   (Pattern_binding (Var_name T3)))
                 (Pattern_binding (Var_name H3M))
                 (Pattern_binding (Var_name H1))))
              (c_guard
                (((Expr_apply
                    ((fa_name
                       (Expr_name
                         (Qualified_name (n_mod (Atom_name (Atom erlang)))
                           (n_name (Atom_name (Atom '=='))))))
                      (fa_args
                        ((Expr_name (Var_name H2)) (Expr_name (Var_name H3M)))))))))
              (c_rhs
                (Expr_apply
                  ((fa_name (Expr_name (Atom_name (Atom rumerge3_2))))
                    (fa_args
                      ((Expr_name (Var_name T1)) (Expr_name (Var_name T2))
                        (Expr_name (Var_name H2)) (Expr_name (Var_name M))
                        (Expr_name (Var_name T3)) (Expr_name (Var_name H3))
                        (Expr_name (Var_name H1))))))))
            ((c_lhs
               ((Pattern_binding (Var_name T1)) (Pattern_binding (Var_name T2))
                 (Pattern_binding (Var_name H2)) (Pattern_binding (Var_name M))
                 (Pattern_cons ((Pattern_binding (Var_name H3)))
                   (Pattern_binding (Var_name T3)))
                 (Pattern_binding (Var_name H3M))
                 (Pattern_binding (Var_name H1))))
              (c_guard ())
              (c_rhs
                (Expr_apply
                  ((fa_name (Expr_name (Atom_name (Atom rumerge3_2))))
                    (fa_args
                      ((Expr_name (Var_name T1)) (Expr_name (Var_name T2))
                        (Expr_name (Var_name H2))
                        (Expr_cons ((Expr_name (Var_name H3M)))
                          (Expr_name (Var_name M)))
                        (Expr_name (Var_name T3)) (Expr_name (Var_name H3))
                        (Expr_name (Var_name H1))))))))
            ((c_lhs
               ((Pattern_binding (Var_name T1)) (Pattern_binding (Var_name T2))
                 (Pattern_binding (Var_name H2)) (Pattern_binding (Var_name M))
                 (Pattern_list ()) (Pattern_binding (Var_name H3M))
                 (Pattern_binding (Var_name H1))))
              (c_guard
                (((Expr_apply
                    ((fa_name
                       (Expr_name
                         (Qualified_name (n_mod (Atom_name (Atom erlang)))
                           (n_name (Atom_name (Atom '=='))))))
                      (fa_args
                        ((Expr_name (Var_name H2)) (Expr_name (Var_name H3M)))))))))
              (c_rhs
                (Expr_apply
                  ((fa_name (Expr_name (Atom_name (Atom rumerge2_2))))
                    (fa_args
                      ((Expr_name (Var_name T1)) (Expr_name (Var_name T2))
                        (Expr_name (Var_name M)) (Expr_name (Var_name H2))
                        (Expr_name (Var_name H1))))))))
            ((c_lhs
               ((Pattern_binding (Var_name T1)) (Pattern_binding (Var_name T2))
                 (Pattern_binding (Var_name H2)) (Pattern_binding (Var_name M))
                 (Pattern_list ()) (Pattern_binding (Var_name H3M))
                 (Pattern_binding (Var_name H1))))
              (c_guard ())
              (c_rhs
                (Expr_apply
                  ((fa_name (Expr_name (Atom_name (Atom rumerge2_2))))
                    (fa_args
                      ((Expr_name (Var_name T1)) (Expr_name (Var_name T2))
                        (Expr_cons ((Expr_name (Var_name H3M)))
                          (Expr_name (Var_name M)))
                        (Expr_name (Var_name H2)) (Expr_name (Var_name H1))))))))))
        (fd_spec ())))
    (Module_comment (Comment " H1 > H2, take L3 apart."))
    (Function_decl
      ((fd_name (Atom rumerge3_21_3)) (fd_arity 7)
        (fd_cases
          (((c_lhs
              ((Pattern_binding (Var_name T1)) (Pattern_binding (Var_name T2))
                (Pattern_binding (Var_name H2)) (Pattern_binding (Var_name M))
                (Pattern_cons ((Pattern_binding (Var_name H3)))
                  (Pattern_binding (Var_name T3)))
                (Pattern_binding (Var_name H3M))
                (Pattern_binding (Var_name H1))))
             (c_guard
               (((Expr_apply
                   ((fa_name
                      (Expr_name
                        (Qualified_name (n_mod (Atom_name (Atom erlang)))
                          (n_name (Atom_name (Atom '=<'))))))
                     (fa_args
                       ((Expr_name (Var_name H1)) (Expr_name (Var_name H3)))))))))
             (c_rhs
               (Expr_apply
                 ((fa_name (Expr_name (Atom_name (Atom rumerge3_21_3))))
                   (fa_args
                     ((Expr_name (Var_name T1)) (Expr_name (Var_name T2))
                       (Expr_name (Var_name H2))
                       (Expr_cons ((Expr_name (Var_name H3M)))
                         (Expr_name (Var_name M)))
                       (Expr_name (Var_name T3)) (Expr_name (Var_name H3))
                       (Expr_name (Var_name H1))))))))
            ((c_lhs
               ((Pattern_binding (Var_name T1)) (Pattern_binding (Var_name T2))
                 (Pattern_binding (Var_name H2)) (Pattern_binding (Var_name M))
                 (Pattern_cons ((Pattern_binding (Var_name H3)))
                   (Pattern_binding (Var_name T3)))
                 (Pattern_binding (Var_name H3M))
                 (Pattern_binding (Var_name H1))))
              (c_guard
                (((Expr_apply
                    ((fa_name
                       (Expr_name
                         (Qualified_name (n_mod (Atom_name (Atom erlang)))
                           (n_name (Atom_name (Atom '=='))))))
                      (fa_args
                        ((Expr_name (Var_name H1)) (Expr_name (Var_name H3M)))))))))
              (c_rhs
                (Expr_apply
                  ((fa_name (Expr_name (Atom_name (Atom rumerge3_1))))
                    (fa_args
                      ((Expr_name (Var_name T1)) (Expr_name (Var_name T2))
                        (Expr_name (Var_name H2))
                        (Expr_cons ((Expr_name (Var_name H1)))
                          (Expr_name (Var_name M)))
                        (Expr_name (Var_name T3)) (Expr_name (Var_name H3))))))))
            ((c_lhs
               ((Pattern_binding (Var_name T1)) (Pattern_binding (Var_name T2))
                 (Pattern_binding (Var_name H2)) (Pattern_binding (Var_name M))
                 (Pattern_cons ((Pattern_binding (Var_name H3)))
                   (Pattern_binding (Var_name T3)))
                 (Pattern_binding (Var_name H3M))
                 (Pattern_binding (Var_name H1))))
              (c_guard ())
              (c_rhs
                (Expr_apply
                  ((fa_name (Expr_name (Atom_name (Atom rumerge3_1))))
                    (fa_args
                      ((Expr_name (Var_name T1)) (Expr_name (Var_name T2))
                        (Expr_name (Var_name H2))
                        (Expr_cons
                          ((Expr_name (Var_name H1))
                            (Expr_name (Var_name H3M)))
                          (Expr_name (Var_name M)))
                        (Expr_name (Var_name T3)) (Expr_name (Var_name H3))))))))
            ((c_lhs
               ((Pattern_binding (Var_name T1)) (Pattern_binding (Var_name T2))
                 (Pattern_binding (Var_name H2)) (Pattern_binding (Var_name M))
                 (Pattern_list ()) (Pattern_binding (Var_name H3M))
                 (Pattern_binding (Var_name H1))))
              (c_guard
                (((Expr_apply
                    ((fa_name
                       (Expr_name
                         (Qualified_name (n_mod (Atom_name (Atom erlang)))
                           (n_name (Atom_name (Atom '=='))))))
                      (fa_args
                        ((Expr_name (Var_name H1)) (Expr_name (Var_name H3M)))))))))
              (c_rhs
                (Expr_apply
                  ((fa_name (Expr_name (Atom_name (Atom rumerge2_1))))
                    (fa_args
                      ((Expr_name (Var_name T1)) (Expr_name (Var_name T2))
                        (Expr_cons ((Expr_name (Var_name H1)))
                          (Expr_name (Var_name M)))
                        (Expr_name (Var_name H2))))))))
            ((c_lhs
               ((Pattern_binding (Var_name T1)) (Pattern_binding (Var_name T2))
                 (Pattern_binding (Var_name H2)) (Pattern_binding (Var_name M))
                 (Pattern_list ()) (Pattern_binding (Var_name H3M))
                 (Pattern_binding (Var_name H1))))
              (c_guard ())
              (c_rhs
                (Expr_apply
                  ((fa_name (Expr_name (Atom_name (Atom rumerge2_1))))
                    (fa_args
                      ((Expr_name (Var_name T1)) (Expr_name (Var_name T2))
                        (Expr_cons
                          ((Expr_name (Var_name H1))
                            (Expr_name (Var_name H3M)))
                          (Expr_name (Var_name M)))
                        (Expr_name (Var_name H2))))))))))
        (fd_spec ())))
    (Module_comment (Comment "% umerge/2"))
    (Module_comment
      (Comment "% Elements from the first list are kept and prioritized."))
    (Function_decl
      ((fd_name (Atom umerge2_1)) (fd_arity 5)
        (fd_cases
          (((c_lhs
              ((Pattern_cons ((Pattern_binding (Var_name H1)))
                 (Pattern_binding (Var_name T1)))
                (Pattern_binding (Var_name T2)) (Pattern_binding (Var_name M))
                (Pattern_binding (Var_name _HdM))
                (Pattern_binding (Var_name H2))))
             (c_guard
               (((Expr_apply
                   ((fa_name
                      (Expr_name
                        (Qualified_name (n_mod (Atom_name (Atom erlang)))
                          (n_name (Atom_name (Atom '=<'))))))
                     (fa_args
                       ((Expr_name (Var_name H1)) (Expr_name (Var_name H2)))))))))
             (c_rhs
               (Expr_apply
                 ((fa_name (Expr_name (Atom_name (Atom umerge2_1))))
                   (fa_args
                     ((Expr_name (Var_name T1)) (Expr_name (Var_name T2))
                       (Expr_cons ((Expr_name (Var_name H1)))
                         (Expr_name (Var_name M)))
                       (Expr_name (Var_name H1)) (Expr_name (Var_name H2))))))))
            ((c_lhs
               ((Pattern_cons ((Pattern_binding (Var_name H1)))
                  (Pattern_binding (Var_name T1)))
                 (Pattern_binding (Var_name T2)) (Pattern_binding (Var_name M))
                 (Pattern_binding (Var_name HdM))
                 (Pattern_binding (Var_name H2))))
              (c_guard
                (((Expr_apply
                    ((fa_name
                       (Expr_name
                         (Qualified_name (n_mod (Atom_name (Atom erlang)))
                           (n_name (Atom_name (Atom '=='))))))
                      (fa_args
                        ((Expr_name (Var_name H2)) (Expr_name (Var_name HdM)))))))))
              (c_rhs
                (Expr_apply
                  ((fa_name (Expr_name (Atom_name (Atom umerge2_2))))
                    (fa_args
                      ((Expr_name (Var_name T1)) (Expr_name (Var_name T2))
                        (Expr_name (Var_name M)) (Expr_name (Var_name H1))))))))
            ((c_lhs
               ((Pattern_cons ((Pattern_binding (Var_name H1)))
                  (Pattern_binding (Var_name T1)))
                 (Pattern_binding (Var_name T2)) (Pattern_binding (Var_name M))
                 (Pattern_binding (Var_name _HdM))
                 (Pattern_binding (Var_name H2))))
              (c_guard ())
              (c_rhs
                (Expr_apply
                  ((fa_name (Expr_name (Atom_name (Atom umerge2_2))))
                    (fa_args
                      ((Expr_name (Var_name T1)) (Expr_name (Var_name T2))
                        (Expr_cons ((Expr_name (Var_name H2)))
                          (Expr_name (Var_name M)))
                        (Expr_name (Var_name H1))))))))
            ((c_lhs
               ((Pattern_list ()) (Pattern_binding (Var_name T2))
                 (Pattern_binding (Var_name M))
                 (Pattern_binding (Var_name HdM))
                 (Pattern_binding (Var_name H2))))
              (c_guard
                (((Expr_apply
                    ((fa_name
                       (Expr_name
                         (Qualified_name (n_mod (Atom_name (Atom erlang)))
                           (n_name (Atom_name (Atom '=='))))))
                      (fa_args
                        ((Expr_name (Var_name H2)) (Expr_name (Var_name HdM)))))))))
              (c_rhs
                (Expr_apply
                  ((fa_name
                     (Expr_name
                       (Qualified_name (n_mod (Atom_name (Atom lists)))
                         (n_name (Atom_name (Atom reverse))))))
                    (fa_args
                      ((Expr_name (Var_name T2)) (Expr_name (Var_name M))))))))
            ((c_lhs
               ((Pattern_list ()) (Pattern_binding (Var_name T2))
                 (Pattern_binding (Var_name M))
                 (Pattern_binding (Var_name _HdM))
                 (Pattern_binding (Var_name H2))))
              (c_guard ())
              (c_rhs
                (Expr_apply
                  ((fa_name
                     (Expr_name
                       (Qualified_name (n_mod (Atom_name (Atom lists)))
                         (n_name (Atom_name (Atom reverse))))))
                    (fa_args
                      ((Expr_name (Var_name T2))
                        (Expr_cons ((Expr_name (Var_name H2)))
                          (Expr_name (Var_name M)))))))))))
        (fd_spec ())))
    (Function_decl
      ((fd_name (Atom umerge2_2)) (fd_arity 4)
        (fd_cases
          (((c_lhs
              ((Pattern_binding (Var_name T1))
                (Pattern_cons ((Pattern_binding (Var_name H2)))
                  (Pattern_binding (Var_name T2)))
                (Pattern_binding (Var_name M)) (Pattern_binding (Var_name H1))))
             (c_guard
               (((Expr_apply
                   ((fa_name
                      (Expr_name
                        (Qualified_name (n_mod (Atom_name (Atom erlang)))
                          (n_name (Atom_name (Atom '=<'))))))
                     (fa_args
                       ((Expr_name (Var_name H1)) (Expr_name (Var_name H2)))))))))
             (c_rhs
               (Expr_apply
                 ((fa_name (Expr_name (Atom_name (Atom umerge2_1))))
                   (fa_args
                     ((Expr_name (Var_name T1)) (Expr_name (Var_name T2))
                       (Expr_cons ((Expr_name (Var_name H1)))
                         (Expr_name (Var_name M)))
                       (Expr_name (Var_name H1)) (Expr_name (Var_name H2))))))))
            ((c_lhs
               ((Pattern_binding (Var_name T1))
                 (Pattern_cons ((Pattern_binding (Var_name H2)))
                   (Pattern_binding (Var_name T2)))
                 (Pattern_binding (Var_name M))
                 (Pattern_binding (Var_name H1))))
              (c_guard ())
              (c_rhs
                (Expr_apply
                  ((fa_name (Expr_name (Atom_name (Atom umerge2_2))))
                    (fa_args
                      ((Expr_name (Var_name T1)) (Expr_name (Var_name T2))
                        (Expr_cons ((Expr_name (Var_name H2)))
                          (Expr_name (Var_name M)))
                        (Expr_name (Var_name H1))))))))
            ((c_lhs
               ((Pattern_binding (Var_name T1)) (Pattern_list ())
                 (Pattern_binding (Var_name M))
                 (Pattern_binding (Var_name H1))))
              (c_guard ())
              (c_rhs
                (Expr_apply
                  ((fa_name
                     (Expr_name
                       (Qualified_name (n_mod (Atom_name (Atom lists)))
                         (n_name (Atom_name (Atom reverse))))))
                    (fa_args
                      ((Expr_name (Var_name T1))
                        (Expr_cons ((Expr_name (Var_name H1)))
                          (Expr_name (Var_name M)))))))))))
        (fd_spec ())))
    (Module_comment (Comment "% rumerge/2"))
    (Module_comment
      (Comment "% Elements from the first list are kept and prioritized."))
    (Function_decl
      ((fd_name (Atom rumerge2_1)) (fd_arity 4)
        (fd_cases
          (((c_lhs
              ((Pattern_cons ((Pattern_binding (Var_name H1)))
                 (Pattern_binding (Var_name T1)))
                (Pattern_binding (Var_name T2)) (Pattern_binding (Var_name M))
                (Pattern_binding (Var_name H2))))
             (c_guard
               (((Expr_apply
                   ((fa_name
                      (Expr_name
                        (Qualified_name (n_mod (Atom_name (Atom erlang)))
                          (n_name (Atom_name (Atom '=<'))))))
                     (fa_args
                       ((Expr_name (Var_name H1)) (Expr_name (Var_name H2)))))))))
             (c_rhs
               (Expr_apply
                 ((fa_name (Expr_name (Atom_name (Atom rumerge2_2))))
                   (fa_args
                     ((Expr_name (Var_name T1)) (Expr_name (Var_name T2))
                       (Expr_name (Var_name M)) (Expr_name (Var_name H2))
                       (Expr_name (Var_name H1))))))))
            ((c_lhs
               ((Pattern_cons ((Pattern_binding (Var_name H1)))
                  (Pattern_binding (Var_name T1)))
                 (Pattern_binding (Var_name T2)) (Pattern_binding (Var_name M))
                 (Pattern_binding (Var_name H2))))
              (c_guard ())
              (c_rhs
                (Expr_apply
                  ((fa_name (Expr_name (Atom_name (Atom rumerge2_1))))
                    (fa_args
                      ((Expr_name (Var_name T1)) (Expr_name (Var_name T2))
                        (Expr_cons ((Expr_name (Var_name H1)))
                          (Expr_name (Var_name M)))
                        (Expr_name (Var_name H2))))))))
            ((c_lhs
               ((Pattern_list ()) (Pattern_binding (Var_name T2))
                 (Pattern_binding (Var_name M))
                 (Pattern_binding (Var_name H2))))
              (c_guard ())
              (c_rhs
                (Expr_apply
                  ((fa_name
                     (Expr_name
                       (Qualified_name (n_mod (Atom_name (Atom lists)))
                         (n_name (Atom_name (Atom reverse))))))
                    (fa_args
                      ((Expr_name (Var_name T2))
                        (Expr_cons ((Expr_name (Var_name H2)))
                          (Expr_name (Var_name M)))))))))))
        (fd_spec ())))
    (Module_comment (Comment " H1 =< H2M."))
    (Function_decl
      ((fd_name (Atom rumerge2_2)) (fd_arity 5)
        (fd_cases
          (((c_lhs
              ((Pattern_binding (Var_name T1))
                (Pattern_cons ((Pattern_binding (Var_name H2)))
                  (Pattern_binding (Var_name T2)))
                (Pattern_binding (Var_name M)) (Pattern_binding (Var_name H2M))
                (Pattern_binding (Var_name H1))))
             (c_guard
               (((Expr_apply
                   ((fa_name
                      (Expr_name
                        (Qualified_name (n_mod (Atom_name (Atom erlang)))
                          (n_name (Atom_name (Atom '=<'))))))
                     (fa_args
                       ((Expr_name (Var_name H1)) (Expr_name (Var_name H2)))))))))
             (c_rhs
               (Expr_apply
                 ((fa_name (Expr_name (Atom_name (Atom rumerge2_2))))
                   (fa_args
                     ((Expr_name (Var_name T1)) (Expr_name (Var_name T2))
                       (Expr_cons ((Expr_name (Var_name H2M)))
                         (Expr_name (Var_name M)))
                       (Expr_name (Var_name H2)) (Expr_name (Var_name H1))))))))
            ((c_lhs
               ((Pattern_binding (Var_name T1))
                 (Pattern_cons ((Pattern_binding (Var_name H2)))
                   (Pattern_binding (Var_name T2)))
                 (Pattern_binding (Var_name M))
                 (Pattern_binding (Var_name H2M))
                 (Pattern_binding (Var_name H1))))
              (c_guard
                (((Expr_apply
                    ((fa_name
                       (Expr_name
                         (Qualified_name (n_mod (Atom_name (Atom erlang)))
                           (n_name (Atom_name (Atom '=='))))))
                      (fa_args
                        ((Expr_name (Var_name H1)) (Expr_name (Var_name H2M)))))))))
              (c_rhs
                (Expr_apply
                  ((fa_name (Expr_name (Atom_name (Atom rumerge2_1))))
                    (fa_args
                      ((Expr_name (Var_name T1)) (Expr_name (Var_name T2))
                        (Expr_cons ((Expr_name (Var_name H1)))
                          (Expr_name (Var_name M)))
                        (Expr_name (Var_name H2))))))))
            ((c_lhs
               ((Pattern_binding (Var_name T1))
                 (Pattern_cons ((Pattern_binding (Var_name H2)))
                   (Pattern_binding (Var_name T2)))
                 (Pattern_binding (Var_name M))
                 (Pattern_binding (Var_name H2M))
                 (Pattern_binding (Var_name H1))))
              (c_guard ())
              (c_rhs
                (Expr_apply
                  ((fa_name (Expr_name (Atom_name (Atom rumerge2_1))))
                    (fa_args
                      ((Expr_name (Var_name T1)) (Expr_name (Var_name T2))
                        (Expr_cons
                          ((Expr_name (Var_name H1))
                            (Expr_name (Var_name H2M)))
                          (Expr_name (Var_name M)))
                        (Expr_name (Var_name H2))))))))
            ((c_lhs
               ((Pattern_binding (Var_name T1)) (Pattern_list ())
                 (Pattern_binding (Var_name M))
                 (Pattern_binding (Var_name H2M))
                 (Pattern_binding (Var_name H1))))
              (c_guard
                (((Expr_apply
                    ((fa_name
                       (Expr_name
                         (Qualified_name (n_mod (Atom_name (Atom erlang)))
                           (n_name (Atom_name (Atom '=='))))))
                      (fa_args
                        ((Expr_name (Var_name H1)) (Expr_name (Var_name H2M)))))))))
              (c_rhs
                (Expr_apply
                  ((fa_name
                     (Expr_name
                       (Qualified_name (n_mod (Atom_name (Atom lists)))
                         (n_name (Atom_name (Atom reverse))))))
                    (fa_args
                      ((Expr_name (Var_name T1))
                        (Expr_cons ((Expr_name (Var_name H1)))
                          (Expr_name (Var_name M)))))))))
            ((c_lhs
               ((Pattern_binding (Var_name T1)) (Pattern_list ())
                 (Pattern_binding (Var_name M))
                 (Pattern_binding (Var_name H2M))
                 (Pattern_binding (Var_name H1))))
              (c_guard ())
              (c_rhs
                (Expr_apply
                  ((fa_name
                     (Expr_name
                       (Qualified_name (n_mod (Atom_name (Atom lists)))
                         (n_name (Atom_name (Atom reverse))))))
                    (fa_args
                      ((Expr_name (Var_name T1))
                        (Expr_cons
                          ((Expr_name (Var_name H1))
                            (Expr_name (Var_name H2M)))
                          (Expr_name (Var_name M)))))))))))
        (fd_spec ())))
    (Module_comment (Comment "% keysort/2"))
    (Module_comment (Comment "% Ascending."))
    (Function_decl
      ((fd_name (Atom keysplit_1)) (fd_arity 8)
        (fd_cases
          (((c_lhs
              ((Pattern_binding (Var_name I)) (Pattern_binding (Var_name X))
                (Pattern_binding (Var_name EX)) (Pattern_binding (Var_name Y))
                (Pattern_binding (Var_name EY))
                (Pattern_cons ((Pattern_binding (Var_name Z)))
                  (Pattern_binding (Var_name L)))
                (Pattern_binding (Var_name R)) (Pattern_binding (Var_name Rs))))
             (c_guard ())
             (c_rhs
               (Expr_case
                 (Expr_apply
                   ((fa_name (Expr_name (Atom_name (Atom element))))
                     (fa_args
                       ((Expr_name (Var_name I)) (Expr_name (Var_name Z))))))
                 (((c_lhs ((Pattern_binding (Var_name EZ))))
                    (c_guard
                      (((Expr_apply
                          ((fa_name
                             (Expr_name
                               (Qualified_name
                                 (n_mod (Atom_name (Atom erlang)))
                                 (n_name (Atom_name (Atom '=<'))))))
                            (fa_args
                              ((Expr_name (Var_name EY))
                                (Expr_name (Var_name EZ)))))))))
                    (c_rhs
                      (Expr_apply
                        ((fa_name (Expr_name (Atom_name (Atom keysplit_1))))
                          (fa_args
                            ((Expr_name (Var_name I)) (Expr_name (Var_name Y))
                              (Expr_name (Var_name EY))
                              (Expr_name (Var_name Z))
                              (Expr_name (Var_name EZ))
                              (Expr_name (Var_name L))
                              (Expr_cons ((Expr_name (Var_name X)))
                                (Expr_name (Var_name R)))
                              (Expr_name (Var_name Rs))))))))
                   ((c_lhs ((Pattern_binding (Var_name EZ))))
                     (c_guard
                       (((Expr_apply
                           ((fa_name
                              (Expr_name
                                (Qualified_name
                                  (n_mod (Atom_name (Atom erlang)))
                                  (n_name (Atom_name (Atom '=<'))))))
                             (fa_args
                               ((Expr_name (Var_name EX))
                                 (Expr_name (Var_name EZ)))))))))
                     (c_rhs
                       (Expr_apply
                         ((fa_name (Expr_name (Atom_name (Atom keysplit_1))))
                           (fa_args
                             ((Expr_name (Var_name I)) (Expr_name (Var_name Z))
                               (Expr_name (Var_name EZ))
                               (Expr_name (Var_name Y))
                               (Expr_name (Var_name EY))
                               (Expr_name (Var_name L))
                               (Expr_cons ((Expr_name (Var_name X)))
                                 (Expr_name (Var_name R)))
                               (Expr_name (Var_name Rs))))))))
                   ((c_lhs ((Pattern_binding (Var_name _EZ))))
                     (c_guard
                       (((Expr_apply
                           ((fa_name
                              (Expr_name
                                (Qualified_name
                                  (n_mod (Atom_name (Atom erlang)))
                                  (n_name (Atom_name (Atom '=='))))))
                             (fa_args
                               ((Expr_name (Var_name R)) (Expr_list ()))))))))
                     (c_rhs
                       (Expr_apply
                         ((fa_name (Expr_name (Atom_name (Atom keysplit_1))))
                           (fa_args
                             ((Expr_name (Var_name I)) (Expr_name (Var_name X))
                               (Expr_name (Var_name EX))
                               (Expr_name (Var_name Y))
                               (Expr_name (Var_name EY))
                               (Expr_name (Var_name L))
                               (Expr_list ((Expr_name (Var_name Z))))
                               (Expr_name (Var_name Rs))))))))
                   ((c_lhs ((Pattern_binding (Var_name EZ)))) (c_guard ())
                     (c_rhs
                       (Expr_apply
                         ((fa_name (Expr_name (Atom_name (Atom keysplit_1_1))))
                           (fa_args
                             ((Expr_name (Var_name I)) (Expr_name (Var_name X))
                               (Expr_name (Var_name EX))
                               (Expr_name (Var_name Y))
                               (Expr_name (Var_name EY))
                               (Expr_name (Var_name EZ))
                               (Expr_name (Var_name R))
                               (Expr_name (Var_name Rs))
                               (Expr_name (Var_name Z))
                               (Expr_name (Var_name L))))))))))))
            ((c_lhs
               ((Pattern_binding (Var_name I)) (Pattern_binding (Var_name X))
                 (Pattern_binding (Var_name _EX))
                 (Pattern_binding (Var_name Y))
                 (Pattern_binding (Var_name _EY)) (Pattern_list ())
                 (Pattern_binding (Var_name R))
                 (Pattern_binding (Var_name Rs))))
              (c_guard ())
              (c_rhs
                (Expr_apply
                  ((fa_name (Expr_name (Atom_name (Atom rkeymergel))))
                    (fa_args
                      ((Expr_name (Var_name I))
                        (Expr_cons
                          ((Expr_cons
                             ((Expr_name (Var_name Y))
                               (Expr_name (Var_name X)))
                             (Expr_name (Var_name R))))
                          (Expr_name (Var_name Rs)))
                        (Expr_list ()) (Expr_literal (Lit_atom (Atom asc)))))))))))
        (fd_spec ())))
    (Function_decl
      ((fd_name (Atom keysplit_1_1)) (fd_arity 10)
        (fd_cases
          (((c_lhs
              ((Pattern_binding (Var_name I)) (Pattern_binding (Var_name X))
                (Pattern_binding (Var_name EX)) (Pattern_binding (Var_name Y))
                (Pattern_binding (Var_name EY)) (Pattern_binding (Var_name ES))
                (Pattern_binding (Var_name R)) (Pattern_binding (Var_name Rs))
                (Pattern_binding (Var_name S))
                (Pattern_cons ((Pattern_binding (Var_name Z)))
                  (Pattern_binding (Var_name L)))))
             (c_guard ())
             (c_rhs
               (Expr_case
                 (Expr_apply
                   ((fa_name (Expr_name (Atom_name (Atom element))))
                     (fa_args
                       ((Expr_name (Var_name I)) (Expr_name (Var_name Z))))))
                 (((c_lhs ((Pattern_binding (Var_name EZ))))
                    (c_guard
                      (((Expr_apply
                          ((fa_name
                             (Expr_name
                               (Qualified_name
                                 (n_mod (Atom_name (Atom erlang)))
                                 (n_name (Atom_name (Atom '=<'))))))
                            (fa_args
                              ((Expr_name (Var_name EY))
                                (Expr_name (Var_name EZ)))))))))
                    (c_rhs
                      (Expr_apply
                        ((fa_name (Expr_name (Atom_name (Atom keysplit_1_1))))
                          (fa_args
                            ((Expr_name (Var_name I)) (Expr_name (Var_name Y))
                              (Expr_name (Var_name EY))
                              (Expr_name (Var_name Z))
                              (Expr_name (Var_name EZ))
                              (Expr_name (Var_name ES))
                              (Expr_cons ((Expr_name (Var_name X)))
                                (Expr_name (Var_name R)))
                              (Expr_name (Var_name Rs))
                              (Expr_name (Var_name S))
                              (Expr_name (Var_name L))))))))
                   ((c_lhs ((Pattern_binding (Var_name EZ))))
                     (c_guard
                       (((Expr_apply
                           ((fa_name
                              (Expr_name
                                (Qualified_name
                                  (n_mod (Atom_name (Atom erlang)))
                                  (n_name (Atom_name (Atom '=<'))))))
                             (fa_args
                               ((Expr_name (Var_name EX))
                                 (Expr_name (Var_name EZ)))))))))
                     (c_rhs
                       (Expr_apply
                         ((fa_name (Expr_name (Atom_name (Atom keysplit_1_1))))
                           (fa_args
                             ((Expr_name (Var_name I)) (Expr_name (Var_name Z))
                               (Expr_name (Var_name EZ))
                               (Expr_name (Var_name Y))
                               (Expr_name (Var_name EY))
                               (Expr_name (Var_name ES))
                               (Expr_cons ((Expr_name (Var_name X)))
                                 (Expr_name (Var_name R)))
                               (Expr_name (Var_name Rs))
                               (Expr_name (Var_name S))
                               (Expr_name (Var_name L))))))))
                   ((c_lhs ((Pattern_binding (Var_name EZ))))
                     (c_guard
                       (((Expr_apply
                           ((fa_name
                              (Expr_name
                                (Qualified_name
                                  (n_mod (Atom_name (Atom erlang)))
                                  (n_name (Atom_name (Atom '=<'))))))
                             (fa_args
                               ((Expr_name (Var_name ES))
                                 (Expr_name (Var_name EZ)))))))))
                     (c_rhs
                       (Expr_apply
                         ((fa_name (Expr_name (Atom_name (Atom keysplit_1))))
                           (fa_args
                             ((Expr_name (Var_name I)) (Expr_name (Var_name S))
                               (Expr_name (Var_name ES))
                               (Expr_name (Var_name Z))
                               (Expr_name (Var_name EZ))
                               (Expr_name (Var_name L)) (Expr_list ())
                               (Expr_cons
                                 ((Expr_cons
                                    ((Expr_name (Var_name Y))
                                      (Expr_name (Var_name X)))
                                    (Expr_name (Var_name R))))
                                 (Expr_name (Var_name Rs)))))))))
                   ((c_lhs ((Pattern_binding (Var_name EZ)))) (c_guard ())
                     (c_rhs
                       (Expr_apply
                         ((fa_name (Expr_name (Atom_name (Atom keysplit_1))))
                           (fa_args
                             ((Expr_name (Var_name I)) (Expr_name (Var_name Z))
                               (Expr_name (Var_name EZ))
                               (Expr_name (Var_name S))
                               (Expr_name (Var_name ES))
                               (Expr_name (Var_name L)) (Expr_list ())
                               (Expr_cons
                                 ((Expr_cons
                                    ((Expr_name (Var_name Y))
                                      (Expr_name (Var_name X)))
                                    (Expr_name (Var_name R))))
                                 (Expr_name (Var_name Rs)))))))))))))
            ((c_lhs
               ((Pattern_binding (Var_name I)) (Pattern_binding (Var_name X))
                 (Pattern_binding (Var_name _EX))
                 (Pattern_binding (Var_name Y))
                 (Pattern_binding (Var_name _EY))
                 (Pattern_binding (Var_name _ES))
                 (Pattern_binding (Var_name R)) (Pattern_binding (Var_name Rs))
                 (Pattern_binding (Var_name S)) (Pattern_list ())))
              (c_guard ())
              (c_rhs
                (Expr_apply
                  ((fa_name (Expr_name (Atom_name (Atom rkeymergel))))
                    (fa_args
                      ((Expr_name (Var_name I))
                        (Expr_cons
                          ((Expr_list ((Expr_name (Var_name S))))
                            (Expr_cons
                              ((Expr_name (Var_name Y))
                                (Expr_name (Var_name X)))
                              (Expr_name (Var_name R))))
                          (Expr_name (Var_name Rs)))
                        (Expr_list ()) (Expr_literal (Lit_atom (Atom asc)))))))))))
        (fd_spec ())))
    (Module_comment (Comment "% Descending."))
    (Function_decl
      ((fd_name (Atom keysplit_2)) (fd_arity 8)
        (fd_cases
          (((c_lhs
              ((Pattern_binding (Var_name I)) (Pattern_binding (Var_name X))
                (Pattern_binding (Var_name EX)) (Pattern_binding (Var_name Y))
                (Pattern_binding (Var_name EY))
                (Pattern_cons ((Pattern_binding (Var_name Z)))
                  (Pattern_binding (Var_name L)))
                (Pattern_binding (Var_name R)) (Pattern_binding (Var_name Rs))))
             (c_guard ())
             (c_rhs
               (Expr_case
                 (Expr_apply
                   ((fa_name (Expr_name (Atom_name (Atom element))))
                     (fa_args
                       ((Expr_name (Var_name I)) (Expr_name (Var_name Z))))))
                 (((c_lhs ((Pattern_binding (Var_name EZ))))
                    (c_guard
                      (((Expr_apply
                          ((fa_name
                             (Expr_name
                               (Qualified_name
                                 (n_mod (Atom_name (Atom erlang)))
                                 (n_name (Atom_name (Atom '>'))))))
                            (fa_args
                              ((Expr_name (Var_name EY))
                                (Expr_name (Var_name EZ)))))))))
                    (c_rhs
                      (Expr_apply
                        ((fa_name (Expr_name (Atom_name (Atom keysplit_2))))
                          (fa_args
                            ((Expr_name (Var_name I)) (Expr_name (Var_name Y))
                              (Expr_name (Var_name EY))
                              (Expr_name (Var_name Z))
                              (Expr_name (Var_name EZ))
                              (Expr_name (Var_name L))
                              (Expr_cons ((Expr_name (Var_name X)))
                                (Expr_name (Var_name R)))
                              (Expr_name (Var_name Rs))))))))
                   ((c_lhs ((Pattern_binding (Var_name EZ))))
                     (c_guard
                       (((Expr_apply
                           ((fa_name
                              (Expr_name
                                (Qualified_name
                                  (n_mod (Atom_name (Atom erlang)))
                                  (n_name (Atom_name (Atom '>'))))))
                             (fa_args
                               ((Expr_name (Var_name EX))
                                 (Expr_name (Var_name EZ)))))))))
                     (c_rhs
                       (Expr_apply
                         ((fa_name (Expr_name (Atom_name (Atom keysplit_2))))
                           (fa_args
                             ((Expr_name (Var_name I)) (Expr_name (Var_name Z))
                               (Expr_name (Var_name EZ))
                               (Expr_name (Var_name Y))
                               (Expr_name (Var_name EY))
                               (Expr_name (Var_name L))
                               (Expr_cons ((Expr_name (Var_name X)))
                                 (Expr_name (Var_name R)))
                               (Expr_name (Var_name Rs))))))))
                   ((c_lhs ((Pattern_binding (Var_name _EZ))))
                     (c_guard
                       (((Expr_apply
                           ((fa_name
                              (Expr_name
                                (Qualified_name
                                  (n_mod (Atom_name (Atom erlang)))
                                  (n_name (Atom_name (Atom '=='))))))
                             (fa_args
                               ((Expr_name (Var_name R)) (Expr_list ()))))))))
                     (c_rhs
                       (Expr_apply
                         ((fa_name (Expr_name (Atom_name (Atom keysplit_2))))
                           (fa_args
                             ((Expr_name (Var_name I)) (Expr_name (Var_name X))
                               (Expr_name (Var_name EX))
                               (Expr_name (Var_name Y))
                               (Expr_name (Var_name EY))
                               (Expr_name (Var_name L))
                               (Expr_list ((Expr_name (Var_name Z))))
                               (Expr_name (Var_name Rs))))))))
                   ((c_lhs ((Pattern_binding (Var_name EZ)))) (c_guard ())
                     (c_rhs
                       (Expr_apply
                         ((fa_name (Expr_name (Atom_name (Atom keysplit_2_1))))
                           (fa_args
                             ((Expr_name (Var_name I)) (Expr_name (Var_name X))
                               (Expr_name (Var_name EX))
                               (Expr_name (Var_name Y))
                               (Expr_name (Var_name EY))
                               (Expr_name (Var_name EZ))
                               (Expr_name (Var_name R))
                               (Expr_name (Var_name Rs))
                               (Expr_name (Var_name Z))
                               (Expr_name (Var_name L))))))))))))
            ((c_lhs
               ((Pattern_binding (Var_name I)) (Pattern_binding (Var_name X))
                 (Pattern_binding (Var_name _EX))
                 (Pattern_binding (Var_name Y))
                 (Pattern_binding (Var_name _EY)) (Pattern_list ())
                 (Pattern_binding (Var_name R))
                 (Pattern_binding (Var_name Rs))))
              (c_guard ())
              (c_rhs
                (Expr_apply
                  ((fa_name (Expr_name (Atom_name (Atom keymergel))))
                    (fa_args
                      ((Expr_name (Var_name I))
                        (Expr_cons
                          ((Expr_cons
                             ((Expr_name (Var_name Y))
                               (Expr_name (Var_name X)))
                             (Expr_name (Var_name R))))
                          (Expr_name (Var_name Rs)))
                        (Expr_list ()) (Expr_literal (Lit_atom (Atom desc)))))))))))
        (fd_spec ())))
    (Function_decl
      ((fd_name (Atom keysplit_2_1)) (fd_arity 10)
        (fd_cases
          (((c_lhs
              ((Pattern_binding (Var_name I)) (Pattern_binding (Var_name X))
                (Pattern_binding (Var_name EX)) (Pattern_binding (Var_name Y))
                (Pattern_binding (Var_name EY)) (Pattern_binding (Var_name ES))
                (Pattern_binding (Var_name R)) (Pattern_binding (Var_name Rs))
                (Pattern_binding (Var_name S))
                (Pattern_cons ((Pattern_binding (Var_name Z)))
                  (Pattern_binding (Var_name L)))))
             (c_guard ())
             (c_rhs
               (Expr_case
                 (Expr_apply
                   ((fa_name (Expr_name (Atom_name (Atom element))))
                     (fa_args
                       ((Expr_name (Var_name I)) (Expr_name (Var_name Z))))))
                 (((c_lhs ((Pattern_binding (Var_name EZ))))
                    (c_guard
                      (((Expr_apply
                          ((fa_name
                             (Expr_name
                               (Qualified_name
                                 (n_mod (Atom_name (Atom erlang)))
                                 (n_name (Atom_name (Atom '>'))))))
                            (fa_args
                              ((Expr_name (Var_name EY))
                                (Expr_name (Var_name EZ)))))))))
                    (c_rhs
                      (Expr_apply
                        ((fa_name (Expr_name (Atom_name (Atom keysplit_2_1))))
                          (fa_args
                            ((Expr_name (Var_name I)) (Expr_name (Var_name Y))
                              (Expr_name (Var_name EY))
                              (Expr_name (Var_name Z))
                              (Expr_name (Var_name EZ))
                              (Expr_name (Var_name ES))
                              (Expr_cons ((Expr_name (Var_name X)))
                                (Expr_name (Var_name R)))
                              (Expr_name (Var_name Rs))
                              (Expr_name (Var_name S))
                              (Expr_name (Var_name L))))))))
                   ((c_lhs ((Pattern_binding (Var_name EZ))))
                     (c_guard
                       (((Expr_apply
                           ((fa_name
                              (Expr_name
                                (Qualified_name
                                  (n_mod (Atom_name (Atom erlang)))
                                  (n_name (Atom_name (Atom '>'))))))
                             (fa_args
                               ((Expr_name (Var_name EX))
                                 (Expr_name (Var_name EZ)))))))))
                     (c_rhs
                       (Expr_apply
                         ((fa_name (Expr_name (Atom_name (Atom keysplit_2_1))))
                           (fa_args
                             ((Expr_name (Var_name I)) (Expr_name (Var_name Z))
                               (Expr_name (Var_name EZ))
                               (Expr_name (Var_name Y))
                               (Expr_name (Var_name EY))
                               (Expr_name (Var_name ES))
                               (Expr_cons ((Expr_name (Var_name X)))
                                 (Expr_name (Var_name R)))
                               (Expr_name (Var_name Rs))
                               (Expr_name (Var_name S))
                               (Expr_name (Var_name L))))))))
                   ((c_lhs ((Pattern_binding (Var_name EZ))))
                     (c_guard
                       (((Expr_apply
                           ((fa_name
                              (Expr_name
                                (Qualified_name
                                  (n_mod (Atom_name (Atom erlang)))
                                  (n_name (Atom_name (Atom '>'))))))
                             (fa_args
                               ((Expr_name (Var_name ES))
                                 (Expr_name (Var_name EZ)))))))))
                     (c_rhs
                       (Expr_apply
                         ((fa_name (Expr_name (Atom_name (Atom keysplit_2))))
                           (fa_args
                             ((Expr_name (Var_name I)) (Expr_name (Var_name S))
                               (Expr_name (Var_name ES))
                               (Expr_name (Var_name Z))
                               (Expr_name (Var_name EZ))
                               (Expr_name (Var_name L)) (Expr_list ())
                               (Expr_cons
                                 ((Expr_cons
                                    ((Expr_name (Var_name Y))
                                      (Expr_name (Var_name X)))
                                    (Expr_name (Var_name R))))
                                 (Expr_name (Var_name Rs)))))))))
                   ((c_lhs ((Pattern_binding (Var_name EZ)))) (c_guard ())
                     (c_rhs
                       (Expr_apply
                         ((fa_name (Expr_name (Atom_name (Atom keysplit_2))))
                           (fa_args
                             ((Expr_name (Var_name I)) (Expr_name (Var_name Z))
                               (Expr_name (Var_name EZ))
                               (Expr_name (Var_name S))
                               (Expr_name (Var_name ES))
                               (Expr_name (Var_name L)) (Expr_list ())
                               (Expr_cons
                                 ((Expr_cons
                                    ((Expr_name (Var_name Y))
                                      (Expr_name (Var_name X)))
                                    (Expr_name (Var_name R))))
                                 (Expr_name (Var_name Rs)))))))))))))
            ((c_lhs
               ((Pattern_binding (Var_name I)) (Pattern_binding (Var_name X))
                 (Pattern_binding (Var_name _EX))
                 (Pattern_binding (Var_name Y))
                 (Pattern_binding (Var_name _EY))
                 (Pattern_binding (Var_name _ES))
                 (Pattern_binding (Var_name R)) (Pattern_binding (Var_name Rs))
                 (Pattern_binding (Var_name S)) (Pattern_list ())))
              (c_guard ())
              (c_rhs
                (Expr_apply
                  ((fa_name (Expr_name (Atom_name (Atom keymergel))))
                    (fa_args
                      ((Expr_name (Var_name I))
                        (Expr_cons
                          ((Expr_list ((Expr_name (Var_name S))))
                            (Expr_cons
                              ((Expr_name (Var_name Y))
                                (Expr_name (Var_name X)))
                              (Expr_name (Var_name R))))
                          (Expr_name (Var_name Rs)))
                        (Expr_list ()) (Expr_literal (Lit_atom (Atom desc)))))))))))
        (fd_spec ())))
    (Function_decl
      ((fd_name (Atom keymergel)) (fd_arity 4)
        (fd_cases
          (((c_lhs
              ((Pattern_binding (Var_name I))
                (Pattern_cons
                  ((Pattern_binding (Var_name T1))
                    (Pattern_cons ((Pattern_binding (Var_name H2)))
                      (Pattern_binding (Var_name T2)))
                    (Pattern_cons ((Pattern_binding (Var_name H3)))
                      (Pattern_binding (Var_name T3))))
                  (Pattern_binding (Var_name L)))
                (Pattern_binding (Var_name Acc))
                (Pattern_binding (Var_name O))))
             (c_guard
               (((Expr_apply
                   ((fa_name
                      (Expr_name
                        (Qualified_name (n_mod (Atom_name (Atom erlang)))
                          (n_name (Atom_name (Atom '=='))))))
                     (fa_args
                       ((Expr_name (Var_name O))
                         (Expr_literal (Lit_atom (Atom asc))))))))))
             (c_rhs
               (Expr_let
                 ((lb_lhs (Pattern_binding (Var_name M)))
                   (lb_rhs
                     (Expr_apply
                       ((fa_name (Expr_name (Atom_name (Atom keymerge3_1))))
                         (fa_args
                           ((Expr_name (Var_name I)) (Expr_name (Var_name T1))
                             (Expr_list ()) (Expr_name (Var_name O))
                             (Expr_apply
                               ((fa_name
                                  (Expr_name (Atom_name (Atom element))))
                                 (fa_args
                                   ((Expr_name (Var_name I))
                                     (Expr_name (Var_name H2))))))
                             (Expr_name (Var_name H2))
                             (Expr_name (Var_name T2))
                             (Expr_apply
                               ((fa_name
                                  (Expr_name (Atom_name (Atom element))))
                                 (fa_args
                                   ((Expr_name (Var_name I))
                                     (Expr_name (Var_name H3))))))
                             (Expr_name (Var_name H3))
                             (Expr_name (Var_name T3))))))))
                 (Expr_apply
                   ((fa_name (Expr_name (Atom_name (Atom keymergel))))
                     (fa_args
                       ((Expr_name (Var_name I)) (Expr_name (Var_name L))
                         (Expr_cons ((Expr_name (Var_name M)))
                           (Expr_name (Var_name Acc)))
                         (Expr_name (Var_name O)))))))))
            ((c_lhs
               ((Pattern_binding (Var_name I))
                 (Pattern_cons
                   ((Pattern_cons ((Pattern_binding (Var_name H3)))
                      (Pattern_binding (Var_name T3)))
                     (Pattern_cons ((Pattern_binding (Var_name H2)))
                       (Pattern_binding (Var_name T2)))
                     (Pattern_binding (Var_name T1)))
                   (Pattern_binding (Var_name L)))
                 (Pattern_binding (Var_name Acc))
                 (Pattern_binding (Var_name O))))
              (c_guard
                (((Expr_apply
                    ((fa_name
                       (Expr_name
                         (Qualified_name (n_mod (Atom_name (Atom erlang)))
                           (n_name (Atom_name (Atom '=='))))))
                      (fa_args
                        ((Expr_name (Var_name O))
                          (Expr_literal (Lit_atom (Atom desc))))))))))
              (c_rhs
                (Expr_let
                  ((lb_lhs (Pattern_binding (Var_name M)))
                    (lb_rhs
                      (Expr_apply
                        ((fa_name (Expr_name (Atom_name (Atom keymerge3_1))))
                          (fa_args
                            ((Expr_name (Var_name I)) (Expr_name (Var_name T1))
                              (Expr_list ()) (Expr_name (Var_name O))
                              (Expr_apply
                                ((fa_name
                                   (Expr_name (Atom_name (Atom element))))
                                  (fa_args
                                    ((Expr_name (Var_name I))
                                      (Expr_name (Var_name H2))))))
                              (Expr_name (Var_name H2))
                              (Expr_name (Var_name T2))
                              (Expr_apply
                                ((fa_name
                                   (Expr_name (Atom_name (Atom element))))
                                  (fa_args
                                    ((Expr_name (Var_name I))
                                      (Expr_name (Var_name H3))))))
                              (Expr_name (Var_name H3))
                              (Expr_name (Var_name T3))))))))
                  (Expr_apply
                    ((fa_name (Expr_name (Atom_name (Atom keymergel))))
                      (fa_args
                        ((Expr_name (Var_name I)) (Expr_name (Var_name L))
                          (Expr_cons ((Expr_name (Var_name M)))
                            (Expr_name (Var_name Acc)))
                          (Expr_name (Var_name O)))))))))
            ((c_lhs
               ((Pattern_binding (Var_name I))
                 (Pattern_cons
                   ((Pattern_binding (Var_name T1))
                     (Pattern_cons ((Pattern_binding (Var_name H2)))
                       (Pattern_binding (Var_name T2))))
                   (Pattern_binding (Var_name L)))
                 (Pattern_binding (Var_name Acc))
                 (Pattern_match (Lit_atom (Atom asc)))))
              (c_guard ())
              (c_rhs
                (Expr_apply
                  ((fa_name (Expr_name (Atom_name (Atom keymergel))))
                    (fa_args
                      ((Expr_name (Var_name I)) (Expr_name (Var_name L))
                        (Expr_cons
                          ((Expr_apply
                             ((fa_name
                                (Expr_name (Atom_name (Atom keymerge2_1))))
                               (fa_args
                                 ((Expr_name (Var_name I))
                                   (Expr_name (Var_name T1))
                                   (Expr_apply
                                     ((fa_name
                                        (Expr_name (Atom_name (Atom element))))
                                       (fa_args
                                         ((Expr_name (Var_name I))
                                           (Expr_name (Var_name H2))))))
                                   (Expr_name (Var_name H2))
                                   (Expr_name (Var_name T2)) (Expr_list ()))))))
                          (Expr_name (Var_name Acc)))
                        (Expr_literal (Lit_atom (Atom asc)))))))))
            ((c_lhs
               ((Pattern_binding (Var_name I))
                 (Pattern_cons
                   ((Pattern_cons ((Pattern_binding (Var_name H2)))
                      (Pattern_binding (Var_name T2)))
                     (Pattern_binding (Var_name T1)))
                   (Pattern_binding (Var_name L)))
                 (Pattern_binding (Var_name Acc))
                 (Pattern_match (Lit_atom (Atom desc)))))
              (c_guard ())
              (c_rhs
                (Expr_apply
                  ((fa_name (Expr_name (Atom_name (Atom keymergel))))
                    (fa_args
                      ((Expr_name (Var_name I)) (Expr_name (Var_name L))
                        (Expr_cons
                          ((Expr_apply
                             ((fa_name
                                (Expr_name (Atom_name (Atom keymerge2_1))))
                               (fa_args
                                 ((Expr_name (Var_name I))
                                   (Expr_name (Var_name T1))
                                   (Expr_apply
                                     ((fa_name
                                        (Expr_name (Atom_name (Atom element))))
                                       (fa_args
                                         ((Expr_name (Var_name I))
                                           (Expr_name (Var_name H2))))))
                                   (Expr_name (Var_name H2))
                                   (Expr_name (Var_name T2)) (Expr_list ()))))))
                          (Expr_name (Var_name Acc)))
                        (Expr_literal (Lit_atom (Atom desc)))))))))
            ((c_lhs
               ((Pattern_binding (Var_name _I))
                 (Pattern_list ((Pattern_binding (Var_name L))))
                 (Pattern_list ()) (Pattern_binding (Var_name _O))))
              (c_guard ()) (c_rhs (Expr_name (Var_name L))))
            ((c_lhs
               ((Pattern_binding (Var_name I))
                 (Pattern_list ((Pattern_binding (Var_name L))))
                 (Pattern_binding (Var_name Acc))
                 (Pattern_binding (Var_name O))))
              (c_guard ())
              (c_rhs
                (Expr_apply
                  ((fa_name (Expr_name (Atom_name (Atom rkeymergel))))
                    (fa_args
                      ((Expr_name (Var_name I))
                        (Expr_cons
                          ((Expr_apply
                             ((fa_name
                                (Expr_name
                                  (Qualified_name
                                    (n_mod (Atom_name (Atom lists)))
                                    (n_name (Atom_name (Atom reverse))))))
                               (fa_args
                                 ((Expr_name (Var_name L)) (Expr_list ()))))))
                          (Expr_name (Var_name Acc)))
                        (Expr_list ()) (Expr_name (Var_name O))))))))
            ((c_lhs
               ((Pattern_binding (Var_name I)) (Pattern_list ())
                 (Pattern_binding (Var_name Acc))
                 (Pattern_binding (Var_name O))))
              (c_guard ())
              (c_rhs
                (Expr_apply
                  ((fa_name (Expr_name (Atom_name (Atom rkeymergel))))
                    (fa_args
                      ((Expr_name (Var_name I)) (Expr_name (Var_name Acc))
                        (Expr_list ()) (Expr_name (Var_name O))))))))))
        (fd_spec ())))
    (Function_decl
      ((fd_name (Atom rkeymergel)) (fd_arity 4)
        (fd_cases
          (((c_lhs
              ((Pattern_binding (Var_name I))
                (Pattern_cons
                  ((Pattern_cons ((Pattern_binding (Var_name H3)))
                     (Pattern_binding (Var_name T3)))
                    (Pattern_cons ((Pattern_binding (Var_name H2)))
                      (Pattern_binding (Var_name T2)))
                    (Pattern_binding (Var_name T1)))
                  (Pattern_binding (Var_name L)))
                (Pattern_binding (Var_name Acc))
                (Pattern_binding (Var_name O))))
             (c_guard
               (((Expr_apply
                   ((fa_name
                      (Expr_name
                        (Qualified_name (n_mod (Atom_name (Atom erlang)))
                          (n_name (Atom_name (Atom '=='))))))
                     (fa_args
                       ((Expr_name (Var_name O))
                         (Expr_literal (Lit_atom (Atom asc))))))))))
             (c_rhs
               (Expr_let
                 ((lb_lhs (Pattern_binding (Var_name M)))
                   (lb_rhs
                     (Expr_apply
                       ((fa_name (Expr_name (Atom_name (Atom rkeymerge3_1))))
                         (fa_args
                           ((Expr_name (Var_name I)) (Expr_name (Var_name T1))
                             (Expr_list ()) (Expr_name (Var_name O))
                             (Expr_apply
                               ((fa_name
                                  (Expr_name (Atom_name (Atom element))))
                                 (fa_args
                                   ((Expr_name (Var_name I))
                                     (Expr_name (Var_name H2))))))
                             (Expr_name (Var_name H2))
                             (Expr_name (Var_name T2))
                             (Expr_apply
                               ((fa_name
                                  (Expr_name (Atom_name (Atom element))))
                                 (fa_args
                                   ((Expr_name (Var_name I))
                                     (Expr_name (Var_name H3))))))
                             (Expr_name (Var_name H3))
                             (Expr_name (Var_name T3))))))))
                 (Expr_apply
                   ((fa_name (Expr_name (Atom_name (Atom rkeymergel))))
                     (fa_args
                       ((Expr_name (Var_name I)) (Expr_name (Var_name L))
                         (Expr_cons ((Expr_name (Var_name M)))
                           (Expr_name (Var_name Acc)))
                         (Expr_name (Var_name O)))))))))
            ((c_lhs
               ((Pattern_binding (Var_name I))
                 (Pattern_cons
                   ((Pattern_binding (Var_name T1))
                     (Pattern_cons ((Pattern_binding (Var_name H2)))
                       (Pattern_binding (Var_name T2)))
                     (Pattern_cons ((Pattern_binding (Var_name H3)))
                       (Pattern_binding (Var_name T3))))
                   (Pattern_binding (Var_name L)))
                 (Pattern_binding (Var_name Acc))
                 (Pattern_binding (Var_name O))))
              (c_guard
                (((Expr_apply
                    ((fa_name
                       (Expr_name
                         (Qualified_name (n_mod (Atom_name (Atom erlang)))
                           (n_name (Atom_name (Atom '=='))))))
                      (fa_args
                        ((Expr_name (Var_name O))
                          (Expr_literal (Lit_atom (Atom desc))))))))))
              (c_rhs
                (Expr_let
                  ((lb_lhs (Pattern_binding (Var_name M)))
                    (lb_rhs
                      (Expr_apply
                        ((fa_name (Expr_name (Atom_name (Atom rkeymerge3_1))))
                          (fa_args
                            ((Expr_name (Var_name I)) (Expr_name (Var_name T1))
                              (Expr_list ()) (Expr_name (Var_name O))
                              (Expr_apply
                                ((fa_name
                                   (Expr_name (Atom_name (Atom element))))
                                  (fa_args
                                    ((Expr_name (Var_name I))
                                      (Expr_name (Var_name H2))))))
                              (Expr_name (Var_name H2))
                              (Expr_name (Var_name T2))
                              (Expr_apply
                                ((fa_name
                                   (Expr_name (Atom_name (Atom element))))
                                  (fa_args
                                    ((Expr_name (Var_name I))
                                      (Expr_name (Var_name H3))))))
                              (Expr_name (Var_name H3))
                              (Expr_name (Var_name T3))))))))
                  (Expr_apply
                    ((fa_name (Expr_name (Atom_name (Atom rkeymergel))))
                      (fa_args
                        ((Expr_name (Var_name I)) (Expr_name (Var_name L))
                          (Expr_cons ((Expr_name (Var_name M)))
                            (Expr_name (Var_name Acc)))
                          (Expr_name (Var_name O)))))))))
            ((c_lhs
               ((Pattern_binding (Var_name I))
                 (Pattern_cons
                   ((Pattern_cons ((Pattern_binding (Var_name H2)))
                      (Pattern_binding (Var_name T2)))
                     (Pattern_binding (Var_name T1)))
                   (Pattern_binding (Var_name L)))
                 (Pattern_binding (Var_name Acc))
                 (Pattern_match (Lit_atom (Atom asc)))))
              (c_guard ())
              (c_rhs
                (Expr_apply
                  ((fa_name (Expr_name (Atom_name (Atom rkeymergel))))
                    (fa_args
                      ((Expr_name (Var_name I)) (Expr_name (Var_name L))
                        (Expr_cons
                          ((Expr_apply
                             ((fa_name
                                (Expr_name (Atom_name (Atom rkeymerge2_1))))
                               (fa_args
                                 ((Expr_name (Var_name I))
                                   (Expr_name (Var_name T1))
                                   (Expr_apply
                                     ((fa_name
                                        (Expr_name (Atom_name (Atom element))))
                                       (fa_args
                                         ((Expr_name (Var_name I))
                                           (Expr_name (Var_name H2))))))
                                   (Expr_name (Var_name H2))
                                   (Expr_name (Var_name T2)) (Expr_list ()))))))
                          (Expr_name (Var_name Acc)))
                        (Expr_literal (Lit_atom (Atom asc)))))))))
            ((c_lhs
               ((Pattern_binding (Var_name I))
                 (Pattern_cons
                   ((Pattern_binding (Var_name T1))
                     (Pattern_cons ((Pattern_binding (Var_name H2)))
                       (Pattern_binding (Var_name T2))))
                   (Pattern_binding (Var_name L)))
                 (Pattern_binding (Var_name Acc))
                 (Pattern_match (Lit_atom (Atom desc)))))
              (c_guard ())
              (c_rhs
                (Expr_apply
                  ((fa_name (Expr_name (Atom_name (Atom rkeymergel))))
                    (fa_args
                      ((Expr_name (Var_name I)) (Expr_name (Var_name L))
                        (Expr_cons
                          ((Expr_apply
                             ((fa_name
                                (Expr_name (Atom_name (Atom rkeymerge2_1))))
                               (fa_args
                                 ((Expr_name (Var_name I))
                                   (Expr_name (Var_name T1))
                                   (Expr_apply
                                     ((fa_name
                                        (Expr_name (Atom_name (Atom element))))
                                       (fa_args
                                         ((Expr_name (Var_name I))
                                           (Expr_name (Var_name H2))))))
                                   (Expr_name (Var_name H2))
                                   (Expr_name (Var_name T2)) (Expr_list ()))))))
                          (Expr_name (Var_name Acc)))
                        (Expr_literal (Lit_atom (Atom desc)))))))))
            ((c_lhs
               ((Pattern_binding (Var_name I))
                 (Pattern_list ((Pattern_binding (Var_name L))))
                 (Pattern_binding (Var_name Acc))
                 (Pattern_binding (Var_name O))))
              (c_guard ())
              (c_rhs
                (Expr_apply
                  ((fa_name (Expr_name (Atom_name (Atom keymergel))))
                    (fa_args
                      ((Expr_name (Var_name I))
                        (Expr_cons
                          ((Expr_apply
                             ((fa_name
                                (Expr_name
                                  (Qualified_name
                                    (n_mod (Atom_name (Atom lists)))
                                    (n_name (Atom_name (Atom reverse))))))
                               (fa_args
                                 ((Expr_name (Var_name L)) (Expr_list ()))))))
                          (Expr_name (Var_name Acc)))
                        (Expr_list ()) (Expr_name (Var_name O))))))))
            ((c_lhs
               ((Pattern_binding (Var_name I)) (Pattern_list ())
                 (Pattern_binding (Var_name Acc))
                 (Pattern_binding (Var_name O))))
              (c_guard ())
              (c_rhs
                (Expr_apply
                  ((fa_name (Expr_name (Atom_name (Atom keymergel))))
                    (fa_args
                      ((Expr_name (Var_name I)) (Expr_name (Var_name Acc))
                        (Expr_list ()) (Expr_name (Var_name O))))))))))
        (fd_spec ())))
    (Module_comment
      (Comment
        "%% An extra argument, D, just to avoid some move instructions."))
    (Module_comment (Comment "% Take L1 apart."))
    (Function_decl
      ((fd_name (Atom keymerge3_1)) (fd_arity 10)
        (fd_cases
          (((c_lhs
              ((Pattern_binding (Var_name I))
                (Pattern_cons ((Pattern_binding (Var_name H1)))
                  (Pattern_binding (Var_name T1)))
                (Pattern_binding (Var_name M)) (Pattern_binding (Var_name D))
                (Pattern_binding (Var_name E2)) (Pattern_binding (Var_name H2))
                (Pattern_binding (Var_name T2)) (Pattern_binding (Var_name E3))
                (Pattern_binding (Var_name H3))
                (Pattern_binding (Var_name T3))))
             (c_guard ())
             (c_rhs
               (Expr_case
                 (Expr_apply
                   ((fa_name (Expr_name (Atom_name (Atom element))))
                     (fa_args
                       ((Expr_name (Var_name I)) (Expr_name (Var_name H1))))))
                 (((c_lhs ((Pattern_binding (Var_name E1))))
                    (c_guard
                      (((Expr_apply
                          ((fa_name
                             (Expr_name
                               (Qualified_name
                                 (n_mod (Atom_name (Atom erlang)))
                                 (n_name (Atom_name (Atom '=<'))))))
                            (fa_args
                              ((Expr_name (Var_name E1))
                                (Expr_name (Var_name E2)))))))))
                    (c_rhs
                      (Expr_apply
                        ((fa_name (Expr_name (Atom_name (Atom keymerge3_12))))
                          (fa_args
                            ((Expr_name (Var_name I)) (Expr_name (Var_name E1))
                              (Expr_name (Var_name H1))
                              (Expr_name (Var_name T1))
                              (Expr_name (Var_name E2))
                              (Expr_name (Var_name H2))
                              (Expr_name (Var_name T2))
                              (Expr_name (Var_name E3))
                              (Expr_name (Var_name H3))
                              (Expr_name (Var_name T3))
                              (Expr_name (Var_name M))
                              (Expr_name (Var_name D))))))))
                   ((c_lhs ((Pattern_binding (Var_name E1)))) (c_guard ())
                     (c_rhs
                       (Expr_apply
                         ((fa_name (Expr_name (Atom_name (Atom keymerge3_21))))
                           (fa_args
                             ((Expr_name (Var_name I))
                               (Expr_name (Var_name E1))
                               (Expr_name (Var_name H1))
                               (Expr_name (Var_name T1))
                               (Expr_name (Var_name E2))
                               (Expr_name (Var_name H2))
                               (Expr_name (Var_name T2))
                               (Expr_name (Var_name E3))
                               (Expr_name (Var_name H3))
                               (Expr_name (Var_name T3))
                               (Expr_name (Var_name M))
                               (Expr_name (Var_name T2))))))))))))
            ((c_lhs
               ((Pattern_binding (Var_name I)) (Pattern_list ())
                 (Pattern_binding (Var_name M)) (Pattern_binding (Var_name _D))
                 (Pattern_binding (Var_name E2))
                 (Pattern_binding (Var_name H2))
                 (Pattern_binding (Var_name T2))
                 (Pattern_binding (Var_name E3))
                 (Pattern_binding (Var_name H3))
                 (Pattern_binding (Var_name T3))))
              (c_guard
                (((Expr_apply
                    ((fa_name
                       (Expr_name
                         (Qualified_name (n_mod (Atom_name (Atom erlang)))
                           (n_name (Atom_name (Atom '=<'))))))
                      (fa_args
                        ((Expr_name (Var_name E2)) (Expr_name (Var_name E3)))))))))
              (c_rhs
                (Expr_apply
                  ((fa_name (Expr_name (Atom_name (Atom keymerge2_1))))
                    (fa_args
                      ((Expr_name (Var_name I)) (Expr_name (Var_name T2))
                        (Expr_name (Var_name E3)) (Expr_name (Var_name H3))
                        (Expr_name (Var_name T3))
                        (Expr_cons ((Expr_name (Var_name H2)))
                          (Expr_name (Var_name M)))))))))
            ((c_lhs
               ((Pattern_binding (Var_name I)) (Pattern_list ())
                 (Pattern_binding (Var_name M)) (Pattern_binding (Var_name _D))
                 (Pattern_binding (Var_name E2))
                 (Pattern_binding (Var_name H2))
                 (Pattern_binding (Var_name T2))
                 (Pattern_binding (Var_name _E3))
                 (Pattern_binding (Var_name H3))
                 (Pattern_binding (Var_name T3))))
              (c_guard ())
              (c_rhs
                (Expr_apply
                  ((fa_name (Expr_name (Atom_name (Atom keymerge2_2))))
                    (fa_args
                      ((Expr_name (Var_name I)) (Expr_name (Var_name T2))
                        (Expr_name (Var_name E2)) (Expr_name (Var_name H3))
                        (Expr_name (Var_name T3)) (Expr_name (Var_name M))
                        (Expr_name (Var_name H2))))))))))
        (fd_spec ())))
    (Module_comment (Comment "% Take L2 apart."))
    (Function_decl
      ((fd_name (Atom keymerge3_2)) (fd_arity 10)
        (fd_cases
          (((c_lhs
              ((Pattern_binding (Var_name I)) (Pattern_binding (Var_name E1))
                (Pattern_binding (Var_name H1)) (Pattern_binding (Var_name T1))
                (Pattern_cons ((Pattern_binding (Var_name H2)))
                  (Pattern_binding (Var_name T2)))
                (Pattern_binding (Var_name M)) (Pattern_binding (Var_name D))
                (Pattern_binding (Var_name E3)) (Pattern_binding (Var_name H3))
                (Pattern_binding (Var_name T3))))
             (c_guard ())
             (c_rhs
               (Expr_case
                 (Expr_apply
                   ((fa_name (Expr_name (Atom_name (Atom element))))
                     (fa_args
                       ((Expr_name (Var_name I)) (Expr_name (Var_name H2))))))
                 (((c_lhs ((Pattern_binding (Var_name E2))))
                    (c_guard
                      (((Expr_apply
                          ((fa_name
                             (Expr_name
                               (Qualified_name
                                 (n_mod (Atom_name (Atom erlang)))
                                 (n_name (Atom_name (Atom '=<'))))))
                            (fa_args
                              ((Expr_name (Var_name E1))
                                (Expr_name (Var_name E2)))))))))
                    (c_rhs
                      (Expr_apply
                        ((fa_name (Expr_name (Atom_name (Atom keymerge3_12))))
                          (fa_args
                            ((Expr_name (Var_name I)) (Expr_name (Var_name E1))
                              (Expr_name (Var_name H1))
                              (Expr_name (Var_name T1))
                              (Expr_name (Var_name E2))
                              (Expr_name (Var_name H2))
                              (Expr_name (Var_name T2))
                              (Expr_name (Var_name E3))
                              (Expr_name (Var_name H3))
                              (Expr_name (Var_name T3))
                              (Expr_name (Var_name M))
                              (Expr_name (Var_name T1))))))))
                   ((c_lhs ((Pattern_binding (Var_name E2)))) (c_guard ())
                     (c_rhs
                       (Expr_apply
                         ((fa_name (Expr_name (Atom_name (Atom keymerge3_21))))
                           (fa_args
                             ((Expr_name (Var_name I))
                               (Expr_name (Var_name E1))
                               (Expr_name (Var_name H1))
                               (Expr_name (Var_name T1))
                               (Expr_name (Var_name E2))
                               (Expr_name (Var_name H2))
                               (Expr_name (Var_name T2))
                               (Expr_name (Var_name E3))
                               (Expr_name (Var_name H3))
                               (Expr_name (Var_name T3))
                               (Expr_name (Var_name M))
                               (Expr_name (Var_name D))))))))))))
            ((c_lhs
               ((Pattern_binding (Var_name I)) (Pattern_binding (Var_name E1))
                 (Pattern_binding (Var_name H1))
                 (Pattern_binding (Var_name T1)) (Pattern_list ())
                 (Pattern_binding (Var_name M)) (Pattern_binding (Var_name _D))
                 (Pattern_binding (Var_name E3))
                 (Pattern_binding (Var_name H3))
                 (Pattern_binding (Var_name T3))))
              (c_guard
                (((Expr_apply
                    ((fa_name
                       (Expr_name
                         (Qualified_name (n_mod (Atom_name (Atom erlang)))
                           (n_name (Atom_name (Atom '=<'))))))
                      (fa_args
                        ((Expr_name (Var_name E1)) (Expr_name (Var_name E3)))))))))
              (c_rhs
                (Expr_apply
                  ((fa_name (Expr_name (Atom_name (Atom keymerge2_1))))
                    (fa_args
                      ((Expr_name (Var_name I)) (Expr_name (Var_name T1))
                        (Expr_name (Var_name E3)) (Expr_name (Var_name H3))
                        (Expr_name (Var_name T3))
                        (Expr_cons ((Expr_name (Var_name H1)))
                          (Expr_name (Var_name M)))))))))
            ((c_lhs
               ((Pattern_binding (Var_name I)) (Pattern_binding (Var_name E1))
                 (Pattern_binding (Var_name H1))
                 (Pattern_binding (Var_name T1)) (Pattern_list ())
                 (Pattern_binding (Var_name M)) (Pattern_binding (Var_name _D))
                 (Pattern_binding (Var_name _E3))
                 (Pattern_binding (Var_name H3))
                 (Pattern_binding (Var_name T3))))
              (c_guard ())
              (c_rhs
                (Expr_apply
                  ((fa_name (Expr_name (Atom_name (Atom keymerge2_2))))
                    (fa_args
                      ((Expr_name (Var_name I)) (Expr_name (Var_name T1))
                        (Expr_name (Var_name E1)) (Expr_name (Var_name H3))
                        (Expr_name (Var_name T3)) (Expr_name (Var_name M))
                        (Expr_name (Var_name H1))))))))))
        (fd_spec ())))
    (Module_comment (Comment " E1 =< E2. Inlined."))
    (Function_decl
      ((fd_name (Atom keymerge3_12)) (fd_arity 12)
        (fd_cases
          (((c_lhs
              ((Pattern_binding (Var_name I)) (Pattern_binding (Var_name E1))
                (Pattern_binding (Var_name H1)) (Pattern_binding (Var_name T1))
                (Pattern_binding (Var_name E2)) (Pattern_binding (Var_name H2))
                (Pattern_binding (Var_name T2)) (Pattern_binding (Var_name E3))
                (Pattern_binding (Var_name H3)) (Pattern_binding (Var_name T3))
                (Pattern_binding (Var_name M)) (Pattern_binding (Var_name D))))
             (c_guard
               (((Expr_apply
                   ((fa_name
                      (Expr_name
                        (Qualified_name (n_mod (Atom_name (Atom erlang)))
                          (n_name (Atom_name (Atom '=<'))))))
                     (fa_args
                       ((Expr_name (Var_name E1)) (Expr_name (Var_name E3)))))))))
             (c_rhs
               (Expr_apply
                 ((fa_name (Expr_name (Atom_name (Atom keymerge3_1))))
                   (fa_args
                     ((Expr_name (Var_name I)) (Expr_name (Var_name T1))
                       (Expr_cons ((Expr_name (Var_name H1)))
                         (Expr_name (Var_name M)))
                       (Expr_name (Var_name D)) (Expr_name (Var_name E2))
                       (Expr_name (Var_name H2)) (Expr_name (Var_name T2))
                       (Expr_name (Var_name E3)) (Expr_name (Var_name H3))
                       (Expr_name (Var_name T3))))))))
            ((c_lhs
               ((Pattern_binding (Var_name I)) (Pattern_binding (Var_name E1))
                 (Pattern_binding (Var_name H1))
                 (Pattern_binding (Var_name T1))
                 (Pattern_binding (Var_name E2))
                 (Pattern_binding (Var_name H2))
                 (Pattern_binding (Var_name T2))
                 (Pattern_binding (Var_name _E3))
                 (Pattern_binding (Var_name H3))
                 (Pattern_binding (Var_name T3)) (Pattern_binding (Var_name M))
                 (Pattern_binding (Var_name _D))))
              (c_guard ())
              (c_rhs
                (Expr_apply
                  ((fa_name (Expr_name (Atom_name (Atom keymerge3_12_3))))
                    (fa_args
                      ((Expr_name (Var_name I)) (Expr_name (Var_name E1))
                        (Expr_name (Var_name H1)) (Expr_name (Var_name T1))
                        (Expr_name (Var_name E2)) (Expr_name (Var_name H2))
                        (Expr_name (Var_name T2)) (Expr_name (Var_name T3))
                        (Expr_cons ((Expr_name (Var_name H3)))
                          (Expr_name (Var_name M)))))))))))
        (fd_spec ())))
    (Module_comment (Comment " E1 =< E2, take L3 apart."))
    (Function_decl
      ((fd_name (Atom keymerge3_12_3)) (fd_arity 9)
        (fd_cases
          (((c_lhs
              ((Pattern_binding (Var_name I)) (Pattern_binding (Var_name E1))
                (Pattern_binding (Var_name H1)) (Pattern_binding (Var_name T1))
                (Pattern_binding (Var_name E2)) (Pattern_binding (Var_name H2))
                (Pattern_binding (Var_name T2))
                (Pattern_cons ((Pattern_binding (Var_name H3)))
                  (Pattern_binding (Var_name T3)))
                (Pattern_binding (Var_name M))))
             (c_guard ())
             (c_rhs
               (Expr_case
                 (Expr_apply
                   ((fa_name (Expr_name (Atom_name (Atom element))))
                     (fa_args
                       ((Expr_name (Var_name I)) (Expr_name (Var_name H3))))))
                 (((c_lhs ((Pattern_binding (Var_name E3))))
                    (c_guard
                      (((Expr_apply
                          ((fa_name
                             (Expr_name
                               (Qualified_name
                                 (n_mod (Atom_name (Atom erlang)))
                                 (n_name (Atom_name (Atom '=<'))))))
                            (fa_args
                              ((Expr_name (Var_name E1))
                                (Expr_name (Var_name E3)))))))))
                    (c_rhs
                      (Expr_apply
                        ((fa_name (Expr_name (Atom_name (Atom keymerge3_1))))
                          (fa_args
                            ((Expr_name (Var_name I)) (Expr_name (Var_name T1))
                              (Expr_cons ((Expr_name (Var_name H1)))
                                (Expr_name (Var_name M)))
                              (Expr_name (Var_name T1))
                              (Expr_name (Var_name E2))
                              (Expr_name (Var_name H2))
                              (Expr_name (Var_name T2))
                              (Expr_name (Var_name E3))
                              (Expr_name (Var_name H3))
                              (Expr_name (Var_name T3))))))))
                   ((c_lhs ((Pattern_binding (Var_name _E3)))) (c_guard ())
                     (c_rhs
                       (Expr_apply
                         ((fa_name
                            (Expr_name (Atom_name (Atom keymerge3_12_3))))
                           (fa_args
                             ((Expr_name (Var_name I))
                               (Expr_name (Var_name E1))
                               (Expr_name (Var_name H1))
                               (Expr_name (Var_name T1))
                               (Expr_name (Var_name E2))
                               (Expr_name (Var_name H2))
                               (Expr_name (Var_name T2))
                               (Expr_name (Var_name T3))
                               (Expr_cons ((Expr_name (Var_name H3)))
                                 (Expr_name (Var_name M)))))))))))))
            ((c_lhs
               ((Pattern_binding (Var_name I)) (Pattern_binding (Var_name _E1))
                 (Pattern_binding (Var_name H1))
                 (Pattern_binding (Var_name T1))
                 (Pattern_binding (Var_name E2))
                 (Pattern_binding (Var_name H2))
                 (Pattern_binding (Var_name T2)) (Pattern_list ())
                 (Pattern_binding (Var_name M))))
              (c_guard ())
              (c_rhs
                (Expr_apply
                  ((fa_name (Expr_name (Atom_name (Atom keymerge2_1))))
                    (fa_args
                      ((Expr_name (Var_name I)) (Expr_name (Var_name T1))
                        (Expr_name (Var_name E2)) (Expr_name (Var_name H2))
                        (Expr_name (Var_name T2))
                        (Expr_cons ((Expr_name (Var_name H1)))
                          (Expr_name (Var_name M)))))))))))
        (fd_spec ())))
    (Module_comment (Comment " E1 > E2. Inlined."))
    (Function_decl
      ((fd_name (Atom keymerge3_21)) (fd_arity 12)
        (fd_cases
          (((c_lhs
              ((Pattern_binding (Var_name I)) (Pattern_binding (Var_name E1))
                (Pattern_binding (Var_name H1)) (Pattern_binding (Var_name T1))
                (Pattern_binding (Var_name E2)) (Pattern_binding (Var_name H2))
                (Pattern_binding (Var_name T2)) (Pattern_binding (Var_name E3))
                (Pattern_binding (Var_name H3)) (Pattern_binding (Var_name T3))
                (Pattern_binding (Var_name M)) (Pattern_binding (Var_name D))))
             (c_guard
               (((Expr_apply
                   ((fa_name
                      (Expr_name
                        (Qualified_name (n_mod (Atom_name (Atom erlang)))
                          (n_name (Atom_name (Atom '=<'))))))
                     (fa_args
                       ((Expr_name (Var_name E2)) (Expr_name (Var_name E3)))))))))
             (c_rhs
               (Expr_apply
                 ((fa_name (Expr_name (Atom_name (Atom keymerge3_2))))
                   (fa_args
                     ((Expr_name (Var_name I)) (Expr_name (Var_name E1))
                       (Expr_name (Var_name H1)) (Expr_name (Var_name T1))
                       (Expr_name (Var_name T2))
                       (Expr_cons ((Expr_name (Var_name H2)))
                         (Expr_name (Var_name M)))
                       (Expr_name (Var_name D)) (Expr_name (Var_name E3))
                       (Expr_name (Var_name H3)) (Expr_name (Var_name T3))))))))
            ((c_lhs
               ((Pattern_binding (Var_name I)) (Pattern_binding (Var_name E1))
                 (Pattern_binding (Var_name H1))
                 (Pattern_binding (Var_name T1))
                 (Pattern_binding (Var_name E2))
                 (Pattern_binding (Var_name H2))
                 (Pattern_binding (Var_name T2))
                 (Pattern_binding (Var_name _E3))
                 (Pattern_binding (Var_name H3))
                 (Pattern_binding (Var_name T3)) (Pattern_binding (Var_name M))
                 (Pattern_binding (Var_name _D))))
              (c_guard ())
              (c_rhs
                (Expr_apply
                  ((fa_name (Expr_name (Atom_name (Atom keymerge3_21_3))))
                    (fa_args
                      ((Expr_name (Var_name I)) (Expr_name (Var_name E1))
                        (Expr_name (Var_name H1)) (Expr_name (Var_name T1))
                        (Expr_name (Var_name E2)) (Expr_name (Var_name H2))
                        (Expr_name (Var_name T2)) (Expr_name (Var_name T3))
                        (Expr_cons ((Expr_name (Var_name H3)))
                          (Expr_name (Var_name M)))))))))))
        (fd_spec ())))
    (Module_comment (Comment " E1 > E2, take L3 apart."))
    (Function_decl
      ((fd_name (Atom keymerge3_21_3)) (fd_arity 9)
        (fd_cases
          (((c_lhs
              ((Pattern_binding (Var_name I)) (Pattern_binding (Var_name E1))
                (Pattern_binding (Var_name H1)) (Pattern_binding (Var_name T1))
                (Pattern_binding (Var_name E2)) (Pattern_binding (Var_name H2))
                (Pattern_binding (Var_name T2))
                (Pattern_cons ((Pattern_binding (Var_name H3)))
                  (Pattern_binding (Var_name T3)))
                (Pattern_binding (Var_name M))))
             (c_guard ())
             (c_rhs
               (Expr_case
                 (Expr_apply
                   ((fa_name (Expr_name (Atom_name (Atom element))))
                     (fa_args
                       ((Expr_name (Var_name I)) (Expr_name (Var_name H3))))))
                 (((c_lhs ((Pattern_binding (Var_name E3))))
                    (c_guard
                      (((Expr_apply
                          ((fa_name
                             (Expr_name
                               (Qualified_name
                                 (n_mod (Atom_name (Atom erlang)))
                                 (n_name (Atom_name (Atom '=<'))))))
                            (fa_args
                              ((Expr_name (Var_name E2))
                                (Expr_name (Var_name E3)))))))))
                    (c_rhs
                      (Expr_apply
                        ((fa_name (Expr_name (Atom_name (Atom keymerge3_2))))
                          (fa_args
                            ((Expr_name (Var_name I)) (Expr_name (Var_name E1))
                              (Expr_name (Var_name H1))
                              (Expr_name (Var_name T1))
                              (Expr_name (Var_name T2))
                              (Expr_cons ((Expr_name (Var_name H2)))
                                (Expr_name (Var_name M)))
                              (Expr_name (Var_name T2))
                              (Expr_name (Var_name E3))
                              (Expr_name (Var_name H3))
                              (Expr_name (Var_name T3))))))))
                   ((c_lhs ((Pattern_binding (Var_name _E3)))) (c_guard ())
                     (c_rhs
                       (Expr_apply
                         ((fa_name
                            (Expr_name (Atom_name (Atom keymerge3_21_3))))
                           (fa_args
                             ((Expr_name (Var_name I))
                               (Expr_name (Var_name E1))
                               (Expr_name (Var_name H1))
                               (Expr_name (Var_name T1))
                               (Expr_name (Var_name E2))
                               (Expr_name (Var_name H2))
                               (Expr_name (Var_name T2))
                               (Expr_name (Var_name T3))
                               (Expr_cons ((Expr_name (Var_name H3)))
                                 (Expr_name (Var_name M)))))))))))))
            ((c_lhs
               ((Pattern_binding (Var_name I)) (Pattern_binding (Var_name E1))
                 (Pattern_binding (Var_name H1))
                 (Pattern_binding (Var_name T1))
                 (Pattern_binding (Var_name _E2))
                 (Pattern_binding (Var_name H2))
                 (Pattern_binding (Var_name T2)) (Pattern_list ())
                 (Pattern_binding (Var_name M))))
              (c_guard ())
              (c_rhs
                (Expr_apply
                  ((fa_name (Expr_name (Atom_name (Atom keymerge2_2))))
                    (fa_args
                      ((Expr_name (Var_name I)) (Expr_name (Var_name T1))
                        (Expr_name (Var_name E1)) (Expr_name (Var_name H2))
                        (Expr_name (Var_name T2)) (Expr_name (Var_name M))
                        (Expr_name (Var_name H1))))))))))
        (fd_spec ())))
    (Module_comment (Comment "% Take L1 apart."))
    (Function_decl
      ((fd_name (Atom rkeymerge3_1)) (fd_arity 10)
        (fd_cases
          (((c_lhs
              ((Pattern_binding (Var_name I))
                (Pattern_cons ((Pattern_binding (Var_name H1)))
                  (Pattern_binding (Var_name T1)))
                (Pattern_binding (Var_name M)) (Pattern_binding (Var_name D))
                (Pattern_binding (Var_name E2)) (Pattern_binding (Var_name H2))
                (Pattern_binding (Var_name T2)) (Pattern_binding (Var_name E3))
                (Pattern_binding (Var_name H3))
                (Pattern_binding (Var_name T3))))
             (c_guard ())
             (c_rhs
               (Expr_case
                 (Expr_apply
                   ((fa_name (Expr_name (Atom_name (Atom element))))
                     (fa_args
                       ((Expr_name (Var_name I)) (Expr_name (Var_name H1))))))
                 (((c_lhs ((Pattern_binding (Var_name E1))))
                    (c_guard
                      (((Expr_apply
                          ((fa_name
                             (Expr_name
                               (Qualified_name
                                 (n_mod (Atom_name (Atom erlang)))
                                 (n_name (Atom_name (Atom '=<'))))))
                            (fa_args
                              ((Expr_name (Var_name E1))
                                (Expr_name (Var_name E2)))))))))
                    (c_rhs
                      (Expr_apply
                        ((fa_name (Expr_name (Atom_name (Atom rkeymerge3_12))))
                          (fa_args
                            ((Expr_name (Var_name I)) (Expr_name (Var_name E1))
                              (Expr_name (Var_name H1))
                              (Expr_name (Var_name T1))
                              (Expr_name (Var_name E2))
                              (Expr_name (Var_name H2))
                              (Expr_name (Var_name T2))
                              (Expr_name (Var_name E3))
                              (Expr_name (Var_name H3))
                              (Expr_name (Var_name T3))
                              (Expr_name (Var_name M))
                              (Expr_name (Var_name T2))))))))
                   ((c_lhs ((Pattern_binding (Var_name E1)))) (c_guard ())
                     (c_rhs
                       (Expr_apply
                         ((fa_name
                            (Expr_name (Atom_name (Atom rkeymerge3_21))))
                           (fa_args
                             ((Expr_name (Var_name I))
                               (Expr_name (Var_name E1))
                               (Expr_name (Var_name H1))
                               (Expr_name (Var_name T1))
                               (Expr_name (Var_name E2))
                               (Expr_name (Var_name H2))
                               (Expr_name (Var_name T2))
                               (Expr_name (Var_name E3))
                               (Expr_name (Var_name H3))
                               (Expr_name (Var_name T3))
                               (Expr_name (Var_name M))
                               (Expr_name (Var_name D))))))))))))
            ((c_lhs
               ((Pattern_binding (Var_name I)) (Pattern_list ())
                 (Pattern_binding (Var_name M)) (Pattern_binding (Var_name _D))
                 (Pattern_binding (Var_name E2))
                 (Pattern_binding (Var_name H2))
                 (Pattern_binding (Var_name T2))
                 (Pattern_binding (Var_name E3))
                 (Pattern_binding (Var_name H3))
                 (Pattern_binding (Var_name T3))))
              (c_guard
                (((Expr_apply
                    ((fa_name
                       (Expr_name
                         (Qualified_name (n_mod (Atom_name (Atom erlang)))
                           (n_name (Atom_name (Atom '=<'))))))
                      (fa_args
                        ((Expr_name (Var_name E2)) (Expr_name (Var_name E3)))))))))
              (c_rhs
                (Expr_apply
                  ((fa_name (Expr_name (Atom_name (Atom rkeymerge2_2))))
                    (fa_args
                      ((Expr_name (Var_name I)) (Expr_name (Var_name E2))
                        (Expr_name (Var_name T2)) (Expr_name (Var_name H3))
                        (Expr_name (Var_name T3)) (Expr_name (Var_name M))
                        (Expr_name (Var_name H2))))))))
            ((c_lhs
               ((Pattern_binding (Var_name I)) (Pattern_list ())
                 (Pattern_binding (Var_name M)) (Pattern_binding (Var_name _D))
                 (Pattern_binding (Var_name _E2))
                 (Pattern_binding (Var_name H2))
                 (Pattern_binding (Var_name T2))
                 (Pattern_binding (Var_name E3))
                 (Pattern_binding (Var_name H3))
                 (Pattern_binding (Var_name T3))))
              (c_guard ())
              (c_rhs
                (Expr_apply
                  ((fa_name (Expr_name (Atom_name (Atom rkeymerge2_1))))
                    (fa_args
                      ((Expr_name (Var_name I)) (Expr_name (Var_name T2))
                        (Expr_name (Var_name E3)) (Expr_name (Var_name H3))
                        (Expr_name (Var_name T3))
                        (Expr_cons ((Expr_name (Var_name H2)))
                          (Expr_name (Var_name M)))))))))))
        (fd_spec ())))
    (Module_comment (Comment "% Take L2 apart."))
    (Function_decl
      ((fd_name (Atom rkeymerge3_2)) (fd_arity 10)
        (fd_cases
          (((c_lhs
              ((Pattern_binding (Var_name I)) (Pattern_binding (Var_name E1))
                (Pattern_binding (Var_name H1)) (Pattern_binding (Var_name T1))
                (Pattern_cons ((Pattern_binding (Var_name H2)))
                  (Pattern_binding (Var_name T2)))
                (Pattern_binding (Var_name M)) (Pattern_binding (Var_name D))
                (Pattern_binding (Var_name E3)) (Pattern_binding (Var_name H3))
                (Pattern_binding (Var_name T3))))
             (c_guard ())
             (c_rhs
               (Expr_case
                 (Expr_apply
                   ((fa_name (Expr_name (Atom_name (Atom element))))
                     (fa_args
                       ((Expr_name (Var_name I)) (Expr_name (Var_name H2))))))
                 (((c_lhs ((Pattern_binding (Var_name E2))))
                    (c_guard
                      (((Expr_apply
                          ((fa_name
                             (Expr_name
                               (Qualified_name
                                 (n_mod (Atom_name (Atom erlang)))
                                 (n_name (Atom_name (Atom '=<'))))))
                            (fa_args
                              ((Expr_name (Var_name E1))
                                (Expr_name (Var_name E2)))))))))
                    (c_rhs
                      (Expr_apply
                        ((fa_name (Expr_name (Atom_name (Atom rkeymerge3_12))))
                          (fa_args
                            ((Expr_name (Var_name I)) (Expr_name (Var_name E1))
                              (Expr_name (Var_name H1))
                              (Expr_name (Var_name T1))
                              (Expr_name (Var_name E2))
                              (Expr_name (Var_name H2))
                              (Expr_name (Var_name T2))
                              (Expr_name (Var_name E3))
                              (Expr_name (Var_name H3))
                              (Expr_name (Var_name T3))
                              (Expr_name (Var_name M))
                              (Expr_name (Var_name D))))))))
                   ((c_lhs ((Pattern_binding (Var_name E2)))) (c_guard ())
                     (c_rhs
                       (Expr_apply
                         ((fa_name
                            (Expr_name (Atom_name (Atom rkeymerge3_21))))
                           (fa_args
                             ((Expr_name (Var_name I))
                               (Expr_name (Var_name E1))
                               (Expr_name (Var_name H1))
                               (Expr_name (Var_name T1))
                               (Expr_name (Var_name E2))
                               (Expr_name (Var_name H2))
                               (Expr_name (Var_name T2))
                               (Expr_name (Var_name E3))
                               (Expr_name (Var_name H3))
                               (Expr_name (Var_name T3))
                               (Expr_name (Var_name M))
                               (Expr_name (Var_name T1))))))))))))
            ((c_lhs
               ((Pattern_binding (Var_name I)) (Pattern_binding (Var_name E1))
                 (Pattern_binding (Var_name H1))
                 (Pattern_binding (Var_name T1)) (Pattern_list ())
                 (Pattern_binding (Var_name M)) (Pattern_binding (Var_name _D))
                 (Pattern_binding (Var_name E3))
                 (Pattern_binding (Var_name H3))
                 (Pattern_binding (Var_name T3))))
              (c_guard
                (((Expr_apply
                    ((fa_name
                       (Expr_name
                         (Qualified_name (n_mod (Atom_name (Atom erlang)))
                           (n_name (Atom_name (Atom '=<'))))))
                      (fa_args
                        ((Expr_name (Var_name E1)) (Expr_name (Var_name E3)))))))))
              (c_rhs
                (Expr_apply
                  ((fa_name (Expr_name (Atom_name (Atom rkeymerge2_2))))
                    (fa_args
                      ((Expr_name (Var_name I)) (Expr_name (Var_name E1))
                        (Expr_name (Var_name T1)) (Expr_name (Var_name H3))
                        (Expr_name (Var_name T3)) (Expr_name (Var_name M))
                        (Expr_name (Var_name H1))))))))
            ((c_lhs
               ((Pattern_binding (Var_name I)) (Pattern_binding (Var_name _E1))
                 (Pattern_binding (Var_name H1))
                 (Pattern_binding (Var_name T1)) (Pattern_list ())
                 (Pattern_binding (Var_name M)) (Pattern_binding (Var_name _D))
                 (Pattern_binding (Var_name E3))
                 (Pattern_binding (Var_name H3))
                 (Pattern_binding (Var_name T3))))
              (c_guard ())
              (c_rhs
                (Expr_apply
                  ((fa_name (Expr_name (Atom_name (Atom rkeymerge2_1))))
                    (fa_args
                      ((Expr_name (Var_name I)) (Expr_name (Var_name T1))
                        (Expr_name (Var_name E3)) (Expr_name (Var_name H3))
                        (Expr_name (Var_name T3))
                        (Expr_cons ((Expr_name (Var_name H1)))
                          (Expr_name (Var_name M)))))))))))
        (fd_spec ())))
    (Module_comment (Comment " E1 =< E2. Inlined."))
    (Function_decl
      ((fd_name (Atom rkeymerge3_12)) (fd_arity 12)
        (fd_cases
          (((c_lhs
              ((Pattern_binding (Var_name I)) (Pattern_binding (Var_name E1))
                (Pattern_binding (Var_name H1)) (Pattern_binding (Var_name T1))
                (Pattern_binding (Var_name E2)) (Pattern_binding (Var_name H2))
                (Pattern_binding (Var_name T2)) (Pattern_binding (Var_name E3))
                (Pattern_binding (Var_name H3)) (Pattern_binding (Var_name T3))
                (Pattern_binding (Var_name M)) (Pattern_binding (Var_name _D))))
             (c_guard
               (((Expr_apply
                   ((fa_name
                      (Expr_name
                        (Qualified_name (n_mod (Atom_name (Atom erlang)))
                          (n_name (Atom_name (Atom '=<'))))))
                     (fa_args
                       ((Expr_name (Var_name E2)) (Expr_name (Var_name E3)))))))))
             (c_rhs
               (Expr_apply
                 ((fa_name (Expr_name (Atom_name (Atom rkeymerge3_12_3))))
                   (fa_args
                     ((Expr_name (Var_name I)) (Expr_name (Var_name E1))
                       (Expr_name (Var_name H1)) (Expr_name (Var_name T1))
                       (Expr_name (Var_name E2)) (Expr_name (Var_name H2))
                       (Expr_name (Var_name T2)) (Expr_name (Var_name T3))
                       (Expr_cons ((Expr_name (Var_name H3)))
                         (Expr_name (Var_name M)))))))))
            ((c_lhs
               ((Pattern_binding (Var_name I)) (Pattern_binding (Var_name E1))
                 (Pattern_binding (Var_name H1))
                 (Pattern_binding (Var_name T1))
                 (Pattern_binding (Var_name _E2))
                 (Pattern_binding (Var_name H2))
                 (Pattern_binding (Var_name T2))
                 (Pattern_binding (Var_name E3))
                 (Pattern_binding (Var_name H3))
                 (Pattern_binding (Var_name T3)) (Pattern_binding (Var_name M))
                 (Pattern_binding (Var_name D))))
              (c_guard ())
              (c_rhs
                (Expr_apply
                  ((fa_name (Expr_name (Atom_name (Atom rkeymerge3_2))))
                    (fa_args
                      ((Expr_name (Var_name I)) (Expr_name (Var_name E1))
                        (Expr_name (Var_name H1)) (Expr_name (Var_name T1))
                        (Expr_name (Var_name T2))
                        (Expr_cons ((Expr_name (Var_name H2)))
                          (Expr_name (Var_name M)))
                        (Expr_name (Var_name D)) (Expr_name (Var_name E3))
                        (Expr_name (Var_name H3)) (Expr_name (Var_name T3))))))))))
        (fd_spec ())))
    (Module_comment (Comment " E1 =< E2, take L3 apart."))
    (Function_decl
      ((fd_name (Atom rkeymerge3_12_3)) (fd_arity 9)
        (fd_cases
          (((c_lhs
              ((Pattern_binding (Var_name I)) (Pattern_binding (Var_name E1))
                (Pattern_binding (Var_name H1)) (Pattern_binding (Var_name T1))
                (Pattern_binding (Var_name E2)) (Pattern_binding (Var_name H2))
                (Pattern_binding (Var_name T2))
                (Pattern_cons ((Pattern_binding (Var_name H3)))
                  (Pattern_binding (Var_name T3)))
                (Pattern_binding (Var_name M))))
             (c_guard ())
             (c_rhs
               (Expr_case
                 (Expr_apply
                   ((fa_name (Expr_name (Atom_name (Atom element))))
                     (fa_args
                       ((Expr_name (Var_name I)) (Expr_name (Var_name H3))))))
                 (((c_lhs ((Pattern_binding (Var_name E3))))
                    (c_guard
                      (((Expr_apply
                          ((fa_name
                             (Expr_name
                               (Qualified_name
                                 (n_mod (Atom_name (Atom erlang)))
                                 (n_name (Atom_name (Atom '=<'))))))
                            (fa_args
                              ((Expr_name (Var_name E2))
                                (Expr_name (Var_name E3)))))))))
                    (c_rhs
                      (Expr_apply
                        ((fa_name
                           (Expr_name (Atom_name (Atom rkeymerge3_12_3))))
                          (fa_args
                            ((Expr_name (Var_name I)) (Expr_name (Var_name E1))
                              (Expr_name (Var_name H1))
                              (Expr_name (Var_name T1))
                              (Expr_name (Var_name E2))
                              (Expr_name (Var_name H2))
                              (Expr_name (Var_name T2))
                              (Expr_name (Var_name T3))
                              (Expr_cons ((Expr_name (Var_name H3)))
                                (Expr_name (Var_name M)))))))))
                   ((c_lhs ((Pattern_binding (Var_name E3)))) (c_guard ())
                     (c_rhs
                       (Expr_apply
                         ((fa_name (Expr_name (Atom_name (Atom rkeymerge3_2))))
                           (fa_args
                             ((Expr_name (Var_name I))
                               (Expr_name (Var_name E1))
                               (Expr_name (Var_name H1))
                               (Expr_name (Var_name T1))
                               (Expr_name (Var_name T2))
                               (Expr_cons ((Expr_name (Var_name H2)))
                                 (Expr_name (Var_name M)))
                               (Expr_name (Var_name T2))
                               (Expr_name (Var_name E3))
                               (Expr_name (Var_name H3))
                               (Expr_name (Var_name T3))))))))))))
            ((c_lhs
               ((Pattern_binding (Var_name I)) (Pattern_binding (Var_name E1))
                 (Pattern_binding (Var_name H1))
                 (Pattern_binding (Var_name T1))
                 (Pattern_binding (Var_name _E2))
                 (Pattern_binding (Var_name H2))
                 (Pattern_binding (Var_name T2)) (Pattern_list ())
                 (Pattern_binding (Var_name M))))
              (c_guard ())
              (c_rhs
                (Expr_apply
                  ((fa_name (Expr_name (Atom_name (Atom rkeymerge2_2))))
                    (fa_args
                      ((Expr_name (Var_name I)) (Expr_name (Var_name E1))
                        (Expr_name (Var_name T1)) (Expr_name (Var_name H2))
                        (Expr_name (Var_name T2)) (Expr_name (Var_name M))
                        (Expr_name (Var_name H1))))))))))
        (fd_spec ())))
    (Module_comment (Comment " E1 > E2. Inlined."))
    (Function_decl
      ((fd_name (Atom rkeymerge3_21)) (fd_arity 12)
        (fd_cases
          (((c_lhs
              ((Pattern_binding (Var_name I)) (Pattern_binding (Var_name E1))
                (Pattern_binding (Var_name H1)) (Pattern_binding (Var_name T1))
                (Pattern_binding (Var_name E2)) (Pattern_binding (Var_name H2))
                (Pattern_binding (Var_name T2)) (Pattern_binding (Var_name E3))
                (Pattern_binding (Var_name H3)) (Pattern_binding (Var_name T3))
                (Pattern_binding (Var_name M)) (Pattern_binding (Var_name _D))))
             (c_guard
               (((Expr_apply
                   ((fa_name
                      (Expr_name
                        (Qualified_name (n_mod (Atom_name (Atom erlang)))
                          (n_name (Atom_name (Atom '=<'))))))
                     (fa_args
                       ((Expr_name (Var_name E1)) (Expr_name (Var_name E3)))))))))
             (c_rhs
               (Expr_apply
                 ((fa_name (Expr_name (Atom_name (Atom rkeymerge3_21_3))))
                   (fa_args
                     ((Expr_name (Var_name I)) (Expr_name (Var_name E1))
                       (Expr_name (Var_name H1)) (Expr_name (Var_name T1))
                       (Expr_name (Var_name E2)) (Expr_name (Var_name H2))
                       (Expr_name (Var_name T2)) (Expr_name (Var_name T3))
                       (Expr_cons ((Expr_name (Var_name H3)))
                         (Expr_name (Var_name M)))))))))
            ((c_lhs
               ((Pattern_binding (Var_name I)) (Pattern_binding (Var_name _E1))
                 (Pattern_binding (Var_name H1))
                 (Pattern_binding (Var_name T1))
                 (Pattern_binding (Var_name E2))
                 (Pattern_binding (Var_name H2))
                 (Pattern_binding (Var_name T2))
                 (Pattern_binding (Var_name E3))
                 (Pattern_binding (Var_name H3))
                 (Pattern_binding (Var_name T3)) (Pattern_binding (Var_name M))
                 (Pattern_binding (Var_name D))))
              (c_guard ())
              (c_rhs
                (Expr_apply
                  ((fa_name (Expr_name (Atom_name (Atom rkeymerge3_1))))
                    (fa_args
                      ((Expr_name (Var_name I)) (Expr_name (Var_name T1))
                        (Expr_cons ((Expr_name (Var_name H1)))
                          (Expr_name (Var_name M)))
                        (Expr_name (Var_name D)) (Expr_name (Var_name E2))
                        (Expr_name (Var_name H2)) (Expr_name (Var_name T2))
                        (Expr_name (Var_name E3)) (Expr_name (Var_name H3))
                        (Expr_name (Var_name T3))))))))))
        (fd_spec ())))
    (Module_comment (Comment " E1 > E2, take L3 apart."))
    (Function_decl
      ((fd_name (Atom rkeymerge3_21_3)) (fd_arity 9)
        (fd_cases
          (((c_lhs
              ((Pattern_binding (Var_name I)) (Pattern_binding (Var_name E1))
                (Pattern_binding (Var_name H1)) (Pattern_binding (Var_name T1))
                (Pattern_binding (Var_name E2)) (Pattern_binding (Var_name H2))
                (Pattern_binding (Var_name T2))
                (Pattern_cons ((Pattern_binding (Var_name H3)))
                  (Pattern_binding (Var_name T3)))
                (Pattern_binding (Var_name M))))
             (c_guard ())
             (c_rhs
               (Expr_case
                 (Expr_apply
                   ((fa_name (Expr_name (Atom_name (Atom element))))
                     (fa_args
                       ((Expr_name (Var_name I)) (Expr_name (Var_name H3))))))
                 (((c_lhs ((Pattern_binding (Var_name E3))))
                    (c_guard
                      (((Expr_apply
                          ((fa_name
                             (Expr_name
                               (Qualified_name
                                 (n_mod (Atom_name (Atom erlang)))
                                 (n_name (Atom_name (Atom '=<'))))))
                            (fa_args
                              ((Expr_name (Var_name E1))
                                (Expr_name (Var_name E3)))))))))
                    (c_rhs
                      (Expr_apply
                        ((fa_name
                           (Expr_name (Atom_name (Atom rkeymerge3_21_3))))
                          (fa_args
                            ((Expr_name (Var_name I)) (Expr_name (Var_name E1))
                              (Expr_name (Var_name H1))
                              (Expr_name (Var_name T1))
                              (Expr_name (Var_name E2))
                              (Expr_name (Var_name H2))
                              (Expr_name (Var_name T2))
                              (Expr_name (Var_name T3))
                              (Expr_cons ((Expr_name (Var_name H3)))
                                (Expr_name (Var_name M)))))))))
                   ((c_lhs ((Pattern_binding (Var_name E3)))) (c_guard ())
                     (c_rhs
                       (Expr_apply
                         ((fa_name (Expr_name (Atom_name (Atom rkeymerge3_1))))
                           (fa_args
                             ((Expr_name (Var_name I))
                               (Expr_name (Var_name T1))
                               (Expr_cons ((Expr_name (Var_name H1)))
                                 (Expr_name (Var_name M)))
                               (Expr_name (Var_name T1))
                               (Expr_name (Var_name E2))
                               (Expr_name (Var_name H2))
                               (Expr_name (Var_name T2))
                               (Expr_name (Var_name E3))
                               (Expr_name (Var_name H3))
                               (Expr_name (Var_name T3))))))))))))
            ((c_lhs
               ((Pattern_binding (Var_name I)) (Pattern_binding (Var_name _E1))
                 (Pattern_binding (Var_name H1))
                 (Pattern_binding (Var_name T1))
                 (Pattern_binding (Var_name E2))
                 (Pattern_binding (Var_name H2))
                 (Pattern_binding (Var_name T2)) (Pattern_list ())
                 (Pattern_binding (Var_name M))))
              (c_guard ())
              (c_rhs
                (Expr_apply
                  ((fa_name (Expr_name (Atom_name (Atom rkeymerge2_1))))
                    (fa_args
                      ((Expr_name (Var_name I)) (Expr_name (Var_name T1))
                        (Expr_name (Var_name E2)) (Expr_name (Var_name H2))
                        (Expr_name (Var_name T2))
                        (Expr_cons ((Expr_name (Var_name H1)))
                          (Expr_name (Var_name M)))))))))))
        (fd_spec ())))
    (Module_comment (Comment "% keymerge/3"))
    (Module_comment
      (Comment "% Elements from the first list are prioritized."))
    (Function_decl
      ((fd_name (Atom keymerge2_1)) (fd_arity 6)
        (fd_cases
          (((c_lhs
              ((Pattern_binding (Var_name I))
                (Pattern_cons ((Pattern_binding (Var_name H1)))
                  (Pattern_binding (Var_name T1)))
                (Pattern_binding (Var_name E2)) (Pattern_binding (Var_name H2))
                (Pattern_binding (Var_name T2)) (Pattern_binding (Var_name M))))
             (c_guard ())
             (c_rhs
               (Expr_case
                 (Expr_apply
                   ((fa_name (Expr_name (Atom_name (Atom element))))
                     (fa_args
                       ((Expr_name (Var_name I)) (Expr_name (Var_name H1))))))
                 (((c_lhs ((Pattern_binding (Var_name E1))))
                    (c_guard
                      (((Expr_apply
                          ((fa_name
                             (Expr_name
                               (Qualified_name
                                 (n_mod (Atom_name (Atom erlang)))
                                 (n_name (Atom_name (Atom '=<'))))))
                            (fa_args
                              ((Expr_name (Var_name E1))
                                (Expr_name (Var_name E2)))))))))
                    (c_rhs
                      (Expr_apply
                        ((fa_name (Expr_name (Atom_name (Atom keymerge2_1))))
                          (fa_args
                            ((Expr_name (Var_name I)) (Expr_name (Var_name T1))
                              (Expr_name (Var_name E2))
                              (Expr_name (Var_name H2))
                              (Expr_name (Var_name T2))
                              (Expr_cons ((Expr_name (Var_name H1)))
                                (Expr_name (Var_name M)))))))))
                   ((c_lhs ((Pattern_binding (Var_name E1)))) (c_guard ())
                     (c_rhs
                       (Expr_apply
                         ((fa_name (Expr_name (Atom_name (Atom keymerge2_2))))
                           (fa_args
                             ((Expr_name (Var_name I))
                               (Expr_name (Var_name T1))
                               (Expr_name (Var_name E1))
                               (Expr_name (Var_name H2))
                               (Expr_name (Var_name T2))
                               (Expr_name (Var_name M))
                               (Expr_name (Var_name H1))))))))))))
            ((c_lhs
               ((Pattern_binding (Var_name _I)) (Pattern_list ())
                 (Pattern_binding (Var_name _E2))
                 (Pattern_binding (Var_name H2))
                 (Pattern_binding (Var_name T2))
                 (Pattern_binding (Var_name M))))
              (c_guard ())
              (c_rhs
                (Expr_apply
                  ((fa_name
                     (Expr_name
                       (Qualified_name (n_mod (Atom_name (Atom lists)))
                         (n_name (Atom_name (Atom reverse))))))
                    (fa_args
                      ((Expr_name (Var_name T2))
                        (Expr_cons ((Expr_name (Var_name H2)))
                          (Expr_name (Var_name M)))))))))))
        (fd_spec ())))
    (Function_decl
      ((fd_name (Atom keymerge2_2)) (fd_arity 7)
        (fd_cases
          (((c_lhs
              ((Pattern_binding (Var_name I)) (Pattern_binding (Var_name T1))
                (Pattern_binding (Var_name E1))
                (Pattern_binding (Var_name HdM))
                (Pattern_cons ((Pattern_binding (Var_name H2)))
                  (Pattern_binding (Var_name T2)))
                (Pattern_binding (Var_name M)) (Pattern_binding (Var_name H1))))
             (c_guard ())
             (c_rhs
               (Expr_case
                 (Expr_apply
                   ((fa_name (Expr_name (Atom_name (Atom element))))
                     (fa_args
                       ((Expr_name (Var_name I)) (Expr_name (Var_name H2))))))
                 (((c_lhs ((Pattern_binding (Var_name E2))))
                    (c_guard
                      (((Expr_apply
                          ((fa_name
                             (Expr_name
                               (Qualified_name
                                 (n_mod (Atom_name (Atom erlang)))
                                 (n_name (Atom_name (Atom '=<'))))))
                            (fa_args
                              ((Expr_name (Var_name E1))
                                (Expr_name (Var_name E2)))))))))
                    (c_rhs
                      (Expr_apply
                        ((fa_name (Expr_name (Atom_name (Atom keymerge2_1))))
                          (fa_args
                            ((Expr_name (Var_name I)) (Expr_name (Var_name T1))
                              (Expr_name (Var_name E2))
                              (Expr_name (Var_name H2))
                              (Expr_name (Var_name T2))
                              (Expr_cons
                                ((Expr_name (Var_name H1))
                                  (Expr_name (Var_name HdM)))
                                (Expr_name (Var_name M)))))))))
                   ((c_lhs ((Pattern_binding (Var_name _E2)))) (c_guard ())
                     (c_rhs
                       (Expr_apply
                         ((fa_name (Expr_name (Atom_name (Atom keymerge2_2))))
                           (fa_args
                             ((Expr_name (Var_name I))
                               (Expr_name (Var_name T1))
                               (Expr_name (Var_name E1))
                               (Expr_name (Var_name H2))
                               (Expr_name (Var_name T2))
                               (Expr_cons ((Expr_name (Var_name HdM)))
                                 (Expr_name (Var_name M)))
                               (Expr_name (Var_name H1))))))))))))
            ((c_lhs
               ((Pattern_binding (Var_name _I)) (Pattern_binding (Var_name T1))
                 (Pattern_binding (Var_name _E1))
                 (Pattern_binding (Var_name HdM)) (Pattern_list ())
                 (Pattern_binding (Var_name M))
                 (Pattern_binding (Var_name H1))))
              (c_guard ())
              (c_rhs
                (Expr_apply
                  ((fa_name
                     (Expr_name
                       (Qualified_name (n_mod (Atom_name (Atom lists)))
                         (n_name (Atom_name (Atom reverse))))))
                    (fa_args
                      ((Expr_name (Var_name T1))
                        (Expr_cons
                          ((Expr_name (Var_name H1))
                            (Expr_name (Var_name HdM)))
                          (Expr_name (Var_name M)))))))))))
        (fd_spec ())))
    (Module_comment (Comment "% rkeymerge/3"))
    (Function_decl
      ((fd_name (Atom rkeymerge2_1)) (fd_arity 6)
        (fd_cases
          (((c_lhs
              ((Pattern_binding (Var_name I))
                (Pattern_cons ((Pattern_binding (Var_name H1)))
                  (Pattern_binding (Var_name T1)))
                (Pattern_binding (Var_name E2)) (Pattern_binding (Var_name H2))
                (Pattern_binding (Var_name T2)) (Pattern_binding (Var_name M))))
             (c_guard ())
             (c_rhs
               (Expr_case
                 (Expr_apply
                   ((fa_name (Expr_name (Atom_name (Atom element))))
                     (fa_args
                       ((Expr_name (Var_name I)) (Expr_name (Var_name H1))))))
                 (((c_lhs ((Pattern_binding (Var_name E1))))
                    (c_guard
                      (((Expr_apply
                          ((fa_name
                             (Expr_name
                               (Qualified_name
                                 (n_mod (Atom_name (Atom erlang)))
                                 (n_name (Atom_name (Atom '=<'))))))
                            (fa_args
                              ((Expr_name (Var_name E1))
                                (Expr_name (Var_name E2)))))))))
                    (c_rhs
                      (Expr_apply
                        ((fa_name (Expr_name (Atom_name (Atom rkeymerge2_2))))
                          (fa_args
                            ((Expr_name (Var_name I)) (Expr_name (Var_name E1))
                              (Expr_name (Var_name T1))
                              (Expr_name (Var_name H2))
                              (Expr_name (Var_name T2))
                              (Expr_name (Var_name M))
                              (Expr_name (Var_name H1))))))))
                   ((c_lhs ((Pattern_binding (Var_name _E1)))) (c_guard ())
                     (c_rhs
                       (Expr_apply
                         ((fa_name (Expr_name (Atom_name (Atom rkeymerge2_1))))
                           (fa_args
                             ((Expr_name (Var_name I))
                               (Expr_name (Var_name T1))
                               (Expr_name (Var_name E2))
                               (Expr_name (Var_name H2))
                               (Expr_name (Var_name T2))
                               (Expr_cons ((Expr_name (Var_name H1)))
                                 (Expr_name (Var_name M)))))))))))))
            ((c_lhs
               ((Pattern_binding (Var_name _I)) (Pattern_list ())
                 (Pattern_binding (Var_name _E2))
                 (Pattern_binding (Var_name H2))
                 (Pattern_binding (Var_name T2))
                 (Pattern_binding (Var_name M))))
              (c_guard ())
              (c_rhs
                (Expr_apply
                  ((fa_name
                     (Expr_name
                       (Qualified_name (n_mod (Atom_name (Atom lists)))
                         (n_name (Atom_name (Atom reverse))))))
                    (fa_args
                      ((Expr_name (Var_name T2))
                        (Expr_cons ((Expr_name (Var_name H2)))
                          (Expr_name (Var_name M)))))))))))
        (fd_spec ())))
    (Function_decl
      ((fd_name (Atom rkeymerge2_2)) (fd_arity 7)
        (fd_cases
          (((c_lhs
              ((Pattern_binding (Var_name I)) (Pattern_binding (Var_name E1))
                (Pattern_binding (Var_name T1))
                (Pattern_binding (Var_name HdM))
                (Pattern_cons ((Pattern_binding (Var_name H2)))
                  (Pattern_binding (Var_name T2)))
                (Pattern_binding (Var_name M)) (Pattern_binding (Var_name H1))))
             (c_guard ())
             (c_rhs
               (Expr_case
                 (Expr_apply
                   ((fa_name (Expr_name (Atom_name (Atom element))))
                     (fa_args
                       ((Expr_name (Var_name I)) (Expr_name (Var_name H2))))))
                 (((c_lhs ((Pattern_binding (Var_name E2))))
                    (c_guard
                      (((Expr_apply
                          ((fa_name
                             (Expr_name
                               (Qualified_name
                                 (n_mod (Atom_name (Atom erlang)))
                                 (n_name (Atom_name (Atom '=<'))))))
                            (fa_args
                              ((Expr_name (Var_name E1))
                                (Expr_name (Var_name E2)))))))))
                    (c_rhs
                      (Expr_apply
                        ((fa_name (Expr_name (Atom_name (Atom rkeymerge2_2))))
                          (fa_args
                            ((Expr_name (Var_name I)) (Expr_name (Var_name E1))
                              (Expr_name (Var_name T1))
                              (Expr_name (Var_name H2))
                              (Expr_name (Var_name T2))
                              (Expr_cons ((Expr_name (Var_name HdM)))
                                (Expr_name (Var_name M)))
                              (Expr_name (Var_name H1))))))))
                   ((c_lhs ((Pattern_binding (Var_name E2)))) (c_guard ())
                     (c_rhs
                       (Expr_apply
                         ((fa_name (Expr_name (Atom_name (Atom rkeymerge2_1))))
                           (fa_args
                             ((Expr_name (Var_name I))
                               (Expr_name (Var_name T1))
                               (Expr_name (Var_name E2))
                               (Expr_name (Var_name H2))
                               (Expr_name (Var_name T2))
                               (Expr_cons
                                 ((Expr_name (Var_name H1))
                                   (Expr_name (Var_name HdM)))
                                 (Expr_name (Var_name M)))))))))))))
            ((c_lhs
               ((Pattern_binding (Var_name _I))
                 (Pattern_binding (Var_name _E1))
                 (Pattern_binding (Var_name T1))
                 (Pattern_binding (Var_name HdM)) (Pattern_list ())
                 (Pattern_binding (Var_name M))
                 (Pattern_binding (Var_name H1))))
              (c_guard ())
              (c_rhs
                (Expr_apply
                  ((fa_name
                     (Expr_name
                       (Qualified_name (n_mod (Atom_name (Atom lists)))
                         (n_name (Atom_name (Atom reverse))))))
                    (fa_args
                      ((Expr_name (Var_name T1))
                        (Expr_cons
                          ((Expr_name (Var_name H1))
                            (Expr_name (Var_name HdM)))
                          (Expr_name (Var_name M)))))))))))
        (fd_spec ())))
    (Module_comment (Comment "% ukeysort/2"))
    (Module_comment (Comment "% Ascending."))
    (Function_decl
      ((fd_name (Atom ukeysplit_1)) (fd_arity 8)
        (fd_cases
          (((c_lhs
              ((Pattern_binding (Var_name I)) (Pattern_binding (Var_name X))
                (Pattern_binding (Var_name EX)) (Pattern_binding (Var_name Y))
                (Pattern_binding (Var_name EY))
                (Pattern_cons ((Pattern_binding (Var_name Z)))
                  (Pattern_binding (Var_name L)))
                (Pattern_binding (Var_name R)) (Pattern_binding (Var_name Rs))))
             (c_guard ())
             (c_rhs
               (Expr_case
                 (Expr_apply
                   ((fa_name (Expr_name (Atom_name (Atom element))))
                     (fa_args
                       ((Expr_name (Var_name I)) (Expr_name (Var_name Z))))))
                 (((c_lhs ((Pattern_binding (Var_name EZ))))
                    (c_guard
                      (((Expr_apply
                          ((fa_name
                             (Expr_name
                               (Qualified_name
                                 (n_mod (Atom_name (Atom erlang)))
                                 (n_name (Atom_name (Atom '=='))))))
                            (fa_args
                              ((Expr_name (Var_name EY))
                                (Expr_name (Var_name EZ)))))))))
                    (c_rhs
                      (Expr_apply
                        ((fa_name (Expr_name (Atom_name (Atom ukeysplit_1))))
                          (fa_args
                            ((Expr_name (Var_name I)) (Expr_name (Var_name X))
                              (Expr_name (Var_name EX))
                              (Expr_name (Var_name Y))
                              (Expr_name (Var_name EY))
                              (Expr_name (Var_name L)) (Expr_name (Var_name R))
                              (Expr_name (Var_name Rs))))))))
                   ((c_lhs ((Pattern_binding (Var_name EZ))))
                     (c_guard
                       (((Expr_apply
                           ((fa_name
                              (Expr_name
                                (Qualified_name
                                  (n_mod (Atom_name (Atom erlang)))
                                  (n_name (Atom_name (Atom '<'))))))
                             (fa_args
                               ((Expr_name (Var_name EY))
                                 (Expr_name (Var_name EZ)))))))))
                     (c_rhs
                       (Expr_apply
                         ((fa_name (Expr_name (Atom_name (Atom ukeysplit_1))))
                           (fa_args
                             ((Expr_name (Var_name I)) (Expr_name (Var_name Y))
                               (Expr_name (Var_name EY))
                               (Expr_name (Var_name Z))
                               (Expr_name (Var_name EZ))
                               (Expr_name (Var_name L))
                               (Expr_cons ((Expr_name (Var_name X)))
                                 (Expr_name (Var_name R)))
                               (Expr_name (Var_name Rs))))))))
                   ((c_lhs ((Pattern_binding (Var_name EZ))))
                     (c_guard
                       (((Expr_apply
                           ((fa_name
                              (Expr_name
                                (Qualified_name
                                  (n_mod (Atom_name (Atom erlang)))
                                  (n_name (Atom_name (Atom '=='))))))
                             (fa_args
                               ((Expr_name (Var_name EX))
                                 (Expr_name (Var_name EZ)))))))))
                     (c_rhs
                       (Expr_apply
                         ((fa_name (Expr_name (Atom_name (Atom ukeysplit_1))))
                           (fa_args
                             ((Expr_name (Var_name I)) (Expr_name (Var_name X))
                               (Expr_name (Var_name EX))
                               (Expr_name (Var_name Y))
                               (Expr_name (Var_name EY))
                               (Expr_name (Var_name L))
                               (Expr_name (Var_name R))
                               (Expr_name (Var_name Rs))))))))
                   ((c_lhs ((Pattern_binding (Var_name EZ))))
                     (c_guard
                       (((Expr_apply
                           ((fa_name
                              (Expr_name
                                (Qualified_name
                                  (n_mod (Atom_name (Atom erlang)))
                                  (n_name (Atom_name (Atom '<'))))))
                             (fa_args
                               ((Expr_name (Var_name EX))
                                 (Expr_name (Var_name EZ)))))))))
                     (c_rhs
                       (Expr_apply
                         ((fa_name (Expr_name (Atom_name (Atom ukeysplit_1))))
                           (fa_args
                             ((Expr_name (Var_name I)) (Expr_name (Var_name Z))
                               (Expr_name (Var_name EZ))
                               (Expr_name (Var_name Y))
                               (Expr_name (Var_name EY))
                               (Expr_name (Var_name L))
                               (Expr_cons ((Expr_name (Var_name X)))
                                 (Expr_name (Var_name R)))
                               (Expr_name (Var_name Rs))))))))
                   ((c_lhs ((Pattern_binding (Var_name _EZ))))
                     (c_guard
                       (((Expr_apply
                           ((fa_name
                              (Expr_name
                                (Qualified_name
                                  (n_mod (Atom_name (Atom erlang)))
                                  (n_name (Atom_name (Atom '=='))))))
                             (fa_args
                               ((Expr_name (Var_name R)) (Expr_list ()))))))))
                     (c_rhs
                       (Expr_apply
                         ((fa_name (Expr_name (Atom_name (Atom ukeysplit_1))))
                           (fa_args
                             ((Expr_name (Var_name I)) (Expr_name (Var_name X))
                               (Expr_name (Var_name EX))
                               (Expr_name (Var_name Y))
                               (Expr_name (Var_name EY))
                               (Expr_name (Var_name L))
                               (Expr_list ((Expr_name (Var_name Z))))
                               (Expr_name (Var_name Rs))))))))
                   ((c_lhs ((Pattern_binding (Var_name EZ)))) (c_guard ())
                     (c_rhs
                       (Expr_apply
                         ((fa_name
                            (Expr_name (Atom_name (Atom ukeysplit_1_1))))
                           (fa_args
                             ((Expr_name (Var_name I)) (Expr_name (Var_name X))
                               (Expr_name (Var_name EX))
                               (Expr_name (Var_name Y))
                               (Expr_name (Var_name EY))
                               (Expr_name (Var_name L))
                               (Expr_name (Var_name R))
                               (Expr_name (Var_name Rs))
                               (Expr_name (Var_name Z))
                               (Expr_name (Var_name EZ))))))))))))
            ((c_lhs
               ((Pattern_binding (Var_name I)) (Pattern_binding (Var_name X))
                 (Pattern_binding (Var_name _EX))
                 (Pattern_binding (Var_name Y))
                 (Pattern_binding (Var_name _EY)) (Pattern_list ())
                 (Pattern_binding (Var_name R))
                 (Pattern_binding (Var_name Rs))))
              (c_guard ())
              (c_rhs
                (Expr_apply
                  ((fa_name (Expr_name (Atom_name (Atom rukeymergel))))
                    (fa_args
                      ((Expr_name (Var_name I))
                        (Expr_cons
                          ((Expr_cons
                             ((Expr_name (Var_name Y))
                               (Expr_name (Var_name X)))
                             (Expr_name (Var_name R))))
                          (Expr_name (Var_name Rs)))
                        (Expr_list ())))))))))
        (fd_spec ())))
    (Function_decl
      ((fd_name (Atom ukeysplit_1_1)) (fd_arity 10)
        (fd_cases
          (((c_lhs
              ((Pattern_binding (Var_name I)) (Pattern_binding (Var_name X))
                (Pattern_binding (Var_name EX)) (Pattern_binding (Var_name Y))
                (Pattern_binding (Var_name EY))
                (Pattern_cons ((Pattern_binding (Var_name Z)))
                  (Pattern_binding (Var_name L)))
                (Pattern_binding (Var_name R)) (Pattern_binding (Var_name Rs))
                (Pattern_binding (Var_name S)) (Pattern_binding (Var_name ES))))
             (c_guard ())
             (c_rhs
               (Expr_case
                 (Expr_apply
                   ((fa_name (Expr_name (Atom_name (Atom element))))
                     (fa_args
                       ((Expr_name (Var_name I)) (Expr_name (Var_name Z))))))
                 (((c_lhs ((Pattern_binding (Var_name EZ))))
                    (c_guard
                      (((Expr_apply
                          ((fa_name
                             (Expr_name
                               (Qualified_name
                                 (n_mod (Atom_name (Atom erlang)))
                                 (n_name (Atom_name (Atom '=='))))))
                            (fa_args
                              ((Expr_name (Var_name EY))
                                (Expr_name (Var_name EZ)))))))))
                    (c_rhs
                      (Expr_apply
                        ((fa_name (Expr_name (Atom_name (Atom ukeysplit_1_1))))
                          (fa_args
                            ((Expr_name (Var_name I)) (Expr_name (Var_name X))
                              (Expr_name (Var_name EX))
                              (Expr_name (Var_name Y))
                              (Expr_name (Var_name EY))
                              (Expr_name (Var_name L)) (Expr_name (Var_name R))
                              (Expr_name (Var_name Rs))
                              (Expr_name (Var_name S))
                              (Expr_name (Var_name ES))))))))
                   ((c_lhs ((Pattern_binding (Var_name EZ))))
                     (c_guard
                       (((Expr_apply
                           ((fa_name
                              (Expr_name
                                (Qualified_name
                                  (n_mod (Atom_name (Atom erlang)))
                                  (n_name (Atom_name (Atom '<'))))))
                             (fa_args
                               ((Expr_name (Var_name EY))
                                 (Expr_name (Var_name EZ)))))))))
                     (c_rhs
                       (Expr_apply
                         ((fa_name
                            (Expr_name (Atom_name (Atom ukeysplit_1_1))))
                           (fa_args
                             ((Expr_name (Var_name I)) (Expr_name (Var_name Y))
                               (Expr_name (Var_name EY))
                               (Expr_name (Var_name Z))
                               (Expr_name (Var_name EZ))
                               (Expr_name (Var_name L))
                               (Expr_cons ((Expr_name (Var_name X)))
                                 (Expr_name (Var_name R)))
                               (Expr_name (Var_name Rs))
                               (Expr_name (Var_name S))
                               (Expr_name (Var_name ES))))))))
                   ((c_lhs ((Pattern_binding (Var_name EZ))))
                     (c_guard
                       (((Expr_apply
                           ((fa_name
                              (Expr_name
                                (Qualified_name
                                  (n_mod (Atom_name (Atom erlang)))
                                  (n_name (Atom_name (Atom '=='))))))
                             (fa_args
                               ((Expr_name (Var_name EX))
                                 (Expr_name (Var_name EZ)))))))))
                     (c_rhs
                       (Expr_apply
                         ((fa_name
                            (Expr_name (Atom_name (Atom ukeysplit_1_1))))
                           (fa_args
                             ((Expr_name (Var_name I)) (Expr_name (Var_name X))
                               (Expr_name (Var_name EX))
                               (Expr_name (Var_name Y))
                               (Expr_name (Var_name EY))
                               (Expr_name (Var_name L))
                               (Expr_name (Var_name R))
                               (Expr_name (Var_name Rs))
                               (Expr_name (Var_name S))
                               (Expr_name (Var_name ES))))))))
                   ((c_lhs ((Pattern_binding (Var_name EZ))))
                     (c_guard
                       (((Expr_apply
                           ((fa_name
                              (Expr_name
                                (Qualified_name
                                  (n_mod (Atom_name (Atom erlang)))
                                  (n_name (Atom_name (Atom '<'))))))
                             (fa_args
                               ((Expr_name (Var_name EX))
                                 (Expr_name (Var_name EZ)))))))))
                     (c_rhs
                       (Expr_apply
                         ((fa_name
                            (Expr_name (Atom_name (Atom ukeysplit_1_1))))
                           (fa_args
                             ((Expr_name (Var_name I)) (Expr_name (Var_name Z))
                               (Expr_name (Var_name EZ))
                               (Expr_name (Var_name Y))
                               (Expr_name (Var_name EY))
                               (Expr_name (Var_name L))
                               (Expr_cons ((Expr_name (Var_name X)))
                                 (Expr_name (Var_name R)))
                               (Expr_name (Var_name Rs))
                               (Expr_name (Var_name S))
                               (Expr_name (Var_name ES))))))))
                   ((c_lhs ((Pattern_binding (Var_name EZ))))
                     (c_guard
                       (((Expr_apply
                           ((fa_name
                              (Expr_name
                                (Qualified_name
                                  (n_mod (Atom_name (Atom erlang)))
                                  (n_name (Atom_name (Atom '=='))))))
                             (fa_args
                               ((Expr_name (Var_name ES))
                                 (Expr_name (Var_name EZ)))))))))
                     (c_rhs
                       (Expr_apply
                         ((fa_name
                            (Expr_name (Atom_name (Atom ukeysplit_1_1))))
                           (fa_args
                             ((Expr_name (Var_name I)) (Expr_name (Var_name X))
                               (Expr_name (Var_name EX))
                               (Expr_name (Var_name Y))
                               (Expr_name (Var_name EY))
                               (Expr_name (Var_name L))
                               (Expr_name (Var_name R))
                               (Expr_name (Var_name Rs))
                               (Expr_name (Var_name S))
                               (Expr_name (Var_name ES))))))))
                   ((c_lhs ((Pattern_binding (Var_name EZ))))
                     (c_guard
                       (((Expr_apply
                           ((fa_name
                              (Expr_name
                                (Qualified_name
                                  (n_mod (Atom_name (Atom erlang)))
                                  (n_name (Atom_name (Atom '<'))))))
                             (fa_args
                               ((Expr_name (Var_name ES))
                                 (Expr_name (Var_name EZ)))))))))
                     (c_rhs
                       (Expr_apply
                         ((fa_name (Expr_name (Atom_name (Atom ukeysplit_1))))
                           (fa_args
                             ((Expr_name (Var_name I)) (Expr_name (Var_name S))
                               (Expr_name (Var_name ES))
                               (Expr_name (Var_name Z))
                               (Expr_name (Var_name EZ))
                               (Expr_name (Var_name L)) (Expr_list ())
                               (Expr_cons
                                 ((Expr_cons
                                    ((Expr_name (Var_name Y))
                                      (Expr_name (Var_name X)))
                                    (Expr_name (Var_name R))))
                                 (Expr_name (Var_name Rs)))))))))
                   ((c_lhs ((Pattern_binding (Var_name EZ)))) (c_guard ())
                     (c_rhs
                       (Expr_apply
                         ((fa_name (Expr_name (Atom_name (Atom ukeysplit_1))))
                           (fa_args
                             ((Expr_name (Var_name I)) (Expr_name (Var_name Z))
                               (Expr_name (Var_name EZ))
                               (Expr_name (Var_name S))
                               (Expr_name (Var_name ES))
                               (Expr_name (Var_name L)) (Expr_list ())
                               (Expr_cons
                                 ((Expr_cons
                                    ((Expr_name (Var_name Y))
                                      (Expr_name (Var_name X)))
                                    (Expr_name (Var_name R))))
                                 (Expr_name (Var_name Rs)))))))))))))
            ((c_lhs
               ((Pattern_binding (Var_name I)) (Pattern_binding (Var_name X))
                 (Pattern_binding (Var_name _EX))
                 (Pattern_binding (Var_name Y))
                 (Pattern_binding (Var_name _EY)) (Pattern_list ())
                 (Pattern_binding (Var_name R)) (Pattern_binding (Var_name Rs))
                 (Pattern_binding (Var_name S))
                 (Pattern_binding (Var_name _ES))))
              (c_guard ())
              (c_rhs
                (Expr_apply
                  ((fa_name (Expr_name (Atom_name (Atom rukeymergel))))
                    (fa_args
                      ((Expr_name (Var_name I))
                        (Expr_cons
                          ((Expr_list ((Expr_name (Var_name S))))
                            (Expr_cons
                              ((Expr_name (Var_name Y))
                                (Expr_name (Var_name X)))
                              (Expr_name (Var_name R))))
                          (Expr_name (Var_name Rs)))
                        (Expr_list ())))))))))
        (fd_spec ())))
    (Module_comment (Comment "% Descending."))
    (Function_decl
      ((fd_name (Atom ukeysplit_2)) (fd_arity 5)
        (fd_cases
          (((c_lhs
              ((Pattern_binding (Var_name I)) (Pattern_binding (Var_name Y))
                (Pattern_binding (Var_name EY))
                (Pattern_cons ((Pattern_binding (Var_name Z)))
                  (Pattern_binding (Var_name L)))
                (Pattern_binding (Var_name R))))
             (c_guard ())
             (c_rhs
               (Expr_case
                 (Expr_apply
                   ((fa_name (Expr_name (Atom_name (Atom element))))
                     (fa_args
                       ((Expr_name (Var_name I)) (Expr_name (Var_name Z))))))
                 (((c_lhs ((Pattern_binding (Var_name EZ))))
                    (c_guard
                      (((Expr_apply
                          ((fa_name
                             (Expr_name
                               (Qualified_name
                                 (n_mod (Atom_name (Atom erlang)))
                                 (n_name (Atom_name (Atom '=='))))))
                            (fa_args
                              ((Expr_name (Var_name EY))
                                (Expr_name (Var_name EZ)))))))))
                    (c_rhs
                      (Expr_apply
                        ((fa_name (Expr_name (Atom_name (Atom ukeysplit_2))))
                          (fa_args
                            ((Expr_name (Var_name I)) (Expr_name (Var_name Y))
                              (Expr_name (Var_name EY))
                              (Expr_name (Var_name L))
                              (Expr_name (Var_name R))))))))
                   ((c_lhs ((Pattern_binding (Var_name EZ))))
                     (c_guard
                       (((Expr_apply
                           ((fa_name
                              (Expr_name
                                (Qualified_name
                                  (n_mod (Atom_name (Atom erlang)))
                                  (n_name (Atom_name (Atom '<'))))))
                             (fa_args
                               ((Expr_name (Var_name EY))
                                 (Expr_name (Var_name EZ)))))))))
                     (c_rhs
                       (Expr_apply
                         ((fa_name (Expr_name (Atom_name (Atom ukeysplit_1))))
                           (fa_args
                             ((Expr_name (Var_name I)) (Expr_name (Var_name Y))
                               (Expr_name (Var_name EY))
                               (Expr_name (Var_name Z))
                               (Expr_name (Var_name EZ))
                               (Expr_name (Var_name L)) (Expr_list ())
                               (Expr_list
                                 ((Expr_apply
                                    ((fa_name
                                       (Expr_name
                                         (Qualified_name
                                           (n_mod (Atom_name (Atom lists)))
                                           (n_name (Atom_name (Atom reverse))))))
                                      (fa_args
                                        ((Expr_name (Var_name R))
                                          (Expr_list ())))))))))))))
                   ((c_lhs ((Pattern_binding (Var_name EZ)))) (c_guard ())
                     (c_rhs
                       (Expr_apply
                         ((fa_name (Expr_name (Atom_name (Atom ukeysplit_2))))
                           (fa_args
                             ((Expr_name (Var_name I)) (Expr_name (Var_name Z))
                               (Expr_name (Var_name EZ))
                               (Expr_name (Var_name L))
                               (Expr_cons ((Expr_name (Var_name Y)))
                                 (Expr_name (Var_name R)))))))))))))
            ((c_lhs
               ((Pattern_binding (Var_name _I)) (Pattern_binding (Var_name Y))
                 (Pattern_binding (Var_name _EY)) (Pattern_list ())
                 (Pattern_binding (Var_name R))))
              (c_guard ())
              (c_rhs
                (Expr_cons ((Expr_name (Var_name Y))) (Expr_name (Var_name R)))))))
        (fd_spec ())))
    (Module_attribute
      ((atr_name (Atom dialyzer))
        (atr_value
          (Expr_tuple
            ((Expr_literal (Lit_atom (Atom no_improper_lists)))
              (Expr_apply
                ((fa_name
                   (Expr_name
                     (Qualified_name (n_mod (Atom_name (Atom erlang)))
                       (n_name (Atom_name (Atom '/'))))))
                  (fa_args
                    ((Expr_literal (Lit_atom (Atom ukeymergel)))
                      (Expr_literal (Lit_integer 3)))))))))))
    (Function_decl
      ((fd_name (Atom ukeymergel)) (fd_arity 3)
        (fd_cases
          (((c_lhs
              ((Pattern_binding (Var_name I))
                (Pattern_cons
                  ((Pattern_binding (Var_name T1))
                    (Pattern_cons ((Pattern_binding (Var_name H2)))
                      (Pattern_binding (Var_name T2)))
                    (Pattern_cons ((Pattern_binding (Var_name H3)))
                      (Pattern_binding (Var_name T3))))
                  (Pattern_binding (Var_name L)))
                (Pattern_binding (Var_name Acc))))
             (c_guard ())
             (c_rhs
               (Expr_comment
                 (Comment
                   "% The fourth argument, [H2 | H3] (=HdM), may confuse type")
                 (Expr_comment
                   (Comment
                     "% checkers. Its purpose is to ensure that the tests H2 == HdM")
                   (Expr_comment
                     (Comment
                       "% and H3 == HdM in ukeymerge3_1 will always fail as long as M == [].")
                     (Expr_let
                       ((lb_lhs (Pattern_binding (Var_name M)))
                         (lb_rhs
                           (Expr_apply
                             ((fa_name
                                (Expr_name (Atom_name (Atom ukeymerge3_1))))
                               (fa_args
                                 ((Expr_name (Var_name I))
                                   (Expr_name (Var_name T1))
                                   (Expr_name (Var_name Acc))
                                   (Expr_cons ((Expr_name (Var_name H2)))
                                     (Expr_name (Var_name H3)))
                                   (Expr_apply
                                     ((fa_name
                                        (Expr_name (Atom_name (Atom element))))
                                       (fa_args
                                         ((Expr_name (Var_name I))
                                           (Expr_name (Var_name H2))))))
                                   (Expr_name (Var_name H2))
                                   (Expr_name (Var_name T2)) (Expr_list ())
                                   (Expr_apply
                                     ((fa_name
                                        (Expr_name (Atom_name (Atom element))))
                                       (fa_args
                                         ((Expr_name (Var_name I))
                                           (Expr_name (Var_name H3))))))
                                   (Expr_name (Var_name H3))
                                   (Expr_name (Var_name T3))))))))
                       (Expr_apply
                         ((fa_name (Expr_name (Atom_name (Atom ukeymergel))))
                           (fa_args
                             ((Expr_name (Var_name I)) (Expr_name (Var_name L))
                               (Expr_cons ((Expr_name (Var_name M)))
                                 (Expr_name (Var_name Acc)))))))))))))
            ((c_lhs
               ((Pattern_binding (Var_name I))
                 (Pattern_cons
                   ((Pattern_cons ((Pattern_binding (Var_name H1)))
                      (Pattern_binding (Var_name T1)))
                     (Pattern_binding (Var_name T2)))
                   (Pattern_binding (Var_name L)))
                 (Pattern_binding (Var_name Acc))))
              (c_guard ())
              (c_rhs
                (Expr_apply
                  ((fa_name (Expr_name (Atom_name (Atom ukeymergel))))
                    (fa_args
                      ((Expr_name (Var_name I)) (Expr_name (Var_name L))
                        (Expr_cons
                          ((Expr_apply
                             ((fa_name
                                (Expr_name (Atom_name (Atom ukeymerge2_2))))
                               (fa_args
                                 ((Expr_name (Var_name I))
                                   (Expr_name (Var_name T1))
                                   (Expr_apply
                                     ((fa_name
                                        (Expr_name (Atom_name (Atom element))))
                                       (fa_args
                                         ((Expr_name (Var_name I))
                                           (Expr_name (Var_name H1))))))
                                   (Expr_name (Var_name H1))
                                   (Expr_name (Var_name T2)) (Expr_list ()))))))
                          (Expr_name (Var_name Acc)))))))))
            ((c_lhs
               ((Pattern_binding (Var_name _I))
                 (Pattern_list ((Pattern_binding (Var_name L))))
                 (Pattern_list ())))
              (c_guard ()) (c_rhs (Expr_name (Var_name L))))
            ((c_lhs
               ((Pattern_binding (Var_name I))
                 (Pattern_list ((Pattern_binding (Var_name L))))
                 (Pattern_binding (Var_name Acc))))
              (c_guard ())
              (c_rhs
                (Expr_apply
                  ((fa_name (Expr_name (Atom_name (Atom rukeymergel))))
                    (fa_args
                      ((Expr_name (Var_name I))
                        (Expr_cons
                          ((Expr_apply
                             ((fa_name
                                (Expr_name
                                  (Qualified_name
                                    (n_mod (Atom_name (Atom lists)))
                                    (n_name (Atom_name (Atom reverse))))))
                               (fa_args
                                 ((Expr_name (Var_name L)) (Expr_list ()))))))
                          (Expr_name (Var_name Acc)))
                        (Expr_list ())))))))
            ((c_lhs
               ((Pattern_binding (Var_name I)) (Pattern_list ())
                 (Pattern_binding (Var_name Acc))))
              (c_guard ())
              (c_rhs
                (Expr_apply
                  ((fa_name (Expr_name (Atom_name (Atom rukeymergel))))
                    (fa_args
                      ((Expr_name (Var_name I)) (Expr_name (Var_name Acc))
                        (Expr_list ())))))))))
        (fd_spec ())))
    (Function_decl
      ((fd_name (Atom rukeymergel)) (fd_arity 3)
        (fd_cases
          (((c_lhs
              ((Pattern_binding (Var_name I))
                (Pattern_cons
                  ((Pattern_cons ((Pattern_binding (Var_name H3)))
                     (Pattern_binding (Var_name T3)))
                    (Pattern_cons ((Pattern_binding (Var_name H2)))
                      (Pattern_binding (Var_name T2)))
                    (Pattern_binding (Var_name T1)))
                  (Pattern_binding (Var_name L)))
                (Pattern_binding (Var_name Acc))))
             (c_guard ())
             (c_rhs
               (Expr_let
                 ((lb_lhs (Pattern_binding (Var_name M)))
                   (lb_rhs
                     (Expr_apply
                       ((fa_name (Expr_name (Atom_name (Atom rukeymerge3_1))))
                         (fa_args
                           ((Expr_name (Var_name I)) (Expr_name (Var_name T1))
                             (Expr_name (Var_name Acc)) (Expr_list ())
                             (Expr_apply
                               ((fa_name
                                  (Expr_name (Atom_name (Atom element))))
                                 (fa_args
                                   ((Expr_name (Var_name I))
                                     (Expr_name (Var_name H2))))))
                             (Expr_name (Var_name H2))
                             (Expr_name (Var_name T2)) (Expr_list ())
                             (Expr_apply
                               ((fa_name
                                  (Expr_name (Atom_name (Atom element))))
                                 (fa_args
                                   ((Expr_name (Var_name I))
                                     (Expr_name (Var_name H3))))))
                             (Expr_name (Var_name H3))
                             (Expr_name (Var_name T3))))))))
                 (Expr_apply
                   ((fa_name (Expr_name (Atom_name (Atom rukeymergel))))
                     (fa_args
                       ((Expr_name (Var_name I)) (Expr_name (Var_name L))
                         (Expr_cons ((Expr_name (Var_name M)))
                           (Expr_name (Var_name Acc))))))))))
            ((c_lhs
               ((Pattern_binding (Var_name I))
                 (Pattern_cons
                   ((Pattern_cons ((Pattern_binding (Var_name H2)))
                      (Pattern_binding (Var_name T2)))
                     (Pattern_binding (Var_name T1)))
                   (Pattern_binding (Var_name L)))
                 (Pattern_binding (Var_name Acc))))
              (c_guard ())
              (c_rhs
                (Expr_apply
                  ((fa_name (Expr_name (Atom_name (Atom rukeymergel))))
                    (fa_args
                      ((Expr_name (Var_name I)) (Expr_name (Var_name L))
                        (Expr_cons
                          ((Expr_apply
                             ((fa_name
                                (Expr_name (Atom_name (Atom rukeymerge2_1))))
                               (fa_args
                                 ((Expr_name (Var_name I))
                                   (Expr_name (Var_name T1))
                                   (Expr_apply
                                     ((fa_name
                                        (Expr_name (Atom_name (Atom element))))
                                       (fa_args
                                         ((Expr_name (Var_name I))
                                           (Expr_name (Var_name H2))))))
                                   (Expr_name (Var_name T2)) (Expr_list ())
                                   (Expr_name (Var_name H2)))))))
                          (Expr_name (Var_name Acc)))))))))
            ((c_lhs
               ((Pattern_binding (Var_name I))
                 (Pattern_list ((Pattern_binding (Var_name L))))
                 (Pattern_binding (Var_name Acc))))
              (c_guard ())
              (c_rhs
                (Expr_apply
                  ((fa_name (Expr_name (Atom_name (Atom ukeymergel))))
                    (fa_args
                      ((Expr_name (Var_name I))
                        (Expr_cons
                          ((Expr_apply
                             ((fa_name
                                (Expr_name
                                  (Qualified_name
                                    (n_mod (Atom_name (Atom lists)))
                                    (n_name (Atom_name (Atom reverse))))))
                               (fa_args
                                 ((Expr_name (Var_name L)) (Expr_list ()))))))
                          (Expr_name (Var_name Acc)))
                        (Expr_list ())))))))
            ((c_lhs
               ((Pattern_binding (Var_name I)) (Pattern_list ())
                 (Pattern_binding (Var_name Acc))))
              (c_guard ())
              (c_rhs
                (Expr_apply
                  ((fa_name (Expr_name (Atom_name (Atom ukeymergel))))
                    (fa_args
                      ((Expr_name (Var_name I)) (Expr_name (Var_name Acc))
                        (Expr_list ())))))))))
        (fd_spec ())))
    (Module_comment
      (Comment
        "%% An extra argument, D, just to avoid some move instructions."))
    (Module_comment (Comment "% Take L1 apart."))
    (Function_decl
      ((fd_name (Atom ukeymerge3_1)) (fd_arity 11)
        (fd_cases
          (((c_lhs
              ((Pattern_binding (Var_name I))
                (Pattern_cons ((Pattern_binding (Var_name H1)))
                  (Pattern_binding (Var_name T1)))
                (Pattern_binding (Var_name D)) (Pattern_binding (Var_name HdM))
                (Pattern_binding (Var_name E2)) (Pattern_binding (Var_name H2))
                (Pattern_binding (Var_name T2)) (Pattern_binding (Var_name M))
                (Pattern_binding (Var_name E3)) (Pattern_binding (Var_name H3))
                (Pattern_binding (Var_name T3))))
             (c_guard ())
             (c_rhs
               (Expr_case
                 (Expr_apply
                   ((fa_name (Expr_name (Atom_name (Atom element))))
                     (fa_args
                       ((Expr_name (Var_name I)) (Expr_name (Var_name H1))))))
                 (((c_lhs ((Pattern_binding (Var_name E1))))
                    (c_guard
                      (((Expr_apply
                          ((fa_name
                             (Expr_name
                               (Qualified_name
                                 (n_mod (Atom_name (Atom erlang)))
                                 (n_name (Atom_name (Atom '=<'))))))
                            (fa_args
                              ((Expr_name (Var_name E1))
                                (Expr_name (Var_name E2)))))))))
                    (c_rhs
                      (Expr_apply
                        ((fa_name (Expr_name (Atom_name (Atom ukeymerge3_12))))
                          (fa_args
                            ((Expr_name (Var_name I)) (Expr_name (Var_name E1))
                              (Expr_name (Var_name T1))
                              (Expr_name (Var_name H1))
                              (Expr_name (Var_name E2))
                              (Expr_name (Var_name H2))
                              (Expr_name (Var_name T2))
                              (Expr_name (Var_name E3))
                              (Expr_name (Var_name H3))
                              (Expr_name (Var_name T3))
                              (Expr_name (Var_name M))
                              (Expr_name (Var_name HdM))
                              (Expr_name (Var_name D))))))))
                   ((c_lhs ((Pattern_binding (Var_name E1))))
                     (c_guard
                       (((Expr_apply
                           ((fa_name
                              (Expr_name
                                (Qualified_name
                                  (n_mod (Atom_name (Atom erlang)))
                                  (n_name (Atom_name (Atom '=='))))))
                             (fa_args
                               ((Expr_name (Var_name E2))
                                 (Expr_name (Var_name HdM)))))))))
                     (c_rhs
                       (Expr_apply
                         ((fa_name (Expr_name (Atom_name (Atom ukeymerge3_2))))
                           (fa_args
                             ((Expr_name (Var_name I))
                               (Expr_name (Var_name E1))
                               (Expr_name (Var_name T1))
                               (Expr_name (Var_name H1))
                               (Expr_name (Var_name T2))
                               (Expr_name (Var_name HdM))
                               (Expr_name (Var_name T2))
                               (Expr_name (Var_name M))
                               (Expr_name (Var_name E3))
                               (Expr_name (Var_name H3))
                               (Expr_name (Var_name T3))))))))
                   ((c_lhs ((Pattern_binding (Var_name E1)))) (c_guard ())
                     (c_rhs
                       (Expr_apply
                         ((fa_name
                            (Expr_name (Atom_name (Atom ukeymerge3_21))))
                           (fa_args
                             ((Expr_name (Var_name I))
                               (Expr_name (Var_name E1))
                               (Expr_name (Var_name T1))
                               (Expr_name (Var_name H1))
                               (Expr_name (Var_name E2))
                               (Expr_name (Var_name H2))
                               (Expr_name (Var_name T2))
                               (Expr_name (Var_name E3))
                               (Expr_name (Var_name H3))
                               (Expr_name (Var_name T3))
                               (Expr_name (Var_name M))
                               (Expr_name (Var_name HdM))
                               (Expr_name (Var_name T2))))))))))))
            ((c_lhs
               ((Pattern_binding (Var_name I)) (Pattern_list ())
                 (Pattern_binding (Var_name _D))
                 (Pattern_binding (Var_name HdM))
                 (Pattern_binding (Var_name E2))
                 (Pattern_binding (Var_name _H2))
                 (Pattern_binding (Var_name T2)) (Pattern_binding (Var_name M))
                 (Pattern_binding (Var_name E3))
                 (Pattern_binding (Var_name H3))
                 (Pattern_binding (Var_name T3))))
              (c_guard
                (((Expr_apply
                    ((fa_name
                       (Expr_name
                         (Qualified_name (n_mod (Atom_name (Atom erlang)))
                           (n_name (Atom_name (Atom '=='))))))
                      (fa_args
                        ((Expr_name (Var_name E2)) (Expr_name (Var_name HdM)))))))))
              (c_rhs
                (Expr_apply
                  ((fa_name (Expr_name (Atom_name (Atom ukeymerge2_1))))
                    (fa_args
                      ((Expr_name (Var_name I)) (Expr_name (Var_name T2))
                        (Expr_name (Var_name E3)) (Expr_name (Var_name HdM))
                        (Expr_name (Var_name T3)) (Expr_name (Var_name M))
                        (Expr_name (Var_name H3))))))))
            ((c_lhs
               ((Pattern_binding (Var_name I)) (Pattern_list ())
                 (Pattern_binding (Var_name _D))
                 (Pattern_binding (Var_name _HdM))
                 (Pattern_binding (Var_name E2))
                 (Pattern_binding (Var_name H2))
                 (Pattern_binding (Var_name T2)) (Pattern_binding (Var_name M))
                 (Pattern_binding (Var_name E3))
                 (Pattern_binding (Var_name H3))
                 (Pattern_binding (Var_name T3))))
              (c_guard
                (((Expr_apply
                    ((fa_name
                       (Expr_name
                         (Qualified_name (n_mod (Atom_name (Atom erlang)))
                           (n_name (Atom_name (Atom '=<'))))))
                      (fa_args
                        ((Expr_name (Var_name E2)) (Expr_name (Var_name E3)))))))))
              (c_rhs
                (Expr_apply
                  ((fa_name (Expr_name (Atom_name (Atom ukeymerge2_1))))
                    (fa_args
                      ((Expr_name (Var_name I)) (Expr_name (Var_name T2))
                        (Expr_name (Var_name E3)) (Expr_name (Var_name E2))
                        (Expr_name (Var_name T3))
                        (Expr_cons ((Expr_name (Var_name H2)))
                          (Expr_name (Var_name M)))
                        (Expr_name (Var_name H3))))))))
            ((c_lhs
               ((Pattern_binding (Var_name I)) (Pattern_list ())
                 (Pattern_binding (Var_name _D))
                 (Pattern_binding (Var_name HdM))
                 (Pattern_binding (Var_name E2))
                 (Pattern_binding (Var_name H2))
                 (Pattern_binding (Var_name T2)) (Pattern_binding (Var_name M))
                 (Pattern_binding (Var_name E3))
                 (Pattern_binding (Var_name _H3))
                 (Pattern_binding (Var_name T3))))
              (c_guard
                (((Expr_apply
                    ((fa_name
                       (Expr_name
                         (Qualified_name (n_mod (Atom_name (Atom erlang)))
                           (n_name (Atom_name (Atom '=='))))))
                      (fa_args
                        ((Expr_name (Var_name E3)) (Expr_name (Var_name HdM)))))))))
              (c_rhs
                (Expr_apply
                  ((fa_name (Expr_name (Atom_name (Atom ukeymerge2_2))))
                    (fa_args
                      ((Expr_name (Var_name I)) (Expr_name (Var_name T2))
                        (Expr_name (Var_name E2)) (Expr_name (Var_name H2))
                        (Expr_name (Var_name T3)) (Expr_name (Var_name M))))))))
            ((c_lhs
               ((Pattern_binding (Var_name I)) (Pattern_list ())
                 (Pattern_binding (Var_name _D))
                 (Pattern_binding (Var_name _HdM))
                 (Pattern_binding (Var_name E2))
                 (Pattern_binding (Var_name H2))
                 (Pattern_binding (Var_name T2)) (Pattern_binding (Var_name M))
                 (Pattern_binding (Var_name _E3))
                 (Pattern_binding (Var_name H3))
                 (Pattern_binding (Var_name T3))))
              (c_guard ())
              (c_rhs
                (Expr_apply
                  ((fa_name (Expr_name (Atom_name (Atom ukeymerge2_2))))
                    (fa_args
                      ((Expr_name (Var_name I)) (Expr_name (Var_name T2))
                        (Expr_name (Var_name E2)) (Expr_name (Var_name H2))
                        (Expr_name (Var_name T3))
                        (Expr_cons ((Expr_name (Var_name H3)))
                          (Expr_name (Var_name M)))))))))))
        (fd_spec ())))
    (Module_comment (Comment "% Take L2 apart."))
    (Function_decl
      ((fd_name (Atom ukeymerge3_2)) (fd_arity 11)
        (fd_cases
          (((c_lhs
              ((Pattern_binding (Var_name I)) (Pattern_binding (Var_name E1))
                (Pattern_binding (Var_name T1)) (Pattern_binding (Var_name H1))
                (Pattern_cons ((Pattern_binding (Var_name H2)))
                  (Pattern_binding (Var_name T2)))
                (Pattern_binding (Var_name HdM)) (Pattern_binding (Var_name D))
                (Pattern_binding (Var_name M)) (Pattern_binding (Var_name E3))
                (Pattern_binding (Var_name H3))
                (Pattern_binding (Var_name T3))))
             (c_guard ())
             (c_rhs
               (Expr_case
                 (Expr_apply
                   ((fa_name (Expr_name (Atom_name (Atom element))))
                     (fa_args
                       ((Expr_name (Var_name I)) (Expr_name (Var_name H2))))))
                 (((c_lhs ((Pattern_binding (Var_name E2))))
                    (c_guard
                      (((Expr_apply
                          ((fa_name
                             (Expr_name
                               (Qualified_name
                                 (n_mod (Atom_name (Atom erlang)))
                                 (n_name (Atom_name (Atom '=<'))))))
                            (fa_args
                              ((Expr_name (Var_name E1))
                                (Expr_name (Var_name E2)))))))))
                    (c_rhs
                      (Expr_apply
                        ((fa_name (Expr_name (Atom_name (Atom ukeymerge3_12))))
                          (fa_args
                            ((Expr_name (Var_name I)) (Expr_name (Var_name E1))
                              (Expr_name (Var_name T1))
                              (Expr_name (Var_name H1))
                              (Expr_name (Var_name E2))
                              (Expr_name (Var_name H2))
                              (Expr_name (Var_name T2))
                              (Expr_name (Var_name E3))
                              (Expr_name (Var_name H3))
                              (Expr_name (Var_name T3))
                              (Expr_name (Var_name M))
                              (Expr_name (Var_name HdM))
                              (Expr_name (Var_name T1))))))))
                   ((c_lhs ((Pattern_binding (Var_name E2)))) (c_guard ())
                     (c_rhs
                       (Expr_apply
                         ((fa_name
                            (Expr_name (Atom_name (Atom ukeymerge3_21))))
                           (fa_args
                             ((Expr_name (Var_name I))
                               (Expr_name (Var_name E1))
                               (Expr_name (Var_name T1))
                               (Expr_name (Var_name H1))
                               (Expr_name (Var_name E2))
                               (Expr_name (Var_name H2))
                               (Expr_name (Var_name T2))
                               (Expr_name (Var_name E3))
                               (Expr_name (Var_name H3))
                               (Expr_name (Var_name T3))
                               (Expr_name (Var_name M))
                               (Expr_name (Var_name HdM))
                               (Expr_name (Var_name D))))))))))))
            ((c_lhs
               ((Pattern_binding (Var_name I)) (Pattern_binding (Var_name E1))
                 (Pattern_binding (Var_name T1))
                 (Pattern_binding (Var_name H1)) (Pattern_list ())
                 (Pattern_binding (Var_name _HdM))
                 (Pattern_binding (Var_name _D)) (Pattern_binding (Var_name M))
                 (Pattern_binding (Var_name E3))
                 (Pattern_binding (Var_name H3))
                 (Pattern_binding (Var_name T3))))
              (c_guard
                (((Expr_apply
                    ((fa_name
                       (Expr_name
                         (Qualified_name (n_mod (Atom_name (Atom erlang)))
                           (n_name (Atom_name (Atom '=<'))))))
                      (fa_args
                        ((Expr_name (Var_name E1)) (Expr_name (Var_name E3)))))))))
              (c_rhs
                (Expr_apply
                  ((fa_name (Expr_name (Atom_name (Atom ukeymerge2_1))))
                    (fa_args
                      ((Expr_name (Var_name I)) (Expr_name (Var_name T1))
                        (Expr_name (Var_name E3)) (Expr_name (Var_name E1))
                        (Expr_name (Var_name T3))
                        (Expr_cons ((Expr_name (Var_name H1)))
                          (Expr_name (Var_name M)))
                        (Expr_name (Var_name H3))))))))
            ((c_lhs
               ((Pattern_binding (Var_name I)) (Pattern_binding (Var_name E1))
                 (Pattern_binding (Var_name T1))
                 (Pattern_binding (Var_name H1)) (Pattern_list ())
                 (Pattern_binding (Var_name HdM))
                 (Pattern_binding (Var_name _D)) (Pattern_binding (Var_name M))
                 (Pattern_binding (Var_name E3))
                 (Pattern_binding (Var_name _H3))
                 (Pattern_binding (Var_name T3))))
              (c_guard
                (((Expr_apply
                    ((fa_name
                       (Expr_name
                         (Qualified_name (n_mod (Atom_name (Atom erlang)))
                           (n_name (Atom_name (Atom '=='))))))
                      (fa_args
                        ((Expr_name (Var_name E3)) (Expr_name (Var_name HdM)))))))))
              (c_rhs
                (Expr_apply
                  ((fa_name (Expr_name (Atom_name (Atom ukeymerge2_2))))
                    (fa_args
                      ((Expr_name (Var_name I)) (Expr_name (Var_name T1))
                        (Expr_name (Var_name E1)) (Expr_name (Var_name H1))
                        (Expr_name (Var_name T3)) (Expr_name (Var_name M))))))))
            ((c_lhs
               ((Pattern_binding (Var_name I)) (Pattern_binding (Var_name E1))
                 (Pattern_binding (Var_name T1))
                 (Pattern_binding (Var_name H1)) (Pattern_list ())
                 (Pattern_binding (Var_name _HdM))
                 (Pattern_binding (Var_name _D)) (Pattern_binding (Var_name M))
                 (Pattern_binding (Var_name _E3))
                 (Pattern_binding (Var_name H3))
                 (Pattern_binding (Var_name T3))))
              (c_guard ())
              (c_rhs
                (Expr_apply
                  ((fa_name (Expr_name (Atom_name (Atom ukeymerge2_2))))
                    (fa_args
                      ((Expr_name (Var_name I)) (Expr_name (Var_name T1))
                        (Expr_name (Var_name E1)) (Expr_name (Var_name H1))
                        (Expr_name (Var_name T3))
                        (Expr_cons ((Expr_name (Var_name H3)))
                          (Expr_name (Var_name M)))))))))))
        (fd_spec ())))
    (Module_comment (Comment " E1 =< E2. Inlined."))
    (Function_decl
      ((fd_name (Atom ukeymerge3_12)) (fd_arity 13)
        (fd_cases
          (((c_lhs
              ((Pattern_binding (Var_name I)) (Pattern_binding (Var_name E1))
                (Pattern_binding (Var_name T1)) (Pattern_binding (Var_name H1))
                (Pattern_binding (Var_name E2)) (Pattern_binding (Var_name H2))
                (Pattern_binding (Var_name T2)) (Pattern_binding (Var_name E3))
                (Pattern_binding (Var_name H3)) (Pattern_binding (Var_name T3))
                (Pattern_binding (Var_name M))
                (Pattern_binding (Var_name _HdM))
                (Pattern_binding (Var_name D))))
             (c_guard
               (((Expr_apply
                   ((fa_name
                      (Expr_name
                        (Qualified_name (n_mod (Atom_name (Atom erlang)))
                          (n_name (Atom_name (Atom '=<'))))))
                     (fa_args
                       ((Expr_name (Var_name E1)) (Expr_name (Var_name E3)))))))))
             (c_rhs
               (Expr_apply
                 ((fa_name (Expr_name (Atom_name (Atom ukeymerge3_1))))
                   (fa_args
                     ((Expr_name (Var_name I)) (Expr_name (Var_name T1))
                       (Expr_name (Var_name D)) (Expr_name (Var_name E1))
                       (Expr_name (Var_name E2)) (Expr_name (Var_name H2))
                       (Expr_name (Var_name T2))
                       (Expr_cons ((Expr_name (Var_name H1)))
                         (Expr_name (Var_name M)))
                       (Expr_name (Var_name E3)) (Expr_name (Var_name H3))
                       (Expr_name (Var_name T3))))))))
            ((c_lhs
               ((Pattern_binding (Var_name I)) (Pattern_binding (Var_name E1))
                 (Pattern_binding (Var_name T1))
                 (Pattern_binding (Var_name H1))
                 (Pattern_binding (Var_name E2))
                 (Pattern_binding (Var_name H2))
                 (Pattern_binding (Var_name T2))
                 (Pattern_binding (Var_name E3))
                 (Pattern_binding (Var_name _H3))
                 (Pattern_binding (Var_name T3)) (Pattern_binding (Var_name M))
                 (Pattern_binding (Var_name HdM))
                 (Pattern_binding (Var_name _D))))
              (c_guard
                (((Expr_apply
                    ((fa_name
                       (Expr_name
                         (Qualified_name (n_mod (Atom_name (Atom erlang)))
                           (n_name (Atom_name (Atom '=='))))))
                      (fa_args
                        ((Expr_name (Var_name E3)) (Expr_name (Var_name HdM)))))))))
              (c_rhs
                (Expr_apply
                  ((fa_name (Expr_name (Atom_name (Atom ukeymerge3_12_3))))
                    (fa_args
                      ((Expr_name (Var_name I)) (Expr_name (Var_name E1))
                        (Expr_name (Var_name T1)) (Expr_name (Var_name H1))
                        (Expr_name (Var_name E2)) (Expr_name (Var_name H2))
                        (Expr_name (Var_name T2)) (Expr_name (Var_name M))
                        (Expr_name (Var_name T3))))))))
            ((c_lhs
               ((Pattern_binding (Var_name I)) (Pattern_binding (Var_name E1))
                 (Pattern_binding (Var_name T1))
                 (Pattern_binding (Var_name H1))
                 (Pattern_binding (Var_name E2))
                 (Pattern_binding (Var_name H2))
                 (Pattern_binding (Var_name T2))
                 (Pattern_binding (Var_name _E3))
                 (Pattern_binding (Var_name H3))
                 (Pattern_binding (Var_name T3)) (Pattern_binding (Var_name M))
                 (Pattern_binding (Var_name _HdM))
                 (Pattern_binding (Var_name _D))))
              (c_guard ())
              (c_rhs
                (Expr_apply
                  ((fa_name (Expr_name (Atom_name (Atom ukeymerge3_12_3))))
                    (fa_args
                      ((Expr_name (Var_name I)) (Expr_name (Var_name E1))
                        (Expr_name (Var_name T1)) (Expr_name (Var_name H1))
                        (Expr_name (Var_name E2)) (Expr_name (Var_name H2))
                        (Expr_name (Var_name T2))
                        (Expr_cons ((Expr_name (Var_name H3)))
                          (Expr_name (Var_name M)))
                        (Expr_name (Var_name T3))))))))))
        (fd_spec ())))
    (Module_comment (Comment " E1 =< E2, take L3 apart."))
    (Function_decl
      ((fd_name (Atom ukeymerge3_12_3)) (fd_arity 9)
        (fd_cases
          (((c_lhs
              ((Pattern_binding (Var_name I)) (Pattern_binding (Var_name E1))
                (Pattern_binding (Var_name T1)) (Pattern_binding (Var_name H1))
                (Pattern_binding (Var_name E2)) (Pattern_binding (Var_name H2))
                (Pattern_binding (Var_name T2)) (Pattern_binding (Var_name M))
                (Pattern_cons ((Pattern_binding (Var_name H3)))
                  (Pattern_binding (Var_name T3)))))
             (c_guard ())
             (c_rhs
               (Expr_case
                 (Expr_apply
                   ((fa_name (Expr_name (Atom_name (Atom element))))
                     (fa_args
                       ((Expr_name (Var_name I)) (Expr_name (Var_name H3))))))
                 (((c_lhs ((Pattern_binding (Var_name E3))))
                    (c_guard
                      (((Expr_apply
                          ((fa_name
                             (Expr_name
                               (Qualified_name
                                 (n_mod (Atom_name (Atom erlang)))
                                 (n_name (Atom_name (Atom '=<'))))))
                            (fa_args
                              ((Expr_name (Var_name E1))
                                (Expr_name (Var_name E3)))))))))
                    (c_rhs
                      (Expr_apply
                        ((fa_name (Expr_name (Atom_name (Atom ukeymerge3_1))))
                          (fa_args
                            ((Expr_name (Var_name I)) (Expr_name (Var_name T1))
                              (Expr_name (Var_name T1))
                              (Expr_name (Var_name E1))
                              (Expr_name (Var_name E2))
                              (Expr_name (Var_name H2))
                              (Expr_name (Var_name T2))
                              (Expr_cons ((Expr_name (Var_name H1)))
                                (Expr_name (Var_name M)))
                              (Expr_name (Var_name E3))
                              (Expr_name (Var_name H3))
                              (Expr_name (Var_name T3))))))))
                   ((c_lhs ((Pattern_binding (Var_name _E3)))) (c_guard ())
                     (c_rhs
                       (Expr_apply
                         ((fa_name
                            (Expr_name (Atom_name (Atom ukeymerge3_12_3))))
                           (fa_args
                             ((Expr_name (Var_name I))
                               (Expr_name (Var_name E1))
                               (Expr_name (Var_name T1))
                               (Expr_name (Var_name H1))
                               (Expr_name (Var_name E2))
                               (Expr_name (Var_name H2))
                               (Expr_name (Var_name T2))
                               (Expr_cons ((Expr_name (Var_name H3)))
                                 (Expr_name (Var_name M)))
                               (Expr_name (Var_name T3))))))))))))
            ((c_lhs
               ((Pattern_binding (Var_name I)) (Pattern_binding (Var_name E1))
                 (Pattern_binding (Var_name T1))
                 (Pattern_binding (Var_name H1))
                 (Pattern_binding (Var_name E2))
                 (Pattern_binding (Var_name H2))
                 (Pattern_binding (Var_name T2)) (Pattern_binding (Var_name M))
                 (Pattern_list ())))
              (c_guard ())
              (c_rhs
                (Expr_apply
                  ((fa_name (Expr_name (Atom_name (Atom ukeymerge2_1))))
                    (fa_args
                      ((Expr_name (Var_name I)) (Expr_name (Var_name T1))
                        (Expr_name (Var_name E2)) (Expr_name (Var_name E1))
                        (Expr_name (Var_name T2))
                        (Expr_cons ((Expr_name (Var_name H1)))
                          (Expr_name (Var_name M)))
                        (Expr_name (Var_name H2))))))))))
        (fd_spec ())))
    (Module_comment (Comment " E1 > E2. Inlined."))
    (Function_decl
      ((fd_name (Atom ukeymerge3_21)) (fd_arity 13)
        (fd_cases
          (((c_lhs
              ((Pattern_binding (Var_name I)) (Pattern_binding (Var_name E1))
                (Pattern_binding (Var_name T1)) (Pattern_binding (Var_name H1))
                (Pattern_binding (Var_name E2)) (Pattern_binding (Var_name H2))
                (Pattern_binding (Var_name T2)) (Pattern_binding (Var_name E3))
                (Pattern_binding (Var_name H3)) (Pattern_binding (Var_name T3))
                (Pattern_binding (Var_name M))
                (Pattern_binding (Var_name _HdM))
                (Pattern_binding (Var_name D))))
             (c_guard
               (((Expr_apply
                   ((fa_name
                      (Expr_name
                        (Qualified_name (n_mod (Atom_name (Atom erlang)))
                          (n_name (Atom_name (Atom '=<'))))))
                     (fa_args
                       ((Expr_name (Var_name E2)) (Expr_name (Var_name E3)))))))))
             (c_rhs
               (Expr_apply
                 ((fa_name (Expr_name (Atom_name (Atom ukeymerge3_2))))
                   (fa_args
                     ((Expr_name (Var_name I)) (Expr_name (Var_name E1))
                       (Expr_name (Var_name T1)) (Expr_name (Var_name H1))
                       (Expr_name (Var_name T2)) (Expr_name (Var_name E2))
                       (Expr_name (Var_name D))
                       (Expr_cons ((Expr_name (Var_name H2)))
                         (Expr_name (Var_name M)))
                       (Expr_name (Var_name E3)) (Expr_name (Var_name H3))
                       (Expr_name (Var_name T3))))))))
            ((c_lhs
               ((Pattern_binding (Var_name I)) (Pattern_binding (Var_name E1))
                 (Pattern_binding (Var_name T1))
                 (Pattern_binding (Var_name H1))
                 (Pattern_binding (Var_name E2))
                 (Pattern_binding (Var_name H2))
                 (Pattern_binding (Var_name T2))
                 (Pattern_binding (Var_name E3))
                 (Pattern_binding (Var_name _H3))
                 (Pattern_binding (Var_name T3)) (Pattern_binding (Var_name M))
                 (Pattern_binding (Var_name HdM))
                 (Pattern_binding (Var_name _D))))
              (c_guard
                (((Expr_apply
                    ((fa_name
                       (Expr_name
                         (Qualified_name (n_mod (Atom_name (Atom erlang)))
                           (n_name (Atom_name (Atom '=='))))))
                      (fa_args
                        ((Expr_name (Var_name E3)) (Expr_name (Var_name HdM)))))))))
              (c_rhs
                (Expr_apply
                  ((fa_name (Expr_name (Atom_name (Atom ukeymerge3_21_3))))
                    (fa_args
                      ((Expr_name (Var_name I)) (Expr_name (Var_name E1))
                        (Expr_name (Var_name T1)) (Expr_name (Var_name H1))
                        (Expr_name (Var_name E2)) (Expr_name (Var_name H2))
                        (Expr_name (Var_name T2)) (Expr_name (Var_name M))
                        (Expr_name (Var_name T3))))))))
            ((c_lhs
               ((Pattern_binding (Var_name I)) (Pattern_binding (Var_name E1))
                 (Pattern_binding (Var_name T1))
                 (Pattern_binding (Var_name H1))
                 (Pattern_binding (Var_name E2))
                 (Pattern_binding (Var_name H2))
                 (Pattern_binding (Var_name T2))
                 (Pattern_binding (Var_name _E3))
                 (Pattern_binding (Var_name H3))
                 (Pattern_binding (Var_name T3)) (Pattern_binding (Var_name M))
                 (Pattern_binding (Var_name _HdM))
                 (Pattern_binding (Var_name _D))))
              (c_guard ())
              (c_rhs
                (Expr_apply
                  ((fa_name (Expr_name (Atom_name (Atom ukeymerge3_21_3))))
                    (fa_args
                      ((Expr_name (Var_name I)) (Expr_name (Var_name E1))
                        (Expr_name (Var_name T1)) (Expr_name (Var_name H1))
                        (Expr_name (Var_name E2)) (Expr_name (Var_name H2))
                        (Expr_name (Var_name T2))
                        (Expr_cons ((Expr_name (Var_name H3)))
                          (Expr_name (Var_name M)))
                        (Expr_name (Var_name T3))))))))))
        (fd_spec ())))
    (Module_comment (Comment " E1 > E2, take L3 apart."))
    (Function_decl
      ((fd_name (Atom ukeymerge3_21_3)) (fd_arity 9)
        (fd_cases
          (((c_lhs
              ((Pattern_binding (Var_name I)) (Pattern_binding (Var_name E1))
                (Pattern_binding (Var_name T1)) (Pattern_binding (Var_name H1))
                (Pattern_binding (Var_name E2)) (Pattern_binding (Var_name H2))
                (Pattern_binding (Var_name T2)) (Pattern_binding (Var_name M))
                (Pattern_cons ((Pattern_binding (Var_name H3)))
                  (Pattern_binding (Var_name T3)))))
             (c_guard ())
             (c_rhs
               (Expr_case
                 (Expr_apply
                   ((fa_name (Expr_name (Atom_name (Atom element))))
                     (fa_args
                       ((Expr_name (Var_name I)) (Expr_name (Var_name H3))))))
                 (((c_lhs ((Pattern_binding (Var_name E3))))
                    (c_guard
                      (((Expr_apply
                          ((fa_name
                             (Expr_name
                               (Qualified_name
                                 (n_mod (Atom_name (Atom erlang)))
                                 (n_name (Atom_name (Atom '=<'))))))
                            (fa_args
                              ((Expr_name (Var_name E2))
                                (Expr_name (Var_name E3)))))))))
                    (c_rhs
                      (Expr_apply
                        ((fa_name (Expr_name (Atom_name (Atom ukeymerge3_2))))
                          (fa_args
                            ((Expr_name (Var_name I)) (Expr_name (Var_name E1))
                              (Expr_name (Var_name T1))
                              (Expr_name (Var_name H1))
                              (Expr_name (Var_name T2))
                              (Expr_name (Var_name E2))
                              (Expr_name (Var_name T2))
                              (Expr_cons ((Expr_name (Var_name H2)))
                                (Expr_name (Var_name M)))
                              (Expr_name (Var_name E3))
                              (Expr_name (Var_name H3))
                              (Expr_name (Var_name T3))))))))
                   ((c_lhs ((Pattern_binding (Var_name _E3)))) (c_guard ())
                     (c_rhs
                       (Expr_apply
                         ((fa_name
                            (Expr_name (Atom_name (Atom ukeymerge3_21_3))))
                           (fa_args
                             ((Expr_name (Var_name I))
                               (Expr_name (Var_name E1))
                               (Expr_name (Var_name T1))
                               (Expr_name (Var_name H1))
                               (Expr_name (Var_name E2))
                               (Expr_name (Var_name H2))
                               (Expr_name (Var_name T2))
                               (Expr_cons ((Expr_name (Var_name H3)))
                                 (Expr_name (Var_name M)))
                               (Expr_name (Var_name T3))))))))))))
            ((c_lhs
               ((Pattern_binding (Var_name I)) (Pattern_binding (Var_name E1))
                 (Pattern_binding (Var_name T1))
                 (Pattern_binding (Var_name H1))
                 (Pattern_binding (Var_name _E2))
                 (Pattern_binding (Var_name H2))
                 (Pattern_binding (Var_name T2)) (Pattern_binding (Var_name M))
                 (Pattern_list ())))
              (c_guard ())
              (c_rhs
                (Expr_apply
                  ((fa_name (Expr_name (Atom_name (Atom ukeymerge2_2))))
                    (fa_args
                      ((Expr_name (Var_name I)) (Expr_name (Var_name T1))
                        (Expr_name (Var_name E1)) (Expr_name (Var_name H1))
                        (Expr_name (Var_name T2))
                        (Expr_cons ((Expr_name (Var_name H2)))
                          (Expr_name (Var_name M)))))))))))
        (fd_spec ())))
    (Module_comment
      (Comment
        "%% Two extra arguments, D1 and D2, just to avoid some move instructions."))
    (Module_comment (Comment "% Take L1 apart."))
    (Function_decl
      ((fd_name (Atom rukeymerge3_1)) (fd_arity 11)
        (fd_cases
          (((c_lhs
              ((Pattern_binding (Var_name I))
                (Pattern_cons ((Pattern_binding (Var_name H1)))
                  (Pattern_binding (Var_name T1)))
                (Pattern_binding (Var_name D1)) (Pattern_binding (Var_name D2))
                (Pattern_binding (Var_name E2)) (Pattern_binding (Var_name H2))
                (Pattern_binding (Var_name T2)) (Pattern_binding (Var_name M))
                (Pattern_binding (Var_name E3)) (Pattern_binding (Var_name H3))
                (Pattern_binding (Var_name T3))))
             (c_guard ())
             (c_rhs
               (Expr_case
                 (Expr_apply
                   ((fa_name (Expr_name (Atom_name (Atom element))))
                     (fa_args
                       ((Expr_name (Var_name I)) (Expr_name (Var_name H1))))))
                 (((c_lhs ((Pattern_binding (Var_name E1))))
                    (c_guard
                      (((Expr_apply
                          ((fa_name
                             (Expr_name
                               (Qualified_name
                                 (n_mod (Atom_name (Atom erlang)))
                                 (n_name (Atom_name (Atom '=<'))))))
                            (fa_args
                              ((Expr_name (Var_name E1))
                                (Expr_name (Var_name E2)))))))))
                    (c_rhs
                      (Expr_apply
                        ((fa_name
                           (Expr_name (Atom_name (Atom rukeymerge3_12a))))
                          (fa_args
                            ((Expr_name (Var_name I)) (Expr_name (Var_name E1))
                              (Expr_name (Var_name H1))
                              (Expr_name (Var_name T1))
                              (Expr_name (Var_name E2))
                              (Expr_name (Var_name H2))
                              (Expr_name (Var_name T2))
                              (Expr_name (Var_name E3))
                              (Expr_name (Var_name H3))
                              (Expr_name (Var_name T3))
                              (Expr_name (Var_name M))))))))
                   ((c_lhs ((Pattern_binding (Var_name E1)))) (c_guard ())
                     (c_rhs
                       (Expr_apply
                         ((fa_name
                            (Expr_name (Atom_name (Atom rukeymerge3_21a))))
                           (fa_args
                             ((Expr_name (Var_name I))
                               (Expr_name (Var_name E1))
                               (Expr_name (Var_name H1))
                               (Expr_name (Var_name T1))
                               (Expr_name (Var_name E2))
                               (Expr_name (Var_name H2))
                               (Expr_name (Var_name T2))
                               (Expr_name (Var_name E3))
                               (Expr_name (Var_name H3))
                               (Expr_name (Var_name T3))
                               (Expr_name (Var_name M))
                               (Expr_name (Var_name D1))
                               (Expr_name (Var_name D2))))))))))))
            ((c_lhs
               ((Pattern_binding (Var_name I)) (Pattern_list ())
                 (Pattern_binding (Var_name _D1))
                 (Pattern_binding (Var_name _D2))
                 (Pattern_binding (Var_name E2))
                 (Pattern_binding (Var_name H2))
                 (Pattern_binding (Var_name T2)) (Pattern_binding (Var_name M))
                 (Pattern_binding (Var_name E3))
                 (Pattern_binding (Var_name H3))
                 (Pattern_binding (Var_name T3))))
              (c_guard
                (((Expr_apply
                    ((fa_name
                       (Expr_name
                         (Qualified_name (n_mod (Atom_name (Atom erlang)))
                           (n_name (Atom_name (Atom '=<'))))))
                      (fa_args
                        ((Expr_name (Var_name E2)) (Expr_name (Var_name E3)))))))))
              (c_rhs
                (Expr_apply
                  ((fa_name (Expr_name (Atom_name (Atom rukeymerge2_2))))
                    (fa_args
                      ((Expr_name (Var_name I)) (Expr_name (Var_name T2))
                        (Expr_name (Var_name E2)) (Expr_name (Var_name T3))
                        (Expr_name (Var_name M)) (Expr_name (Var_name E3))
                        (Expr_name (Var_name H3)) (Expr_name (Var_name H2))))))))
            ((c_lhs
               ((Pattern_binding (Var_name I)) (Pattern_list ())
                 (Pattern_binding (Var_name _D1))
                 (Pattern_binding (Var_name _D2))
                 (Pattern_binding (Var_name _E2))
                 (Pattern_binding (Var_name H2))
                 (Pattern_binding (Var_name T2)) (Pattern_binding (Var_name M))
                 (Pattern_binding (Var_name E3))
                 (Pattern_binding (Var_name H3))
                 (Pattern_binding (Var_name T3))))
              (c_guard ())
              (c_rhs
                (Expr_apply
                  ((fa_name (Expr_name (Atom_name (Atom rukeymerge2_1))))
                    (fa_args
                      ((Expr_name (Var_name I)) (Expr_name (Var_name T2))
                        (Expr_name (Var_name E3)) (Expr_name (Var_name T3))
                        (Expr_cons ((Expr_name (Var_name H2)))
                          (Expr_name (Var_name M)))
                        (Expr_name (Var_name H3))))))))))
        (fd_spec ())))
    (Module_comment (Comment " E1 =< E2. Inlined."))
    (Function_decl
      ((fd_name (Atom rukeymerge3_12a)) (fd_arity 11)
        (fd_cases
          (((c_lhs
              ((Pattern_binding (Var_name I)) (Pattern_binding (Var_name E1))
                (Pattern_binding (Var_name H1)) (Pattern_binding (Var_name T1))
                (Pattern_binding (Var_name E2)) (Pattern_binding (Var_name H2))
                (Pattern_binding (Var_name T2)) (Pattern_binding (Var_name E3))
                (Pattern_binding (Var_name H3)) (Pattern_binding (Var_name T3))
                (Pattern_binding (Var_name M))))
             (c_guard
               (((Expr_apply
                   ((fa_name
                      (Expr_name
                        (Qualified_name (n_mod (Atom_name (Atom erlang)))
                          (n_name (Atom_name (Atom '=<'))))))
                     (fa_args
                       ((Expr_name (Var_name E2)) (Expr_name (Var_name E3)))))))))
             (c_rhs
               (Expr_apply
                 ((fa_name (Expr_name (Atom_name (Atom rukeymerge3_12_3))))
                   (fa_args
                     ((Expr_name (Var_name I)) (Expr_name (Var_name E1))
                       (Expr_name (Var_name H1)) (Expr_name (Var_name T1))
                       (Expr_name (Var_name E2)) (Expr_name (Var_name H2))
                       (Expr_name (Var_name T2)) (Expr_name (Var_name M))
                       (Expr_name (Var_name E3)) (Expr_name (Var_name H3))
                       (Expr_name (Var_name T3))))))))
            ((c_lhs
               ((Pattern_binding (Var_name I)) (Pattern_binding (Var_name E1))
                 (Pattern_binding (Var_name H1))
                 (Pattern_binding (Var_name T1))
                 (Pattern_binding (Var_name E2))
                 (Pattern_binding (Var_name H2))
                 (Pattern_binding (Var_name T2))
                 (Pattern_binding (Var_name E3))
                 (Pattern_binding (Var_name H3))
                 (Pattern_binding (Var_name T3))
                 (Pattern_binding (Var_name M))))
              (c_guard ())
              (c_rhs
                (Expr_apply
                  ((fa_name (Expr_name (Atom_name (Atom rukeymerge3_2))))
                    (fa_args
                      ((Expr_name (Var_name I)) (Expr_name (Var_name E1))
                        (Expr_name (Var_name H1)) (Expr_name (Var_name T1))
                        (Expr_name (Var_name T2)) (Expr_name (Var_name H2))
                        (Expr_name (Var_name E2)) (Expr_name (Var_name M))
                        (Expr_name (Var_name E3)) (Expr_name (Var_name H3))
                        (Expr_name (Var_name T3))))))))))
        (fd_spec ())))
    (Module_comment (Comment " E1 > E2. Inlined"))
    (Function_decl
      ((fd_name (Atom rukeymerge3_21a)) (fd_arity 13)
        (fd_cases
          (((c_lhs
              ((Pattern_binding (Var_name I)) (Pattern_binding (Var_name E1))
                (Pattern_binding (Var_name H1)) (Pattern_binding (Var_name T1))
                (Pattern_binding (Var_name E2)) (Pattern_binding (Var_name H2))
                (Pattern_binding (Var_name T2)) (Pattern_binding (Var_name E3))
                (Pattern_binding (Var_name H3)) (Pattern_binding (Var_name T3))
                (Pattern_binding (Var_name M)) (Pattern_binding (Var_name _D1))
                (Pattern_binding (Var_name _D2))))
             (c_guard
               (((Expr_apply
                   ((fa_name
                      (Expr_name
                        (Qualified_name (n_mod (Atom_name (Atom erlang)))
                          (n_name (Atom_name (Atom '=<'))))))
                     (fa_args
                       ((Expr_name (Var_name E1)) (Expr_name (Var_name E3)))))))))
             (c_rhs
               (Expr_apply
                 ((fa_name (Expr_name (Atom_name (Atom rukeymerge3_21_3))))
                   (fa_args
                     ((Expr_name (Var_name I)) (Expr_name (Var_name E1))
                       (Expr_name (Var_name H1)) (Expr_name (Var_name T1))
                       (Expr_name (Var_name E2)) (Expr_name (Var_name H2))
                       (Expr_name (Var_name T2)) (Expr_name (Var_name M))
                       (Expr_name (Var_name E3)) (Expr_name (Var_name H3))
                       (Expr_name (Var_name T3))))))))
            ((c_lhs
               ((Pattern_binding (Var_name I)) (Pattern_binding (Var_name _E1))
                 (Pattern_binding (Var_name H1))
                 (Pattern_binding (Var_name T1))
                 (Pattern_binding (Var_name E2))
                 (Pattern_binding (Var_name H2))
                 (Pattern_binding (Var_name T2))
                 (Pattern_binding (Var_name E3))
                 (Pattern_binding (Var_name H3))
                 (Pattern_binding (Var_name T3)) (Pattern_binding (Var_name M))
                 (Pattern_binding (Var_name D1))
                 (Pattern_binding (Var_name D2))))
              (c_guard ())
              (c_rhs
                (Expr_apply
                  ((fa_name (Expr_name (Atom_name (Atom rukeymerge3_1))))
                    (fa_args
                      ((Expr_name (Var_name I)) (Expr_name (Var_name T1))
                        (Expr_name (Var_name D1)) (Expr_name (Var_name D2))
                        (Expr_name (Var_name E2)) (Expr_name (Var_name H2))
                        (Expr_name (Var_name T2))
                        (Expr_cons ((Expr_name (Var_name H1)))
                          (Expr_name (Var_name M)))
                        (Expr_name (Var_name E3)) (Expr_name (Var_name H3))
                        (Expr_name (Var_name T3))))))))))
        (fd_spec ())))
    (Module_comment (Comment "% Take L2 apart. E2M > E3. E2M > E2."))
    (Function_decl
      ((fd_name (Atom rukeymerge3_2)) (fd_arity 11)
        (fd_cases
          (((c_lhs
              ((Pattern_binding (Var_name I)) (Pattern_binding (Var_name E1))
                (Pattern_binding (Var_name H1)) (Pattern_binding (Var_name T1))
                (Pattern_cons ((Pattern_binding (Var_name H2)))
                  (Pattern_binding (Var_name T2)))
                (Pattern_binding (Var_name H2M))
                (Pattern_binding (Var_name E2M)) (Pattern_binding (Var_name M))
                (Pattern_binding (Var_name E3)) (Pattern_binding (Var_name H3))
                (Pattern_binding (Var_name T3))))
             (c_guard ())
             (c_rhs
               (Expr_case
                 (Expr_apply
                   ((fa_name (Expr_name (Atom_name (Atom element))))
                     (fa_args
                       ((Expr_name (Var_name I)) (Expr_name (Var_name H2))))))
                 (((c_lhs ((Pattern_binding (Var_name E2))))
                    (c_guard
                      (((Expr_apply
                          ((fa_name
                             (Expr_name
                               (Qualified_name
                                 (n_mod (Atom_name (Atom erlang)))
                                 (n_name (Atom_name (Atom '=<'))))))
                            (fa_args
                              ((Expr_name (Var_name E1))
                                (Expr_name (Var_name E2)))))))))
                    (c_rhs
                      (Expr_comment (Comment " E2M > E1.")
                        (Expr_apply
                          ((fa_name
                             (Expr_name (Atom_name (Atom rukeymerge3_12b))))
                            (fa_args
                              ((Expr_name (Var_name I))
                                (Expr_name (Var_name E1))
                                (Expr_name (Var_name H1))
                                (Expr_name (Var_name T1))
                                (Expr_name (Var_name E2))
                                (Expr_name (Var_name H2))
                                (Expr_name (Var_name T2))
                                (Expr_name (Var_name E3))
                                (Expr_name (Var_name H3))
                                (Expr_name (Var_name T3))
                                (Expr_name (Var_name M))
                                (Expr_name (Var_name H2M)))))))))
                   ((c_lhs ((Pattern_binding (Var_name E2))))
                     (c_guard
                       (((Expr_apply
                           ((fa_name
                              (Expr_name
                                (Qualified_name
                                  (n_mod (Atom_name (Atom erlang)))
                                  (n_name (Atom_name (Atom '=='))))))
                             (fa_args
                               ((Expr_name (Var_name E1))
                                 (Expr_name (Var_name E2M)))))))))
                     (c_rhs
                       (Expr_apply
                         ((fa_name
                            (Expr_name (Atom_name (Atom rukeymerge3_1))))
                           (fa_args
                             ((Expr_name (Var_name I))
                               (Expr_name (Var_name T1))
                               (Expr_name (Var_name H1))
                               (Expr_name (Var_name T1))
                               (Expr_name (Var_name E2))
                               (Expr_name (Var_name H2))
                               (Expr_name (Var_name T2))
                               (Expr_cons ((Expr_name (Var_name H1)))
                                 (Expr_name (Var_name M)))
                               (Expr_name (Var_name E3))
                               (Expr_name (Var_name H3))
                               (Expr_name (Var_name T3))))))))
                   ((c_lhs ((Pattern_binding (Var_name E2)))) (c_guard ())
                     (c_rhs
                       (Expr_comment (Comment " E2M > E1.")
                         (Expr_apply
                           ((fa_name
                              (Expr_name (Atom_name (Atom rukeymerge3_21b))))
                             (fa_args
                               ((Expr_name (Var_name I))
                                 (Expr_name (Var_name E1))
                                 (Expr_name (Var_name H1))
                                 (Expr_name (Var_name T1))
                                 (Expr_name (Var_name E2))
                                 (Expr_name (Var_name H2))
                                 (Expr_name (Var_name T2))
                                 (Expr_name (Var_name E3))
                                 (Expr_name (Var_name H3))
                                 (Expr_name (Var_name T3))
                                 (Expr_name (Var_name M))
                                 (Expr_name (Var_name H2M)))))))))))))
            ((c_lhs
               ((Pattern_binding (Var_name I)) (Pattern_binding (Var_name E1))
                 (Pattern_binding (Var_name H1))
                 (Pattern_binding (Var_name T1)) (Pattern_list ())
                 (Pattern_binding (Var_name _H2M))
                 (Pattern_binding (Var_name E2M))
                 (Pattern_binding (Var_name M)) (Pattern_binding (Var_name E3))
                 (Pattern_binding (Var_name H3))
                 (Pattern_binding (Var_name T3))))
              (c_guard
                (((Expr_apply
                    ((fa_name
                       (Expr_name
                         (Qualified_name (n_mod (Atom_name (Atom erlang)))
                           (n_name (Atom_name (Atom '=='))))))
                      (fa_args
                        ((Expr_name (Var_name E1)) (Expr_name (Var_name E2M)))))))))
              (c_rhs
                (Expr_apply
                  ((fa_name (Expr_name (Atom_name (Atom rukeymerge2_1))))
                    (fa_args
                      ((Expr_name (Var_name I)) (Expr_name (Var_name T1))
                        (Expr_name (Var_name E3)) (Expr_name (Var_name T3))
                        (Expr_cons ((Expr_name (Var_name H1)))
                          (Expr_name (Var_name M)))
                        (Expr_name (Var_name H3))))))))
            ((c_lhs
               ((Pattern_binding (Var_name I)) (Pattern_binding (Var_name E1))
                 (Pattern_binding (Var_name H1))
                 (Pattern_binding (Var_name T1)) (Pattern_list ())
                 (Pattern_binding (Var_name H2M))
                 (Pattern_binding (Var_name _E2M))
                 (Pattern_binding (Var_name M)) (Pattern_binding (Var_name E3))
                 (Pattern_binding (Var_name H3))
                 (Pattern_binding (Var_name T3))))
              (c_guard
                (((Expr_apply
                    ((fa_name
                       (Expr_name
                         (Qualified_name (n_mod (Atom_name (Atom erlang)))
                           (n_name (Atom_name (Atom '=<'))))))
                      (fa_args
                        ((Expr_name (Var_name E1)) (Expr_name (Var_name E3)))))))))
              (c_rhs
                (Expr_apply
                  ((fa_name (Expr_name (Atom_name (Atom rukeymerge2_2))))
                    (fa_args
                      ((Expr_name (Var_name I)) (Expr_name (Var_name T1))
                        (Expr_name (Var_name E1)) (Expr_name (Var_name T3))
                        (Expr_cons ((Expr_name (Var_name H2M)))
                          (Expr_name (Var_name M)))
                        (Expr_name (Var_name E3)) (Expr_name (Var_name H3))
                        (Expr_name (Var_name H1))))))))
            ((c_lhs
               ((Pattern_binding (Var_name I)) (Pattern_binding (Var_name _E1))
                 (Pattern_binding (Var_name H1))
                 (Pattern_binding (Var_name T1)) (Pattern_list ())
                 (Pattern_binding (Var_name H2M))
                 (Pattern_binding (Var_name _E2M))
                 (Pattern_binding (Var_name M)) (Pattern_binding (Var_name E3))
                 (Pattern_binding (Var_name H3))
                 (Pattern_binding (Var_name T3))))
              (c_guard ())
              (c_rhs
                (Expr_apply
                  ((fa_name (Expr_name (Atom_name (Atom rukeymerge2_1))))
                    (fa_args
                      ((Expr_name (Var_name I)) (Expr_name (Var_name T1))
                        (Expr_name (Var_name E3)) (Expr_name (Var_name T3))
                        (Expr_cons
                          ((Expr_name (Var_name H1))
                            (Expr_name (Var_name H2M)))
                          (Expr_name (Var_name M)))
                        (Expr_name (Var_name H3))))))))))
        (fd_spec ())))
    (Module_comment (Comment " E1 =< E2. Inlined."))
    (Function_decl
      ((fd_name (Atom rukeymerge3_12b)) (fd_arity 12)
        (fd_cases
          (((c_lhs
              ((Pattern_binding (Var_name I)) (Pattern_binding (Var_name E1))
                (Pattern_binding (Var_name H1)) (Pattern_binding (Var_name T1))
                (Pattern_binding (Var_name E2)) (Pattern_binding (Var_name H2))
                (Pattern_binding (Var_name T2)) (Pattern_binding (Var_name E3))
                (Pattern_binding (Var_name H3)) (Pattern_binding (Var_name T3))
                (Pattern_binding (Var_name M))
                (Pattern_binding (Var_name H2M))))
             (c_guard
               (((Expr_apply
                   ((fa_name
                      (Expr_name
                        (Qualified_name (n_mod (Atom_name (Atom erlang)))
                          (n_name (Atom_name (Atom '=<'))))))
                     (fa_args
                       ((Expr_name (Var_name E2)) (Expr_name (Var_name E3)))))))))
             (c_rhs
               (Expr_apply
                 ((fa_name (Expr_name (Atom_name (Atom rukeymerge3_12_3))))
                   (fa_args
                     ((Expr_name (Var_name I)) (Expr_name (Var_name E1))
                       (Expr_name (Var_name H1)) (Expr_name (Var_name T1))
                       (Expr_name (Var_name E2)) (Expr_name (Var_name H2))
                       (Expr_name (Var_name T2))
                       (Expr_cons ((Expr_name (Var_name H2M)))
                         (Expr_name (Var_name M)))
                       (Expr_name (Var_name E3)) (Expr_name (Var_name H3))
                       (Expr_name (Var_name T3))))))))
            ((c_lhs
               ((Pattern_binding (Var_name I)) (Pattern_binding (Var_name E1))
                 (Pattern_binding (Var_name H1))
                 (Pattern_binding (Var_name T1))
                 (Pattern_binding (Var_name E2))
                 (Pattern_binding (Var_name H2))
                 (Pattern_binding (Var_name T2))
                 (Pattern_binding (Var_name E3))
                 (Pattern_binding (Var_name H3))
                 (Pattern_binding (Var_name T3)) (Pattern_binding (Var_name M))
                 (Pattern_binding (Var_name H2M))))
              (c_guard ())
              (c_rhs
                (Expr_apply
                  ((fa_name (Expr_name (Atom_name (Atom rukeymerge3_2))))
                    (fa_args
                      ((Expr_name (Var_name I)) (Expr_name (Var_name E1))
                        (Expr_name (Var_name H1)) (Expr_name (Var_name T1))
                        (Expr_name (Var_name T2)) (Expr_name (Var_name H2))
                        (Expr_name (Var_name E2))
                        (Expr_cons ((Expr_name (Var_name H2M)))
                          (Expr_name (Var_name M)))
                        (Expr_name (Var_name E3)) (Expr_name (Var_name H3))
                        (Expr_name (Var_name T3))))))))))
        (fd_spec ())))
    (Module_comment (Comment " E1 > E2. Inlined"))
    (Function_decl
      ((fd_name (Atom rukeymerge3_21b)) (fd_arity 12)
        (fd_cases
          (((c_lhs
              ((Pattern_binding (Var_name I)) (Pattern_binding (Var_name E1))
                (Pattern_binding (Var_name H1)) (Pattern_binding (Var_name T1))
                (Pattern_binding (Var_name E2)) (Pattern_binding (Var_name H2))
                (Pattern_binding (Var_name T2)) (Pattern_binding (Var_name E3))
                (Pattern_binding (Var_name H3)) (Pattern_binding (Var_name T3))
                (Pattern_binding (Var_name M))
                (Pattern_binding (Var_name H2M))))
             (c_guard
               (((Expr_apply
                   ((fa_name
                      (Expr_name
                        (Qualified_name (n_mod (Atom_name (Atom erlang)))
                          (n_name (Atom_name (Atom '=<'))))))
                     (fa_args
                       ((Expr_name (Var_name E1)) (Expr_name (Var_name E3)))))))))
             (c_rhs
               (Expr_apply
                 ((fa_name (Expr_name (Atom_name (Atom rukeymerge3_21_3))))
                   (fa_args
                     ((Expr_name (Var_name I)) (Expr_name (Var_name E1))
                       (Expr_name (Var_name H1)) (Expr_name (Var_name T1))
                       (Expr_name (Var_name E2)) (Expr_name (Var_name H2))
                       (Expr_name (Var_name T2))
                       (Expr_cons ((Expr_name (Var_name H2M)))
                         (Expr_name (Var_name M)))
                       (Expr_name (Var_name E3)) (Expr_name (Var_name H3))
                       (Expr_name (Var_name T3))))))))
            ((c_lhs
               ((Pattern_binding (Var_name I)) (Pattern_binding (Var_name _E1))
                 (Pattern_binding (Var_name H1))
                 (Pattern_binding (Var_name T1))
                 (Pattern_binding (Var_name E2))
                 (Pattern_binding (Var_name H2))
                 (Pattern_binding (Var_name T2))
                 (Pattern_binding (Var_name E3))
                 (Pattern_binding (Var_name H3))
                 (Pattern_binding (Var_name T3)) (Pattern_binding (Var_name M))
                 (Pattern_binding (Var_name H2M))))
              (c_guard ())
              (c_rhs
                (Expr_apply
                  ((fa_name (Expr_name (Atom_name (Atom rukeymerge3_1))))
                    (fa_args
                      ((Expr_name (Var_name I)) (Expr_name (Var_name T1))
                        (Expr_name (Var_name H1)) (Expr_name (Var_name T1))
                        (Expr_name (Var_name E2)) (Expr_name (Var_name H2))
                        (Expr_name (Var_name T2))
                        (Expr_cons
                          ((Expr_name (Var_name H1))
                            (Expr_name (Var_name H2M)))
                          (Expr_name (Var_name M)))
                        (Expr_name (Var_name E3)) (Expr_name (Var_name H3))
                        (Expr_name (Var_name T3))))))))))
        (fd_spec ())))
    (Module_comment (Comment " E1 =< E2, take L3 apart."))
    (Function_decl
      ((fd_name (Atom rukeymerge3_12_3)) (fd_arity 11)
        (fd_cases
          (((c_lhs
              ((Pattern_binding (Var_name I)) (Pattern_binding (Var_name E1))
                (Pattern_binding (Var_name H1)) (Pattern_binding (Var_name T1))
                (Pattern_binding (Var_name E2)) (Pattern_binding (Var_name H2))
                (Pattern_binding (Var_name T2)) (Pattern_binding (Var_name M))
                (Pattern_binding (Var_name E3M))
                (Pattern_binding (Var_name H3M))
                (Pattern_cons ((Pattern_binding (Var_name H3)))
                  (Pattern_binding (Var_name T3)))))
             (c_guard ())
             (c_rhs
               (Expr_case
                 (Expr_apply
                   ((fa_name (Expr_name (Atom_name (Atom element))))
                     (fa_args
                       ((Expr_name (Var_name I)) (Expr_name (Var_name H3))))))
                 (((c_lhs ((Pattern_binding (Var_name E3))))
                    (c_guard
                      (((Expr_apply
                          ((fa_name
                             (Expr_name
                               (Qualified_name
                                 (n_mod (Atom_name (Atom erlang)))
                                 (n_name (Atom_name (Atom '=<'))))))
                            (fa_args
                              ((Expr_name (Var_name E2))
                                (Expr_name (Var_name E3)))))))))
                    (c_rhs
                      (Expr_apply
                        ((fa_name
                           (Expr_name (Atom_name (Atom rukeymerge3_12_3))))
                          (fa_args
                            ((Expr_name (Var_name I)) (Expr_name (Var_name E1))
                              (Expr_name (Var_name H1))
                              (Expr_name (Var_name T1))
                              (Expr_name (Var_name E2))
                              (Expr_name (Var_name H2))
                              (Expr_name (Var_name T2))
                              (Expr_cons ((Expr_name (Var_name H3M)))
                                (Expr_name (Var_name M)))
                              (Expr_name (Var_name E3))
                              (Expr_name (Var_name H3))
                              (Expr_name (Var_name T3))))))))
                   ((c_lhs ((Pattern_binding (Var_name E3))))
                     (c_guard
                       (((Expr_apply
                           ((fa_name
                              (Expr_name
                                (Qualified_name
                                  (n_mod (Atom_name (Atom erlang)))
                                  (n_name (Atom_name (Atom '=='))))))
                             (fa_args
                               ((Expr_name (Var_name E2))
                                 (Expr_name (Var_name E3M)))))))))
                     (c_rhs
                       (Expr_apply
                         ((fa_name
                            (Expr_name (Atom_name (Atom rukeymerge3_2))))
                           (fa_args
                             ((Expr_name (Var_name I))
                               (Expr_name (Var_name E1))
                               (Expr_name (Var_name H1))
                               (Expr_name (Var_name T1))
                               (Expr_name (Var_name T2))
                               (Expr_name (Var_name H2))
                               (Expr_name (Var_name E2))
                               (Expr_name (Var_name M))
                               (Expr_name (Var_name E3))
                               (Expr_name (Var_name H3))
                               (Expr_name (Var_name T3))))))))
                   ((c_lhs ((Pattern_binding (Var_name E3)))) (c_guard ())
                     (c_rhs
                       (Expr_apply
                         ((fa_name
                            (Expr_name (Atom_name (Atom rukeymerge3_2))))
                           (fa_args
                             ((Expr_name (Var_name I))
                               (Expr_name (Var_name E1))
                               (Expr_name (Var_name H1))
                               (Expr_name (Var_name T1))
                               (Expr_name (Var_name T2))
                               (Expr_name (Var_name H2))
                               (Expr_name (Var_name E2))
                               (Expr_cons ((Expr_name (Var_name H3M)))
                                 (Expr_name (Var_name M)))
                               (Expr_name (Var_name E3))
                               (Expr_name (Var_name H3))
                               (Expr_name (Var_name T3))))))))))))
            ((c_lhs
               ((Pattern_binding (Var_name I)) (Pattern_binding (Var_name E1))
                 (Pattern_binding (Var_name H1))
                 (Pattern_binding (Var_name T1))
                 (Pattern_binding (Var_name E2))
                 (Pattern_binding (Var_name H2))
                 (Pattern_binding (Var_name T2)) (Pattern_binding (Var_name M))
                 (Pattern_binding (Var_name E3M))
                 (Pattern_binding (Var_name _H3M)) (Pattern_list ())))
              (c_guard
                (((Expr_apply
                    ((fa_name
                       (Expr_name
                         (Qualified_name (n_mod (Atom_name (Atom erlang)))
                           (n_name (Atom_name (Atom '=='))))))
                      (fa_args
                        ((Expr_name (Var_name E2)) (Expr_name (Var_name E3M)))))))))
              (c_rhs
                (Expr_apply
                  ((fa_name (Expr_name (Atom_name (Atom rukeymerge2_2))))
                    (fa_args
                      ((Expr_name (Var_name I)) (Expr_name (Var_name T1))
                        (Expr_name (Var_name E1)) (Expr_name (Var_name T2))
                        (Expr_name (Var_name M)) (Expr_name (Var_name E2))
                        (Expr_name (Var_name H2)) (Expr_name (Var_name H1))))))))
            ((c_lhs
               ((Pattern_binding (Var_name I)) (Pattern_binding (Var_name E1))
                 (Pattern_binding (Var_name H1))
                 (Pattern_binding (Var_name T1))
                 (Pattern_binding (Var_name E2))
                 (Pattern_binding (Var_name H2))
                 (Pattern_binding (Var_name T2)) (Pattern_binding (Var_name M))
                 (Pattern_binding (Var_name _E3M))
                 (Pattern_binding (Var_name H3M)) (Pattern_list ())))
              (c_guard ())
              (c_rhs
                (Expr_apply
                  ((fa_name (Expr_name (Atom_name (Atom rukeymerge2_2))))
                    (fa_args
                      ((Expr_name (Var_name I)) (Expr_name (Var_name T1))
                        (Expr_name (Var_name E1)) (Expr_name (Var_name T2))
                        (Expr_cons ((Expr_name (Var_name H3M)))
                          (Expr_name (Var_name M)))
                        (Expr_name (Var_name E2)) (Expr_name (Var_name H2))
                        (Expr_name (Var_name H1))))))))))
        (fd_spec ())))
    (Module_comment (Comment " E1 > E2, take L3 apart."))
    (Function_decl
      ((fd_name (Atom rukeymerge3_21_3)) (fd_arity 11)
        (fd_cases
          (((c_lhs
              ((Pattern_binding (Var_name I)) (Pattern_binding (Var_name E1))
                (Pattern_binding (Var_name H1)) (Pattern_binding (Var_name T1))
                (Pattern_binding (Var_name E2)) (Pattern_binding (Var_name H2))
                (Pattern_binding (Var_name T2)) (Pattern_binding (Var_name M))
                (Pattern_binding (Var_name E3M))
                (Pattern_binding (Var_name H3M))
                (Pattern_cons ((Pattern_binding (Var_name H3)))
                  (Pattern_binding (Var_name T3)))))
             (c_guard ())
             (c_rhs
               (Expr_case
                 (Expr_apply
                   ((fa_name (Expr_name (Atom_name (Atom element))))
                     (fa_args
                       ((Expr_name (Var_name I)) (Expr_name (Var_name H3))))))
                 (((c_lhs ((Pattern_binding (Var_name E3))))
                    (c_guard
                      (((Expr_apply
                          ((fa_name
                             (Expr_name
                               (Qualified_name
                                 (n_mod (Atom_name (Atom erlang)))
                                 (n_name (Atom_name (Atom '=<'))))))
                            (fa_args
                              ((Expr_name (Var_name E1))
                                (Expr_name (Var_name E3)))))))))
                    (c_rhs
                      (Expr_apply
                        ((fa_name
                           (Expr_name (Atom_name (Atom rukeymerge3_21_3))))
                          (fa_args
                            ((Expr_name (Var_name I)) (Expr_name (Var_name E1))
                              (Expr_name (Var_name H1))
                              (Expr_name (Var_name T1))
                              (Expr_name (Var_name E2))
                              (Expr_name (Var_name H2))
                              (Expr_name (Var_name T2))
                              (Expr_cons ((Expr_name (Var_name H3M)))
                                (Expr_name (Var_name M)))
                              (Expr_name (Var_name E3))
                              (Expr_name (Var_name H3))
                              (Expr_name (Var_name T3))))))))
                   ((c_lhs ((Pattern_binding (Var_name E3))))
                     (c_guard
                       (((Expr_apply
                           ((fa_name
                              (Expr_name
                                (Qualified_name
                                  (n_mod (Atom_name (Atom erlang)))
                                  (n_name (Atom_name (Atom '=='))))))
                             (fa_args
                               ((Expr_name (Var_name E1))
                                 (Expr_name (Var_name E3M)))))))))
                     (c_rhs
                       (Expr_apply
                         ((fa_name
                            (Expr_name (Atom_name (Atom rukeymerge3_1))))
                           (fa_args
                             ((Expr_name (Var_name I))
                               (Expr_name (Var_name T1))
                               (Expr_name (Var_name H1))
                               (Expr_name (Var_name T1))
                               (Expr_name (Var_name E2))
                               (Expr_name (Var_name H2))
                               (Expr_name (Var_name T2))
                               (Expr_cons ((Expr_name (Var_name H1)))
                                 (Expr_name (Var_name M)))
                               (Expr_name (Var_name E3))
                               (Expr_name (Var_name H3))
                               (Expr_name (Var_name T3))))))))
                   ((c_lhs ((Pattern_binding (Var_name E3)))) (c_guard ())
                     (c_rhs
                       (Expr_apply
                         ((fa_name
                            (Expr_name (Atom_name (Atom rukeymerge3_1))))
                           (fa_args
                             ((Expr_name (Var_name I))
                               (Expr_name (Var_name T1))
                               (Expr_name (Var_name H1))
                               (Expr_name (Var_name T1))
                               (Expr_name (Var_name E2))
                               (Expr_name (Var_name H2))
                               (Expr_name (Var_name T2))
                               (Expr_cons
                                 ((Expr_name (Var_name H1))
                                   (Expr_name (Var_name H3M)))
                                 (Expr_name (Var_name M)))
                               (Expr_name (Var_name E3))
                               (Expr_name (Var_name H3))
                               (Expr_name (Var_name T3))))))))))))
            ((c_lhs
               ((Pattern_binding (Var_name I)) (Pattern_binding (Var_name E1))
                 (Pattern_binding (Var_name H1))
                 (Pattern_binding (Var_name T1))
                 (Pattern_binding (Var_name E2))
                 (Pattern_binding (Var_name H2))
                 (Pattern_binding (Var_name T2)) (Pattern_binding (Var_name M))
                 (Pattern_binding (Var_name E3M))
                 (Pattern_binding (Var_name _H3M)) (Pattern_list ())))
              (c_guard
                (((Expr_apply
                    ((fa_name
                       (Expr_name
                         (Qualified_name (n_mod (Atom_name (Atom erlang)))
                           (n_name (Atom_name (Atom '=='))))))
                      (fa_args
                        ((Expr_name (Var_name E1)) (Expr_name (Var_name E3M)))))))))
              (c_rhs
                (Expr_apply
                  ((fa_name (Expr_name (Atom_name (Atom rukeymerge2_1))))
                    (fa_args
                      ((Expr_name (Var_name I)) (Expr_name (Var_name T1))
                        (Expr_name (Var_name E2)) (Expr_name (Var_name T2))
                        (Expr_cons ((Expr_name (Var_name H1)))
                          (Expr_name (Var_name M)))
                        (Expr_name (Var_name H2))))))))
            ((c_lhs
               ((Pattern_binding (Var_name I)) (Pattern_binding (Var_name _E1))
                 (Pattern_binding (Var_name H1))
                 (Pattern_binding (Var_name T1))
                 (Pattern_binding (Var_name E2))
                 (Pattern_binding (Var_name H2))
                 (Pattern_binding (Var_name T2)) (Pattern_binding (Var_name M))
                 (Pattern_binding (Var_name _E3M))
                 (Pattern_binding (Var_name H3M)) (Pattern_list ())))
              (c_guard ())
              (c_rhs
                (Expr_apply
                  ((fa_name (Expr_name (Atom_name (Atom rukeymerge2_1))))
                    (fa_args
                      ((Expr_name (Var_name I)) (Expr_name (Var_name T1))
                        (Expr_name (Var_name E2)) (Expr_name (Var_name T2))
                        (Expr_cons
                          ((Expr_name (Var_name H1))
                            (Expr_name (Var_name H3M)))
                          (Expr_name (Var_name M)))
                        (Expr_name (Var_name H2))))))))))
        (fd_spec ())))
    (Module_comment (Comment "% ukeymerge/3"))
    (Module_comment
      (Comment "% Elements from the first list are kept and prioritized."))
    (Function_decl
      ((fd_name (Atom ukeymerge2_1)) (fd_arity 7)
        (fd_cases
          (((c_lhs
              ((Pattern_binding (Var_name I))
                (Pattern_cons ((Pattern_binding (Var_name H1)))
                  (Pattern_binding (Var_name T1)))
                (Pattern_binding (Var_name E2))
                (Pattern_binding (Var_name HdM))
                (Pattern_binding (Var_name T2)) (Pattern_binding (Var_name M))
                (Pattern_binding (Var_name H2))))
             (c_guard ())
             (c_rhs
               (Expr_case
                 (Expr_apply
                   ((fa_name (Expr_name (Atom_name (Atom element))))
                     (fa_args
                       ((Expr_name (Var_name I)) (Expr_name (Var_name H1))))))
                 (((c_lhs ((Pattern_binding (Var_name E1))))
                    (c_guard
                      (((Expr_apply
                          ((fa_name
                             (Expr_name
                               (Qualified_name
                                 (n_mod (Atom_name (Atom erlang)))
                                 (n_name (Atom_name (Atom '=<'))))))
                            (fa_args
                              ((Expr_name (Var_name E1))
                                (Expr_name (Var_name E2)))))))))
                    (c_rhs
                      (Expr_apply
                        ((fa_name (Expr_name (Atom_name (Atom ukeymerge2_1))))
                          (fa_args
                            ((Expr_name (Var_name I)) (Expr_name (Var_name T1))
                              (Expr_name (Var_name E2))
                              (Expr_name (Var_name E1))
                              (Expr_name (Var_name T2))
                              (Expr_cons ((Expr_name (Var_name H1)))
                                (Expr_name (Var_name M)))
                              (Expr_name (Var_name H2))))))))
                   ((c_lhs ((Pattern_binding (Var_name E1))))
                     (c_guard
                       (((Expr_apply
                           ((fa_name
                              (Expr_name
                                (Qualified_name
                                  (n_mod (Atom_name (Atom erlang)))
                                  (n_name (Atom_name (Atom '=='))))))
                             (fa_args
                               ((Expr_name (Var_name E2))
                                 (Expr_name (Var_name HdM)))))))))
                     (c_rhs
                       (Expr_apply
                         ((fa_name (Expr_name (Atom_name (Atom ukeymerge2_2))))
                           (fa_args
                             ((Expr_name (Var_name I))
                               (Expr_name (Var_name T1))
                               (Expr_name (Var_name E1))
                               (Expr_name (Var_name H1))
                               (Expr_name (Var_name T2))
                               (Expr_name (Var_name M))))))))
                   ((c_lhs ((Pattern_binding (Var_name E1)))) (c_guard ())
                     (c_rhs
                       (Expr_apply
                         ((fa_name (Expr_name (Atom_name (Atom ukeymerge2_2))))
                           (fa_args
                             ((Expr_name (Var_name I))
                               (Expr_name (Var_name T1))
                               (Expr_name (Var_name E1))
                               (Expr_name (Var_name H1))
                               (Expr_name (Var_name T2))
                               (Expr_cons ((Expr_name (Var_name H2)))
                                 (Expr_name (Var_name M)))))))))))))
            ((c_lhs
               ((Pattern_binding (Var_name _I)) (Pattern_list ())
                 (Pattern_binding (Var_name E2))
                 (Pattern_binding (Var_name HdM))
                 (Pattern_binding (Var_name T2)) (Pattern_binding (Var_name M))
                 (Pattern_binding (Var_name _H2))))
              (c_guard
                (((Expr_apply
                    ((fa_name
                       (Expr_name
                         (Qualified_name (n_mod (Atom_name (Atom erlang)))
                           (n_name (Atom_name (Atom '=='))))))
                      (fa_args
                        ((Expr_name (Var_name E2)) (Expr_name (Var_name HdM)))))))))
              (c_rhs
                (Expr_apply
                  ((fa_name
                     (Expr_name
                       (Qualified_name (n_mod (Atom_name (Atom lists)))
                         (n_name (Atom_name (Atom reverse))))))
                    (fa_args
                      ((Expr_name (Var_name T2)) (Expr_name (Var_name M))))))))
            ((c_lhs
               ((Pattern_binding (Var_name _I)) (Pattern_list ())
                 (Pattern_binding (Var_name _E2))
                 (Pattern_binding (Var_name _HdM))
                 (Pattern_binding (Var_name T2)) (Pattern_binding (Var_name M))
                 (Pattern_binding (Var_name H2))))
              (c_guard ())
              (c_rhs
                (Expr_apply
                  ((fa_name
                     (Expr_name
                       (Qualified_name (n_mod (Atom_name (Atom lists)))
                         (n_name (Atom_name (Atom reverse))))))
                    (fa_args
                      ((Expr_name (Var_name T2))
                        (Expr_cons ((Expr_name (Var_name H2)))
                          (Expr_name (Var_name M)))))))))))
        (fd_spec ())))
    (Function_decl
      ((fd_name (Atom ukeymerge2_2)) (fd_arity 6)
        (fd_cases
          (((c_lhs
              ((Pattern_binding (Var_name I)) (Pattern_binding (Var_name T1))
                (Pattern_binding (Var_name E1)) (Pattern_binding (Var_name H1))
                (Pattern_cons ((Pattern_binding (Var_name H2)))
                  (Pattern_binding (Var_name T2)))
                (Pattern_binding (Var_name M))))
             (c_guard ())
             (c_rhs
               (Expr_case
                 (Expr_apply
                   ((fa_name (Expr_name (Atom_name (Atom element))))
                     (fa_args
                       ((Expr_name (Var_name I)) (Expr_name (Var_name H2))))))
                 (((c_lhs ((Pattern_binding (Var_name E2))))
                    (c_guard
                      (((Expr_apply
                          ((fa_name
                             (Expr_name
                               (Qualified_name
                                 (n_mod (Atom_name (Atom erlang)))
                                 (n_name (Atom_name (Atom '=<'))))))
                            (fa_args
                              ((Expr_name (Var_name E1))
                                (Expr_name (Var_name E2)))))))))
                    (c_rhs
                      (Expr_apply
                        ((fa_name (Expr_name (Atom_name (Atom ukeymerge2_1))))
                          (fa_args
                            ((Expr_name (Var_name I)) (Expr_name (Var_name T1))
                              (Expr_name (Var_name E2))
                              (Expr_name (Var_name E1))
                              (Expr_name (Var_name T2))
                              (Expr_cons ((Expr_name (Var_name H1)))
                                (Expr_name (Var_name M)))
                              (Expr_name (Var_name H2))))))))
                   ((c_lhs ((Pattern_binding (Var_name _E2)))) (c_guard ())
                     (c_rhs
                       (Expr_apply
                         ((fa_name (Expr_name (Atom_name (Atom ukeymerge2_2))))
                           (fa_args
                             ((Expr_name (Var_name I))
                               (Expr_name (Var_name T1))
                               (Expr_name (Var_name E1))
                               (Expr_name (Var_name H1))
                               (Expr_name (Var_name T2))
                               (Expr_cons ((Expr_name (Var_name H2)))
                                 (Expr_name (Var_name M)))))))))))))
            ((c_lhs
               ((Pattern_binding (Var_name _I)) (Pattern_binding (Var_name T1))
                 (Pattern_binding (Var_name _E1))
                 (Pattern_binding (Var_name H1)) (Pattern_list ())
                 (Pattern_binding (Var_name M))))
              (c_guard ())
              (c_rhs
                (Expr_apply
                  ((fa_name
                     (Expr_name
                       (Qualified_name (n_mod (Atom_name (Atom lists)))
                         (n_name (Atom_name (Atom reverse))))))
                    (fa_args
                      ((Expr_name (Var_name T1))
                        (Expr_cons ((Expr_name (Var_name H1)))
                          (Expr_name (Var_name M)))))))))))
        (fd_spec ())))
    (Module_comment (Comment "% rukeymerge/3"))
    (Function_decl
      ((fd_name (Atom rukeymerge2_1)) (fd_arity 6)
        (fd_cases
          (((c_lhs
              ((Pattern_binding (Var_name I))
                (Pattern_cons ((Pattern_binding (Var_name H1)))
                  (Pattern_binding (Var_name T1)))
                (Pattern_binding (Var_name E2)) (Pattern_binding (Var_name T2))
                (Pattern_binding (Var_name M)) (Pattern_binding (Var_name H2))))
             (c_guard ())
             (c_rhs
               (Expr_case
                 (Expr_apply
                   ((fa_name (Expr_name (Atom_name (Atom element))))
                     (fa_args
                       ((Expr_name (Var_name I)) (Expr_name (Var_name H1))))))
                 (((c_lhs ((Pattern_binding (Var_name E1))))
                    (c_guard
                      (((Expr_apply
                          ((fa_name
                             (Expr_name
                               (Qualified_name
                                 (n_mod (Atom_name (Atom erlang)))
                                 (n_name (Atom_name (Atom '=<'))))))
                            (fa_args
                              ((Expr_name (Var_name E1))
                                (Expr_name (Var_name E2)))))))))
                    (c_rhs
                      (Expr_apply
                        ((fa_name (Expr_name (Atom_name (Atom rukeymerge2_2))))
                          (fa_args
                            ((Expr_name (Var_name I)) (Expr_name (Var_name T1))
                              (Expr_name (Var_name E1))
                              (Expr_name (Var_name T2))
                              (Expr_name (Var_name M))
                              (Expr_name (Var_name E2))
                              (Expr_name (Var_name H2))
                              (Expr_name (Var_name H1))))))))
                   ((c_lhs ((Pattern_binding (Var_name _E1)))) (c_guard ())
                     (c_rhs
                       (Expr_apply
                         ((fa_name
                            (Expr_name (Atom_name (Atom rukeymerge2_1))))
                           (fa_args
                             ((Expr_name (Var_name I))
                               (Expr_name (Var_name T1))
                               (Expr_name (Var_name E2))
                               (Expr_name (Var_name T2))
                               (Expr_cons ((Expr_name (Var_name H1)))
                                 (Expr_name (Var_name M)))
                               (Expr_name (Var_name H2))))))))))))
            ((c_lhs
               ((Pattern_binding (Var_name _I)) (Pattern_list ())
                 (Pattern_binding (Var_name _E2))
                 (Pattern_binding (Var_name T2)) (Pattern_binding (Var_name M))
                 (Pattern_binding (Var_name H2))))
              (c_guard ())
              (c_rhs
                (Expr_apply
                  ((fa_name
                     (Expr_name
                       (Qualified_name (n_mod (Atom_name (Atom lists)))
                         (n_name (Atom_name (Atom reverse))))))
                    (fa_args
                      ((Expr_name (Var_name T2))
                        (Expr_cons ((Expr_name (Var_name H2)))
                          (Expr_name (Var_name M)))))))))))
        (fd_spec ())))
    (Function_decl
      ((fd_name (Atom rukeymerge2_2)) (fd_arity 8)
        (fd_cases
          (((c_lhs
              ((Pattern_binding (Var_name I)) (Pattern_binding (Var_name T1))
                (Pattern_binding (Var_name E1))
                (Pattern_cons ((Pattern_binding (Var_name H2)))
                  (Pattern_binding (Var_name T2)))
                (Pattern_binding (Var_name M)) (Pattern_binding (Var_name E2M))
                (Pattern_binding (Var_name H2M))
                (Pattern_binding (Var_name H1))))
             (c_guard ())
             (c_rhs
               (Expr_case
                 (Expr_apply
                   ((fa_name (Expr_name (Atom_name (Atom element))))
                     (fa_args
                       ((Expr_name (Var_name I)) (Expr_name (Var_name H2))))))
                 (((c_lhs ((Pattern_binding (Var_name E2))))
                    (c_guard
                      (((Expr_apply
                          ((fa_name
                             (Expr_name
                               (Qualified_name
                                 (n_mod (Atom_name (Atom erlang)))
                                 (n_name (Atom_name (Atom '=<'))))))
                            (fa_args
                              ((Expr_name (Var_name E1))
                                (Expr_name (Var_name E2)))))))))
                    (c_rhs
                      (Expr_apply
                        ((fa_name (Expr_name (Atom_name (Atom rukeymerge2_2))))
                          (fa_args
                            ((Expr_name (Var_name I)) (Expr_name (Var_name T1))
                              (Expr_name (Var_name E1))
                              (Expr_name (Var_name T2))
                              (Expr_cons ((Expr_name (Var_name H2M)))
                                (Expr_name (Var_name M)))
                              (Expr_name (Var_name E2))
                              (Expr_name (Var_name H2))
                              (Expr_name (Var_name H1))))))))
                   ((c_lhs ((Pattern_binding (Var_name E2))))
                     (c_guard
                       (((Expr_apply
                           ((fa_name
                              (Expr_name
                                (Qualified_name
                                  (n_mod (Atom_name (Atom erlang)))
                                  (n_name (Atom_name (Atom '=='))))))
                             (fa_args
                               ((Expr_name (Var_name E1))
                                 (Expr_name (Var_name E2M)))))))))
                     (c_rhs
                       (Expr_apply
                         ((fa_name
                            (Expr_name (Atom_name (Atom rukeymerge2_1))))
                           (fa_args
                             ((Expr_name (Var_name I))
                               (Expr_name (Var_name T1))
                               (Expr_name (Var_name E2))
                               (Expr_name (Var_name T2))
                               (Expr_cons ((Expr_name (Var_name H1)))
                                 (Expr_name (Var_name M)))
                               (Expr_name (Var_name H2))))))))
                   ((c_lhs ((Pattern_binding (Var_name E2)))) (c_guard ())
                     (c_rhs
                       (Expr_apply
                         ((fa_name
                            (Expr_name (Atom_name (Atom rukeymerge2_1))))
                           (fa_args
                             ((Expr_name (Var_name I))
                               (Expr_name (Var_name T1))
                               (Expr_name (Var_name E2))
                               (Expr_name (Var_name T2))
                               (Expr_cons
                                 ((Expr_name (Var_name H1))
                                   (Expr_name (Var_name H2M)))
                                 (Expr_name (Var_name M)))
                               (Expr_name (Var_name H2))))))))))))
            ((c_lhs
               ((Pattern_binding (Var_name _I)) (Pattern_binding (Var_name T1))
                 (Pattern_binding (Var_name E1)) (Pattern_list ())
                 (Pattern_binding (Var_name M))
                 (Pattern_binding (Var_name E2M))
                 (Pattern_binding (Var_name _H2M))
                 (Pattern_binding (Var_name H1))))
              (c_guard
                (((Expr_apply
                    ((fa_name
                       (Expr_name
                         (Qualified_name (n_mod (Atom_name (Atom erlang)))
                           (n_name (Atom_name (Atom '=='))))))
                      (fa_args
                        ((Expr_name (Var_name E1)) (Expr_name (Var_name E2M)))))))))
              (c_rhs
                (Expr_apply
                  ((fa_name
                     (Expr_name
                       (Qualified_name (n_mod (Atom_name (Atom lists)))
                         (n_name (Atom_name (Atom reverse))))))
                    (fa_args
                      ((Expr_name (Var_name T1))
                        (Expr_cons ((Expr_name (Var_name H1)))
                          (Expr_name (Var_name M)))))))))
            ((c_lhs
               ((Pattern_binding (Var_name _I)) (Pattern_binding (Var_name T1))
                 (Pattern_binding (Var_name _E1)) (Pattern_list ())
                 (Pattern_binding (Var_name M))
                 (Pattern_binding (Var_name _E2M))
                 (Pattern_binding (Var_name H2M))
                 (Pattern_binding (Var_name H1))))
              (c_guard ())
              (c_rhs
                (Expr_apply
                  ((fa_name
                     (Expr_name
                       (Qualified_name (n_mod (Atom_name (Atom lists)))
                         (n_name (Atom_name (Atom reverse))))))
                    (fa_args
                      ((Expr_name (Var_name T1))
                        (Expr_cons
                          ((Expr_name (Var_name H1))
                            (Expr_name (Var_name H2M)))
                          (Expr_name (Var_name M)))))))))))
        (fd_spec ())))
    (Module_comment (Comment "% sort/2"))
    (Module_comment (Comment "% Ascending."))
    (Function_decl
      ((fd_name (Atom fsplit_1)) (fd_arity 6)
        (fd_cases
          (((c_lhs
              ((Pattern_binding (Var_name Y)) (Pattern_binding (Var_name X))
                (Pattern_binding (Var_name Fun))
                (Pattern_cons ((Pattern_binding (Var_name Z)))
                  (Pattern_binding (Var_name L)))
                (Pattern_binding (Var_name R)) (Pattern_binding (Var_name Rs))))
             (c_guard ())
             (c_rhs
               (Expr_case
                 (Expr_apply
                   ((fa_name (Expr_name (Var_name Fun)))
                     (fa_args
                       ((Expr_name (Var_name Y)) (Expr_name (Var_name Z))))))
                 (((c_lhs ((Pattern_match (Lit_atom (Atom true)))))
                    (c_guard ())
                    (c_rhs
                      (Expr_apply
                        ((fa_name (Expr_name (Atom_name (Atom fsplit_1))))
                          (fa_args
                            ((Expr_name (Var_name Z)) (Expr_name (Var_name Y))
                              (Expr_name (Var_name Fun))
                              (Expr_name (Var_name L))
                              (Expr_cons ((Expr_name (Var_name X)))
                                (Expr_name (Var_name R)))
                              (Expr_name (Var_name Rs))))))))
                   ((c_lhs ((Pattern_match (Lit_atom (Atom false)))))
                     (c_guard ())
                     (c_rhs
                       (Expr_case
                         (Expr_apply
                           ((fa_name (Expr_name (Var_name Fun)))
                             (fa_args
                               ((Expr_name (Var_name X))
                                 (Expr_name (Var_name Z))))))
                         (((c_lhs ((Pattern_match (Lit_atom (Atom true)))))
                            (c_guard ())
                            (c_rhs
                              (Expr_apply
                                ((fa_name
                                   (Expr_name (Atom_name (Atom fsplit_1))))
                                  (fa_args
                                    ((Expr_name (Var_name Y))
                                      (Expr_name (Var_name Z))
                                      (Expr_name (Var_name Fun))
                                      (Expr_name (Var_name L))
                                      (Expr_cons ((Expr_name (Var_name X)))
                                        (Expr_name (Var_name R)))
                                      (Expr_name (Var_name Rs))))))))
                           ((c_lhs ((Pattern_match (Lit_atom (Atom false)))))
                             (c_guard
                               (((Expr_apply
                                   ((fa_name
                                      (Expr_name
                                        (Qualified_name
                                          (n_mod (Atom_name (Atom erlang)))
                                          (n_name (Atom_name (Atom '=='))))))
                                     (fa_args
                                       ((Expr_name (Var_name R))
                                         (Expr_list ()))))))))
                             (c_rhs
                               (Expr_apply
                                 ((fa_name
                                    (Expr_name (Atom_name (Atom fsplit_1))))
                                   (fa_args
                                     ((Expr_name (Var_name Y))
                                       (Expr_name (Var_name X))
                                       (Expr_name (Var_name Fun))
                                       (Expr_name (Var_name L))
                                       (Expr_list ((Expr_name (Var_name Z))))
                                       (Expr_name (Var_name Rs))))))))
                           ((c_lhs ((Pattern_match (Lit_atom (Atom false)))))
                             (c_guard ())
                             (c_rhs
                               (Expr_apply
                                 ((fa_name
                                    (Expr_name (Atom_name (Atom fsplit_1_1))))
                                   (fa_args
                                     ((Expr_name (Var_name Y))
                                       (Expr_name (Var_name X))
                                       (Expr_name (Var_name Fun))
                                       (Expr_name (Var_name L))
                                       (Expr_name (Var_name R))
                                       (Expr_name (Var_name Rs))
                                       (Expr_name (Var_name Z))))))))))))))))
            ((c_lhs
               ((Pattern_binding (Var_name Y)) (Pattern_binding (Var_name X))
                 (Pattern_binding (Var_name Fun)) (Pattern_list ())
                 (Pattern_binding (Var_name R))
                 (Pattern_binding (Var_name Rs))))
              (c_guard ())
              (c_rhs
                (Expr_apply
                  ((fa_name (Expr_name (Atom_name (Atom rfmergel))))
                    (fa_args
                      ((Expr_cons
                         ((Expr_cons
                            ((Expr_name (Var_name Y)) (Expr_name (Var_name X)))
                            (Expr_name (Var_name R))))
                         (Expr_name (Var_name Rs)))
                        (Expr_list ()) (Expr_name (Var_name Fun))
                        (Expr_literal (Lit_atom (Atom asc)))))))))))
        (fd_spec ())))
    (Function_decl
      ((fd_name (Atom fsplit_1_1)) (fd_arity 7)
        (fd_cases
          (((c_lhs
              ((Pattern_binding (Var_name Y)) (Pattern_binding (Var_name X))
                (Pattern_binding (Var_name Fun))
                (Pattern_cons ((Pattern_binding (Var_name Z)))
                  (Pattern_binding (Var_name L)))
                (Pattern_binding (Var_name R)) (Pattern_binding (Var_name Rs))
                (Pattern_binding (Var_name S))))
             (c_guard ())
             (c_rhs
               (Expr_case
                 (Expr_apply
                   ((fa_name (Expr_name (Var_name Fun)))
                     (fa_args
                       ((Expr_name (Var_name Y)) (Expr_name (Var_name Z))))))
                 (((c_lhs ((Pattern_match (Lit_atom (Atom true)))))
                    (c_guard ())
                    (c_rhs
                      (Expr_apply
                        ((fa_name (Expr_name (Atom_name (Atom fsplit_1_1))))
                          (fa_args
                            ((Expr_name (Var_name Z)) (Expr_name (Var_name Y))
                              (Expr_name (Var_name Fun))
                              (Expr_name (Var_name L))
                              (Expr_cons ((Expr_name (Var_name X)))
                                (Expr_name (Var_name R)))
                              (Expr_name (Var_name Rs))
                              (Expr_name (Var_name S))))))))
                   ((c_lhs ((Pattern_match (Lit_atom (Atom false)))))
                     (c_guard ())
                     (c_rhs
                       (Expr_case
                         (Expr_apply
                           ((fa_name (Expr_name (Var_name Fun)))
                             (fa_args
                               ((Expr_name (Var_name X))
                                 (Expr_name (Var_name Z))))))
                         (((c_lhs ((Pattern_match (Lit_atom (Atom true)))))
                            (c_guard ())
                            (c_rhs
                              (Expr_apply
                                ((fa_name
                                   (Expr_name (Atom_name (Atom fsplit_1_1))))
                                  (fa_args
                                    ((Expr_name (Var_name Y))
                                      (Expr_name (Var_name Z))
                                      (Expr_name (Var_name Fun))
                                      (Expr_name (Var_name L))
                                      (Expr_cons ((Expr_name (Var_name X)))
                                        (Expr_name (Var_name R)))
                                      (Expr_name (Var_name Rs))
                                      (Expr_name (Var_name S))))))))
                           ((c_lhs ((Pattern_match (Lit_atom (Atom false)))))
                             (c_guard ())
                             (c_rhs
                               (Expr_case
                                 (Expr_apply
                                   ((fa_name (Expr_name (Var_name Fun)))
                                     (fa_args
                                       ((Expr_name (Var_name S))
                                         (Expr_name (Var_name Z))))))
                                 (((c_lhs
                                     ((Pattern_match (Lit_atom (Atom true)))))
                                    (c_guard ())
                                    (c_rhs
                                      (Expr_apply
                                        ((fa_name
                                           (Expr_name
                                             (Atom_name (Atom fsplit_1))))
                                          (fa_args
                                            ((Expr_name (Var_name Z))
                                              (Expr_name (Var_name S))
                                              (Expr_name (Var_name Fun))
                                              (Expr_name (Var_name L))
                                              (Expr_list ())
                                              (Expr_cons
                                                ((Expr_cons
                                                   ((Expr_name (Var_name Y))
                                                     (Expr_name (Var_name X)))
                                                   (Expr_name (Var_name R))))
                                                (Expr_name (Var_name Rs)))))))))
                                   ((c_lhs
                                      ((Pattern_match (Lit_atom (Atom false)))))
                                     (c_guard ())
                                     (c_rhs
                                       (Expr_apply
                                         ((fa_name
                                            (Expr_name
                                              (Atom_name (Atom fsplit_1))))
                                           (fa_args
                                             ((Expr_name (Var_name S))
                                               (Expr_name (Var_name Z))
                                               (Expr_name (Var_name Fun))
                                               (Expr_name (Var_name L))
                                               (Expr_list ())
                                               (Expr_cons
                                                 ((Expr_cons
                                                    ((Expr_name (Var_name Y))
                                                      (Expr_name (Var_name X)))
                                                    (Expr_name (Var_name R))))
                                                 (Expr_name (Var_name Rs)))))))))))))))))))))
            ((c_lhs
               ((Pattern_binding (Var_name Y)) (Pattern_binding (Var_name X))
                 (Pattern_binding (Var_name Fun)) (Pattern_list ())
                 (Pattern_binding (Var_name R)) (Pattern_binding (Var_name Rs))
                 (Pattern_binding (Var_name S))))
              (c_guard ())
              (c_rhs
                (Expr_apply
                  ((fa_name (Expr_name (Atom_name (Atom rfmergel))))
                    (fa_args
                      ((Expr_cons
                         ((Expr_list ((Expr_name (Var_name S))))
                           (Expr_cons
                             ((Expr_name (Var_name Y))
                               (Expr_name (Var_name X)))
                             (Expr_name (Var_name R))))
                         (Expr_name (Var_name Rs)))
                        (Expr_list ()) (Expr_name (Var_name Fun))
                        (Expr_literal (Lit_atom (Atom asc)))))))))))
        (fd_spec ())))
    (Module_comment (Comment "% Descending."))
    (Function_decl
      ((fd_name (Atom fsplit_2)) (fd_arity 6)
        (fd_cases
          (((c_lhs
              ((Pattern_binding (Var_name Y)) (Pattern_binding (Var_name X))
                (Pattern_binding (Var_name Fun))
                (Pattern_cons ((Pattern_binding (Var_name Z)))
                  (Pattern_binding (Var_name L)))
                (Pattern_binding (Var_name R)) (Pattern_binding (Var_name Rs))))
             (c_guard ())
             (c_rhs
               (Expr_case
                 (Expr_apply
                   ((fa_name (Expr_name (Var_name Fun)))
                     (fa_args
                       ((Expr_name (Var_name Y)) (Expr_name (Var_name Z))))))
                 (((c_lhs ((Pattern_match (Lit_atom (Atom false)))))
                    (c_guard ())
                    (c_rhs
                      (Expr_apply
                        ((fa_name (Expr_name (Atom_name (Atom fsplit_2))))
                          (fa_args
                            ((Expr_name (Var_name Z)) (Expr_name (Var_name Y))
                              (Expr_name (Var_name Fun))
                              (Expr_name (Var_name L))
                              (Expr_cons ((Expr_name (Var_name X)))
                                (Expr_name (Var_name R)))
                              (Expr_name (Var_name Rs))))))))
                   ((c_lhs ((Pattern_match (Lit_atom (Atom true)))))
                     (c_guard ())
                     (c_rhs
                       (Expr_case
                         (Expr_apply
                           ((fa_name (Expr_name (Var_name Fun)))
                             (fa_args
                               ((Expr_name (Var_name X))
                                 (Expr_name (Var_name Z))))))
                         (((c_lhs ((Pattern_match (Lit_atom (Atom false)))))
                            (c_guard ())
                            (c_rhs
                              (Expr_apply
                                ((fa_name
                                   (Expr_name (Atom_name (Atom fsplit_2))))
                                  (fa_args
                                    ((Expr_name (Var_name Y))
                                      (Expr_name (Var_name Z))
                                      (Expr_name (Var_name Fun))
                                      (Expr_name (Var_name L))
                                      (Expr_cons ((Expr_name (Var_name X)))
                                        (Expr_name (Var_name R)))
                                      (Expr_name (Var_name Rs))))))))
                           ((c_lhs ((Pattern_match (Lit_atom (Atom true)))))
                             (c_guard
                               (((Expr_apply
                                   ((fa_name
                                      (Expr_name
                                        (Qualified_name
                                          (n_mod (Atom_name (Atom erlang)))
                                          (n_name (Atom_name (Atom '=='))))))
                                     (fa_args
                                       ((Expr_name (Var_name R))
                                         (Expr_list ()))))))))
                             (c_rhs
                               (Expr_apply
                                 ((fa_name
                                    (Expr_name (Atom_name (Atom fsplit_2))))
                                   (fa_args
                                     ((Expr_name (Var_name Y))
                                       (Expr_name (Var_name X))
                                       (Expr_name (Var_name Fun))
                                       (Expr_name (Var_name L))
                                       (Expr_list ((Expr_name (Var_name Z))))
                                       (Expr_name (Var_name Rs))))))))
                           ((c_lhs ((Pattern_match (Lit_atom (Atom true)))))
                             (c_guard ())
                             (c_rhs
                               (Expr_apply
                                 ((fa_name
                                    (Expr_name (Atom_name (Atom fsplit_2_1))))
                                   (fa_args
                                     ((Expr_name (Var_name Y))
                                       (Expr_name (Var_name X))
                                       (Expr_name (Var_name Fun))
                                       (Expr_name (Var_name L))
                                       (Expr_name (Var_name R))
                                       (Expr_name (Var_name Rs))
                                       (Expr_name (Var_name Z))))))))))))))))
            ((c_lhs
               ((Pattern_binding (Var_name Y)) (Pattern_binding (Var_name X))
                 (Pattern_binding (Var_name Fun)) (Pattern_list ())
                 (Pattern_binding (Var_name R))
                 (Pattern_binding (Var_name Rs))))
              (c_guard ())
              (c_rhs
                (Expr_apply
                  ((fa_name (Expr_name (Atom_name (Atom fmergel))))
                    (fa_args
                      ((Expr_cons
                         ((Expr_cons
                            ((Expr_name (Var_name Y)) (Expr_name (Var_name X)))
                            (Expr_name (Var_name R))))
                         (Expr_name (Var_name Rs)))
                        (Expr_list ()) (Expr_name (Var_name Fun))
                        (Expr_literal (Lit_atom (Atom desc)))))))))))
        (fd_spec ())))
    (Function_decl
      ((fd_name (Atom fsplit_2_1)) (fd_arity 7)
        (fd_cases
          (((c_lhs
              ((Pattern_binding (Var_name Y)) (Pattern_binding (Var_name X))
                (Pattern_binding (Var_name Fun))
                (Pattern_cons ((Pattern_binding (Var_name Z)))
                  (Pattern_binding (Var_name L)))
                (Pattern_binding (Var_name R)) (Pattern_binding (Var_name Rs))
                (Pattern_binding (Var_name S))))
             (c_guard ())
             (c_rhs
               (Expr_case
                 (Expr_apply
                   ((fa_name (Expr_name (Var_name Fun)))
                     (fa_args
                       ((Expr_name (Var_name Y)) (Expr_name (Var_name Z))))))
                 (((c_lhs ((Pattern_match (Lit_atom (Atom false)))))
                    (c_guard ())
                    (c_rhs
                      (Expr_apply
                        ((fa_name (Expr_name (Atom_name (Atom fsplit_2_1))))
                          (fa_args
                            ((Expr_name (Var_name Z)) (Expr_name (Var_name Y))
                              (Expr_name (Var_name Fun))
                              (Expr_name (Var_name L))
                              (Expr_cons ((Expr_name (Var_name X)))
                                (Expr_name (Var_name R)))
                              (Expr_name (Var_name Rs))
                              (Expr_name (Var_name S))))))))
                   ((c_lhs ((Pattern_match (Lit_atom (Atom true)))))
                     (c_guard ())
                     (c_rhs
                       (Expr_case
                         (Expr_apply
                           ((fa_name (Expr_name (Var_name Fun)))
                             (fa_args
                               ((Expr_name (Var_name X))
                                 (Expr_name (Var_name Z))))))
                         (((c_lhs ((Pattern_match (Lit_atom (Atom false)))))
                            (c_guard ())
                            (c_rhs
                              (Expr_apply
                                ((fa_name
                                   (Expr_name (Atom_name (Atom fsplit_2_1))))
                                  (fa_args
                                    ((Expr_name (Var_name Y))
                                      (Expr_name (Var_name Z))
                                      (Expr_name (Var_name Fun))
                                      (Expr_name (Var_name L))
                                      (Expr_cons ((Expr_name (Var_name X)))
                                        (Expr_name (Var_name R)))
                                      (Expr_name (Var_name Rs))
                                      (Expr_name (Var_name S))))))))
                           ((c_lhs ((Pattern_match (Lit_atom (Atom true)))))
                             (c_guard ())
                             (c_rhs
                               (Expr_case
                                 (Expr_apply
                                   ((fa_name (Expr_name (Var_name Fun)))
                                     (fa_args
                                       ((Expr_name (Var_name S))
                                         (Expr_name (Var_name Z))))))
                                 (((c_lhs
                                     ((Pattern_match (Lit_atom (Atom false)))))
                                    (c_guard ())
                                    (c_rhs
                                      (Expr_apply
                                        ((fa_name
                                           (Expr_name
                                             (Atom_name (Atom fsplit_2))))
                                          (fa_args
                                            ((Expr_name (Var_name Z))
                                              (Expr_name (Var_name S))
                                              (Expr_name (Var_name Fun))
                                              (Expr_name (Var_name L))
                                              (Expr_list ())
                                              (Expr_cons
                                                ((Expr_cons
                                                   ((Expr_name (Var_name Y))
                                                     (Expr_name (Var_name X)))
                                                   (Expr_name (Var_name R))))
                                                (Expr_name (Var_name Rs)))))))))
                                   ((c_lhs
                                      ((Pattern_match (Lit_atom (Atom true)))))
                                     (c_guard ())
                                     (c_rhs
                                       (Expr_apply
                                         ((fa_name
                                            (Expr_name
                                              (Atom_name (Atom fsplit_2))))
                                           (fa_args
                                             ((Expr_name (Var_name S))
                                               (Expr_name (Var_name Z))
                                               (Expr_name (Var_name Fun))
                                               (Expr_name (Var_name L))
                                               (Expr_list ())
                                               (Expr_cons
                                                 ((Expr_cons
                                                    ((Expr_name (Var_name Y))
                                                      (Expr_name (Var_name X)))
                                                    (Expr_name (Var_name R))))
                                                 (Expr_name (Var_name Rs)))))))))))))))))))))
            ((c_lhs
               ((Pattern_binding (Var_name Y)) (Pattern_binding (Var_name X))
                 (Pattern_binding (Var_name Fun)) (Pattern_list ())
                 (Pattern_binding (Var_name R)) (Pattern_binding (Var_name Rs))
                 (Pattern_binding (Var_name S))))
              (c_guard ())
              (c_rhs
                (Expr_apply
                  ((fa_name (Expr_name (Atom_name (Atom fmergel))))
                    (fa_args
                      ((Expr_cons
                         ((Expr_list ((Expr_name (Var_name S))))
                           (Expr_cons
                             ((Expr_name (Var_name Y))
                               (Expr_name (Var_name X)))
                             (Expr_name (Var_name R))))
                         (Expr_name (Var_name Rs)))
                        (Expr_list ()) (Expr_name (Var_name Fun))
                        (Expr_literal (Lit_atom (Atom desc)))))))))))
        (fd_spec ())))
    (Function_decl
      ((fd_name (Atom fmergel)) (fd_arity 4)
        (fd_cases
          (((c_lhs
              ((Pattern_cons
                 ((Pattern_binding (Var_name T1))
                   (Pattern_cons ((Pattern_binding (Var_name H2)))
                     (Pattern_binding (Var_name T2))))
                 (Pattern_binding (Var_name L)))
                (Pattern_binding (Var_name Acc))
                (Pattern_binding (Var_name Fun))
                (Pattern_match (Lit_atom (Atom asc)))))
             (c_guard ())
             (c_rhs
               (Expr_apply
                 ((fa_name (Expr_name (Atom_name (Atom fmergel))))
                   (fa_args
                     ((Expr_name (Var_name L))
                       (Expr_cons
                         ((Expr_apply
                            ((fa_name (Expr_name (Atom_name (Atom fmerge2_1))))
                              (fa_args
                                ((Expr_name (Var_name T1))
                                  (Expr_name (Var_name H2))
                                  (Expr_name (Var_name Fun))
                                  (Expr_name (Var_name T2)) (Expr_list ()))))))
                         (Expr_name (Var_name Acc)))
                       (Expr_name (Var_name Fun))
                       (Expr_literal (Lit_atom (Atom asc)))))))))
            ((c_lhs
               ((Pattern_cons
                  ((Pattern_cons ((Pattern_binding (Var_name H2)))
                     (Pattern_binding (Var_name T2)))
                    (Pattern_binding (Var_name T1)))
                  (Pattern_binding (Var_name L)))
                 (Pattern_binding (Var_name Acc))
                 (Pattern_binding (Var_name Fun))
                 (Pattern_match (Lit_atom (Atom desc)))))
              (c_guard ())
              (c_rhs
                (Expr_apply
                  ((fa_name (Expr_name (Atom_name (Atom fmergel))))
                    (fa_args
                      ((Expr_name (Var_name L))
                        (Expr_cons
                          ((Expr_apply
                             ((fa_name
                                (Expr_name (Atom_name (Atom fmerge2_1))))
                               (fa_args
                                 ((Expr_name (Var_name T1))
                                   (Expr_name (Var_name H2))
                                   (Expr_name (Var_name Fun))
                                   (Expr_name (Var_name T2)) (Expr_list ()))))))
                          (Expr_name (Var_name Acc)))
                        (Expr_name (Var_name Fun))
                        (Expr_literal (Lit_atom (Atom desc)))))))))
            ((c_lhs
               ((Pattern_list ((Pattern_binding (Var_name L))))
                 (Pattern_list ()) (Pattern_binding (Var_name _Fun))
                 (Pattern_binding (Var_name _O))))
              (c_guard ()) (c_rhs (Expr_name (Var_name L))))
            ((c_lhs
               ((Pattern_list ((Pattern_binding (Var_name L))))
                 (Pattern_binding (Var_name Acc))
                 (Pattern_binding (Var_name Fun))
                 (Pattern_binding (Var_name O))))
              (c_guard ())
              (c_rhs
                (Expr_apply
                  ((fa_name (Expr_name (Atom_name (Atom rfmergel))))
                    (fa_args
                      ((Expr_cons
                         ((Expr_apply
                            ((fa_name
                               (Expr_name
                                 (Qualified_name
                                   (n_mod (Atom_name (Atom lists)))
                                   (n_name (Atom_name (Atom reverse))))))
                              (fa_args
                                ((Expr_name (Var_name L)) (Expr_list ()))))))
                         (Expr_name (Var_name Acc)))
                        (Expr_list ()) (Expr_name (Var_name Fun))
                        (Expr_name (Var_name O))))))))
            ((c_lhs
               ((Pattern_list ()) (Pattern_binding (Var_name Acc))
                 (Pattern_binding (Var_name Fun))
                 (Pattern_binding (Var_name O))))
              (c_guard ())
              (c_rhs
                (Expr_apply
                  ((fa_name (Expr_name (Atom_name (Atom rfmergel))))
                    (fa_args
                      ((Expr_name (Var_name Acc)) (Expr_list ())
                        (Expr_name (Var_name Fun)) (Expr_name (Var_name O))))))))))
        (fd_spec ())))
    (Function_decl
      ((fd_name (Atom rfmergel)) (fd_arity 4)
        (fd_cases
          (((c_lhs
              ((Pattern_cons
                 ((Pattern_cons ((Pattern_binding (Var_name H2)))
                    (Pattern_binding (Var_name T2)))
                   (Pattern_binding (Var_name T1)))
                 (Pattern_binding (Var_name L)))
                (Pattern_binding (Var_name Acc))
                (Pattern_binding (Var_name Fun))
                (Pattern_match (Lit_atom (Atom asc)))))
             (c_guard ())
             (c_rhs
               (Expr_apply
                 ((fa_name (Expr_name (Atom_name (Atom rfmergel))))
                   (fa_args
                     ((Expr_name (Var_name L))
                       (Expr_cons
                         ((Expr_apply
                            ((fa_name
                               (Expr_name (Atom_name (Atom rfmerge2_1))))
                              (fa_args
                                ((Expr_name (Var_name T1))
                                  (Expr_name (Var_name H2))
                                  (Expr_name (Var_name Fun))
                                  (Expr_name (Var_name T2)) (Expr_list ()))))))
                         (Expr_name (Var_name Acc)))
                       (Expr_name (Var_name Fun))
                       (Expr_literal (Lit_atom (Atom asc)))))))))
            ((c_lhs
               ((Pattern_cons
                  ((Pattern_binding (Var_name T1))
                    (Pattern_cons ((Pattern_binding (Var_name H2)))
                      (Pattern_binding (Var_name T2))))
                  (Pattern_binding (Var_name L)))
                 (Pattern_binding (Var_name Acc))
                 (Pattern_binding (Var_name Fun))
                 (Pattern_match (Lit_atom (Atom desc)))))
              (c_guard ())
              (c_rhs
                (Expr_apply
                  ((fa_name (Expr_name (Atom_name (Atom rfmergel))))
                    (fa_args
                      ((Expr_name (Var_name L))
                        (Expr_cons
                          ((Expr_apply
                             ((fa_name
                                (Expr_name (Atom_name (Atom rfmerge2_1))))
                               (fa_args
                                 ((Expr_name (Var_name T1))
                                   (Expr_name (Var_name H2))
                                   (Expr_name (Var_name Fun))
                                   (Expr_name (Var_name T2)) (Expr_list ()))))))
                          (Expr_name (Var_name Acc)))
                        (Expr_name (Var_name Fun))
                        (Expr_literal (Lit_atom (Atom desc)))))))))
            ((c_lhs
               ((Pattern_list ((Pattern_binding (Var_name L))))
                 (Pattern_binding (Var_name Acc))
                 (Pattern_binding (Var_name Fun))
                 (Pattern_binding (Var_name O))))
              (c_guard ())
              (c_rhs
                (Expr_apply
                  ((fa_name (Expr_name (Atom_name (Atom fmergel))))
                    (fa_args
                      ((Expr_cons
                         ((Expr_apply
                            ((fa_name
                               (Expr_name
                                 (Qualified_name
                                   (n_mod (Atom_name (Atom lists)))
                                   (n_name (Atom_name (Atom reverse))))))
                              (fa_args
                                ((Expr_name (Var_name L)) (Expr_list ()))))))
                         (Expr_name (Var_name Acc)))
                        (Expr_list ()) (Expr_name (Var_name Fun))
                        (Expr_name (Var_name O))))))))
            ((c_lhs
               ((Pattern_list ()) (Pattern_binding (Var_name Acc))
                 (Pattern_binding (Var_name Fun))
                 (Pattern_binding (Var_name O))))
              (c_guard ())
              (c_rhs
                (Expr_apply
                  ((fa_name (Expr_name (Atom_name (Atom fmergel))))
                    (fa_args
                      ((Expr_name (Var_name Acc)) (Expr_list ())
                        (Expr_name (Var_name Fun)) (Expr_name (Var_name O))))))))))
        (fd_spec ())))
    (Module_comment (Comment "% merge/3 "))
    (Module_comment
      (Comment "% Elements from the first list are prioritized."))
    (Function_decl
      ((fd_name (Atom fmerge2_1)) (fd_arity 5)
        (fd_cases
          (((c_lhs
              ((Pattern_cons ((Pattern_binding (Var_name H1)))
                 (Pattern_binding (Var_name T1)))
                (Pattern_binding (Var_name H2))
                (Pattern_binding (Var_name Fun))
                (Pattern_binding (Var_name T2)) (Pattern_binding (Var_name M))))
             (c_guard ())
             (c_rhs
               (Expr_case
                 (Expr_apply
                   ((fa_name (Expr_name (Var_name Fun)))
                     (fa_args
                       ((Expr_name (Var_name H1)) (Expr_name (Var_name H2))))))
                 (((c_lhs ((Pattern_match (Lit_atom (Atom true)))))
                    (c_guard ())
                    (c_rhs
                      (Expr_apply
                        ((fa_name (Expr_name (Atom_name (Atom fmerge2_1))))
                          (fa_args
                            ((Expr_name (Var_name T1))
                              (Expr_name (Var_name H2))
                              (Expr_name (Var_name Fun))
                              (Expr_name (Var_name T2))
                              (Expr_cons ((Expr_name (Var_name H1)))
                                (Expr_name (Var_name M)))))))))
                   ((c_lhs ((Pattern_match (Lit_atom (Atom false)))))
                     (c_guard ())
                     (c_rhs
                       (Expr_apply
                         ((fa_name (Expr_name (Atom_name (Atom fmerge2_2))))
                           (fa_args
                             ((Expr_name (Var_name H1))
                               (Expr_name (Var_name T1))
                               (Expr_name (Var_name Fun))
                               (Expr_name (Var_name T2))
                               (Expr_cons ((Expr_name (Var_name H2)))
                                 (Expr_name (Var_name M)))))))))))))
            ((c_lhs
               ((Pattern_list ()) (Pattern_binding (Var_name H2))
                 (Pattern_binding (Var_name _Fun))
                 (Pattern_binding (Var_name T2))
                 (Pattern_binding (Var_name M))))
              (c_guard ())
              (c_rhs
                (Expr_apply
                  ((fa_name
                     (Expr_name
                       (Qualified_name (n_mod (Atom_name (Atom lists)))
                         (n_name (Atom_name (Atom reverse))))))
                    (fa_args
                      ((Expr_name (Var_name T2))
                        (Expr_cons ((Expr_name (Var_name H2)))
                          (Expr_name (Var_name M)))))))))))
        (fd_spec ())))
    (Function_decl
      ((fd_name (Atom fmerge2_2)) (fd_arity 5)
        (fd_cases
          (((c_lhs
              ((Pattern_binding (Var_name H1)) (Pattern_binding (Var_name T1))
                (Pattern_binding (Var_name Fun))
                (Pattern_cons ((Pattern_binding (Var_name H2)))
                  (Pattern_binding (Var_name T2)))
                (Pattern_binding (Var_name M))))
             (c_guard ())
             (c_rhs
               (Expr_case
                 (Expr_apply
                   ((fa_name (Expr_name (Var_name Fun)))
                     (fa_args
                       ((Expr_name (Var_name H1)) (Expr_name (Var_name H2))))))
                 (((c_lhs ((Pattern_match (Lit_atom (Atom true)))))
                    (c_guard ())
                    (c_rhs
                      (Expr_apply
                        ((fa_name (Expr_name (Atom_name (Atom fmerge2_1))))
                          (fa_args
                            ((Expr_name (Var_name T1))
                              (Expr_name (Var_name H2))
                              (Expr_name (Var_name Fun))
                              (Expr_name (Var_name T2))
                              (Expr_cons ((Expr_name (Var_name H1)))
                                (Expr_name (Var_name M)))))))))
                   ((c_lhs ((Pattern_match (Lit_atom (Atom false)))))
                     (c_guard ())
                     (c_rhs
                       (Expr_apply
                         ((fa_name (Expr_name (Atom_name (Atom fmerge2_2))))
                           (fa_args
                             ((Expr_name (Var_name H1))
                               (Expr_name (Var_name T1))
                               (Expr_name (Var_name Fun))
                               (Expr_name (Var_name T2))
                               (Expr_cons ((Expr_name (Var_name H2)))
                                 (Expr_name (Var_name M)))))))))))))
            ((c_lhs
               ((Pattern_binding (Var_name H1)) (Pattern_binding (Var_name T1))
                 (Pattern_binding (Var_name _Fun)) (Pattern_list ())
                 (Pattern_binding (Var_name M))))
              (c_guard ())
              (c_rhs
                (Expr_apply
                  ((fa_name
                     (Expr_name
                       (Qualified_name (n_mod (Atom_name (Atom lists)))
                         (n_name (Atom_name (Atom reverse))))))
                    (fa_args
                      ((Expr_name (Var_name T1))
                        (Expr_cons ((Expr_name (Var_name H1)))
                          (Expr_name (Var_name M)))))))))))
        (fd_spec ())))
    (Module_comment (Comment "% rmerge/3"))
    (Function_decl
      ((fd_name (Atom rfmerge2_1)) (fd_arity 5)
        (fd_cases
          (((c_lhs
              ((Pattern_cons ((Pattern_binding (Var_name H1)))
                 (Pattern_binding (Var_name T1)))
                (Pattern_binding (Var_name H2))
                (Pattern_binding (Var_name Fun))
                (Pattern_binding (Var_name T2)) (Pattern_binding (Var_name M))))
             (c_guard ())
             (c_rhs
               (Expr_case
                 (Expr_apply
                   ((fa_name (Expr_name (Var_name Fun)))
                     (fa_args
                       ((Expr_name (Var_name H1)) (Expr_name (Var_name H2))))))
                 (((c_lhs ((Pattern_match (Lit_atom (Atom true)))))
                    (c_guard ())
                    (c_rhs
                      (Expr_apply
                        ((fa_name (Expr_name (Atom_name (Atom rfmerge2_2))))
                          (fa_args
                            ((Expr_name (Var_name H1))
                              (Expr_name (Var_name T1))
                              (Expr_name (Var_name Fun))
                              (Expr_name (Var_name T2))
                              (Expr_cons ((Expr_name (Var_name H2)))
                                (Expr_name (Var_name M)))))))))
                   ((c_lhs ((Pattern_match (Lit_atom (Atom false)))))
                     (c_guard ())
                     (c_rhs
                       (Expr_apply
                         ((fa_name (Expr_name (Atom_name (Atom rfmerge2_1))))
                           (fa_args
                             ((Expr_name (Var_name T1))
                               (Expr_name (Var_name H2))
                               (Expr_name (Var_name Fun))
                               (Expr_name (Var_name T2))
                               (Expr_cons ((Expr_name (Var_name H1)))
                                 (Expr_name (Var_name M)))))))))))))
            ((c_lhs
               ((Pattern_list ()) (Pattern_binding (Var_name H2))
                 (Pattern_binding (Var_name _Fun))
                 (Pattern_binding (Var_name T2))
                 (Pattern_binding (Var_name M))))
              (c_guard ())
              (c_rhs
                (Expr_apply
                  ((fa_name
                     (Expr_name
                       (Qualified_name (n_mod (Atom_name (Atom lists)))
                         (n_name (Atom_name (Atom reverse))))))
                    (fa_args
                      ((Expr_name (Var_name T2))
                        (Expr_cons ((Expr_name (Var_name H2)))
                          (Expr_name (Var_name M)))))))))))
        (fd_spec ())))
    (Function_decl
      ((fd_name (Atom rfmerge2_2)) (fd_arity 5)
        (fd_cases
          (((c_lhs
              ((Pattern_binding (Var_name H1)) (Pattern_binding (Var_name T1))
                (Pattern_binding (Var_name Fun))
                (Pattern_cons ((Pattern_binding (Var_name H2)))
                  (Pattern_binding (Var_name T2)))
                (Pattern_binding (Var_name M))))
             (c_guard ())
             (c_rhs
               (Expr_case
                 (Expr_apply
                   ((fa_name (Expr_name (Var_name Fun)))
                     (fa_args
                       ((Expr_name (Var_name H1)) (Expr_name (Var_name H2))))))
                 (((c_lhs ((Pattern_match (Lit_atom (Atom true)))))
                    (c_guard ())
                    (c_rhs
                      (Expr_apply
                        ((fa_name (Expr_name (Atom_name (Atom rfmerge2_2))))
                          (fa_args
                            ((Expr_name (Var_name H1))
                              (Expr_name (Var_name T1))
                              (Expr_name (Var_name Fun))
                              (Expr_name (Var_name T2))
                              (Expr_cons ((Expr_name (Var_name H2)))
                                (Expr_name (Var_name M)))))))))
                   ((c_lhs ((Pattern_match (Lit_atom (Atom false)))))
                     (c_guard ())
                     (c_rhs
                       (Expr_apply
                         ((fa_name (Expr_name (Atom_name (Atom rfmerge2_1))))
                           (fa_args
                             ((Expr_name (Var_name T1))
                               (Expr_name (Var_name H2))
                               (Expr_name (Var_name Fun))
                               (Expr_name (Var_name T2))
                               (Expr_cons ((Expr_name (Var_name H1)))
                                 (Expr_name (Var_name M)))))))))))))
            ((c_lhs
               ((Pattern_binding (Var_name H1)) (Pattern_binding (Var_name T1))
                 (Pattern_binding (Var_name _Fun)) (Pattern_list ())
                 (Pattern_binding (Var_name M))))
              (c_guard ())
              (c_rhs
                (Expr_apply
                  ((fa_name
                     (Expr_name
                       (Qualified_name (n_mod (Atom_name (Atom lists)))
                         (n_name (Atom_name (Atom reverse))))))
                    (fa_args
                      ((Expr_name (Var_name T1))
                        (Expr_cons ((Expr_name (Var_name H1)))
                          (Expr_name (Var_name M)))))))))))
        (fd_spec ())))
    (Module_comment (Comment "% usort/2"))
    (Module_comment (Comment "% Ascending. X < Y"))
    (Function_decl
      ((fd_name (Atom ufsplit_1)) (fd_arity 6)
        (fd_cases
          (((c_lhs
              ((Pattern_binding (Var_name Y)) (Pattern_binding (Var_name X))
                (Pattern_binding (Var_name Fun))
                (Pattern_cons ((Pattern_binding (Var_name Z)))
                  (Pattern_binding (Var_name L)))
                (Pattern_binding (Var_name R)) (Pattern_binding (Var_name Rs))))
             (c_guard ())
             (c_rhs
               (Expr_case
                 (Expr_apply
                   ((fa_name (Expr_name (Var_name Fun)))
                     (fa_args
                       ((Expr_name (Var_name Y)) (Expr_name (Var_name Z))))))
                 (((c_lhs ((Pattern_match (Lit_atom (Atom true)))))
                    (c_guard ())
                    (c_rhs
                      (Expr_case
                        (Expr_apply
                          ((fa_name (Expr_name (Var_name Fun)))
                            (fa_args
                              ((Expr_name (Var_name Z))
                                (Expr_name (Var_name Y))))))
                        (((c_lhs ((Pattern_match (Lit_atom (Atom true)))))
                           (c_guard ())
                           (c_rhs
                             (Expr_comment (Comment " Z equal to Y")
                               (Expr_apply
                                 ((fa_name
                                    (Expr_name (Atom_name (Atom ufsplit_1))))
                                   (fa_args
                                     ((Expr_name (Var_name Y))
                                       (Expr_name (Var_name X))
                                       (Expr_name (Var_name Fun))
                                       (Expr_name (Var_name L))
                                       (Expr_name (Var_name R))
                                       (Expr_name (Var_name Rs)))))))))
                          ((c_lhs ((Pattern_match (Lit_atom (Atom false)))))
                            (c_guard ())
                            (c_rhs
                              (Expr_apply
                                ((fa_name
                                   (Expr_name (Atom_name (Atom ufsplit_1))))
                                  (fa_args
                                    ((Expr_name (Var_name Z))
                                      (Expr_name (Var_name Y))
                                      (Expr_name (Var_name Fun))
                                      (Expr_name (Var_name L))
                                      (Expr_cons ((Expr_name (Var_name X)))
                                        (Expr_name (Var_name R)))
                                      (Expr_name (Var_name Rs))))))))))))
                   ((c_lhs ((Pattern_match (Lit_atom (Atom false)))))
                     (c_guard ())
                     (c_rhs
                       (Expr_case
                         (Expr_apply
                           ((fa_name (Expr_name (Var_name Fun)))
                             (fa_args
                               ((Expr_name (Var_name X))
                                 (Expr_name (Var_name Z))))))
                         (((c_lhs ((Pattern_match (Lit_atom (Atom true)))))
                            (c_guard ())
                            (c_rhs
                              (Expr_case
                                (Expr_apply
                                  ((fa_name (Expr_name (Var_name Fun)))
                                    (fa_args
                                      ((Expr_name (Var_name Z))
                                        (Expr_name (Var_name X))))))
                                (((c_lhs
                                    ((Pattern_match (Lit_atom (Atom true)))))
                                   (c_guard ())
                                   (c_rhs
                                     (Expr_comment (Comment " Z equal to X")
                                       (Expr_apply
                                         ((fa_name
                                            (Expr_name
                                              (Atom_name (Atom ufsplit_1))))
                                           (fa_args
                                             ((Expr_name (Var_name Y))
                                               (Expr_name (Var_name X))
                                               (Expr_name (Var_name Fun))
                                               (Expr_name (Var_name L))
                                               (Expr_name (Var_name R))
                                               (Expr_name (Var_name Rs)))))))))
                                  ((c_lhs
                                     ((Pattern_match (Lit_atom (Atom false)))))
                                    (c_guard ())
                                    (c_rhs
                                      (Expr_apply
                                        ((fa_name
                                           (Expr_name
                                             (Atom_name (Atom ufsplit_1))))
                                          (fa_args
                                            ((Expr_name (Var_name Y))
                                              (Expr_name (Var_name Z))
                                              (Expr_name (Var_name Fun))
                                              (Expr_name (Var_name L))
                                              (Expr_cons
                                                ((Expr_name (Var_name X)))
                                                (Expr_name (Var_name R)))
                                              (Expr_name (Var_name Rs))))))))))))
                           ((c_lhs ((Pattern_match (Lit_atom (Atom false)))))
                             (c_guard
                               (((Expr_apply
                                   ((fa_name
                                      (Expr_name
                                        (Qualified_name
                                          (n_mod (Atom_name (Atom erlang)))
                                          (n_name (Atom_name (Atom '=='))))))
                                     (fa_args
                                       ((Expr_name (Var_name R))
                                         (Expr_list ()))))))))
                             (c_rhs
                               (Expr_apply
                                 ((fa_name
                                    (Expr_name (Atom_name (Atom ufsplit_1))))
                                   (fa_args
                                     ((Expr_name (Var_name Y))
                                       (Expr_name (Var_name X))
                                       (Expr_name (Var_name Fun))
                                       (Expr_name (Var_name L))
                                       (Expr_list ((Expr_name (Var_name Z))))
                                       (Expr_name (Var_name Rs))))))))
                           ((c_lhs ((Pattern_match (Lit_atom (Atom false)))))
                             (c_guard ())
                             (c_rhs
                               (Expr_apply
                                 ((fa_name
                                    (Expr_name (Atom_name (Atom ufsplit_1_1))))
                                   (fa_args
                                     ((Expr_name (Var_name Y))
                                       (Expr_name (Var_name X))
                                       (Expr_name (Var_name Fun))
                                       (Expr_name (Var_name L))
                                       (Expr_name (Var_name R))
                                       (Expr_name (Var_name Rs))
                                       (Expr_name (Var_name Z))))))))))))))))
            ((c_lhs
               ((Pattern_binding (Var_name Y)) (Pattern_binding (Var_name X))
                 (Pattern_binding (Var_name Fun)) (Pattern_list ())
                 (Pattern_binding (Var_name R))
                 (Pattern_binding (Var_name Rs))))
              (c_guard ())
              (c_rhs
                (Expr_apply
                  ((fa_name (Expr_name (Atom_name (Atom rufmergel))))
                    (fa_args
                      ((Expr_cons
                         ((Expr_cons
                            ((Expr_name (Var_name Y)) (Expr_name (Var_name X)))
                            (Expr_name (Var_name R))))
                         (Expr_name (Var_name Rs)))
                        (Expr_list ()) (Expr_name (Var_name Fun))))))))))
        (fd_spec ())))
    (Module_comment (Comment "% X < Y"))
    (Function_decl
      ((fd_name (Atom ufsplit_1_1)) (fd_arity 7)
        (fd_cases
          (((c_lhs
              ((Pattern_binding (Var_name Y)) (Pattern_binding (Var_name X))
                (Pattern_binding (Var_name Fun))
                (Pattern_cons ((Pattern_binding (Var_name Z)))
                  (Pattern_binding (Var_name L)))
                (Pattern_binding (Var_name R)) (Pattern_binding (Var_name Rs))
                (Pattern_binding (Var_name S))))
             (c_guard ())
             (c_rhs
               (Expr_case
                 (Expr_apply
                   ((fa_name (Expr_name (Var_name Fun)))
                     (fa_args
                       ((Expr_name (Var_name Y)) (Expr_name (Var_name Z))))))
                 (((c_lhs ((Pattern_match (Lit_atom (Atom true)))))
                    (c_guard ())
                    (c_rhs
                      (Expr_case
                        (Expr_apply
                          ((fa_name (Expr_name (Var_name Fun)))
                            (fa_args
                              ((Expr_name (Var_name Z))
                                (Expr_name (Var_name Y))))))
                        (((c_lhs ((Pattern_match (Lit_atom (Atom true)))))
                           (c_guard ())
                           (c_rhs
                             (Expr_comment (Comment " Z equal to Y")
                               (Expr_apply
                                 ((fa_name
                                    (Expr_name (Atom_name (Atom ufsplit_1_1))))
                                   (fa_args
                                     ((Expr_name (Var_name Y))
                                       (Expr_name (Var_name X))
                                       (Expr_name (Var_name Fun))
                                       (Expr_name (Var_name L))
                                       (Expr_name (Var_name R))
                                       (Expr_name (Var_name Rs))
                                       (Expr_name (Var_name S)))))))))
                          ((c_lhs ((Pattern_match (Lit_atom (Atom false)))))
                            (c_guard ())
                            (c_rhs
                              (Expr_apply
                                ((fa_name
                                   (Expr_name (Atom_name (Atom ufsplit_1_1))))
                                  (fa_args
                                    ((Expr_name (Var_name Z))
                                      (Expr_name (Var_name Y))
                                      (Expr_name (Var_name Fun))
                                      (Expr_name (Var_name L))
                                      (Expr_cons ((Expr_name (Var_name X)))
                                        (Expr_name (Var_name R)))
                                      (Expr_name (Var_name Rs))
                                      (Expr_name (Var_name S))))))))))))
                   ((c_lhs ((Pattern_match (Lit_atom (Atom false)))))
                     (c_guard ())
                     (c_rhs
                       (Expr_case
                         (Expr_apply
                           ((fa_name (Expr_name (Var_name Fun)))
                             (fa_args
                               ((Expr_name (Var_name X))
                                 (Expr_name (Var_name Z))))))
                         (((c_lhs ((Pattern_match (Lit_atom (Atom true)))))
                            (c_guard ())
                            (c_rhs
                              (Expr_case
                                (Expr_apply
                                  ((fa_name (Expr_name (Var_name Fun)))
                                    (fa_args
                                      ((Expr_name (Var_name Z))
                                        (Expr_name (Var_name X))))))
                                (((c_lhs
                                    ((Pattern_match (Lit_atom (Atom true)))))
                                   (c_guard ())
                                   (c_rhs
                                     (Expr_comment (Comment " Z equal to X")
                                       (Expr_apply
                                         ((fa_name
                                            (Expr_name
                                              (Atom_name (Atom ufsplit_1_1))))
                                           (fa_args
                                             ((Expr_name (Var_name Y))
                                               (Expr_name (Var_name X))
                                               (Expr_name (Var_name Fun))
                                               (Expr_name (Var_name L))
                                               (Expr_name (Var_name R))
                                               (Expr_name (Var_name Rs))
                                               (Expr_name (Var_name S)))))))))
                                  ((c_lhs
                                     ((Pattern_match (Lit_atom (Atom false)))))
                                    (c_guard ())
                                    (c_rhs
                                      (Expr_apply
                                        ((fa_name
                                           (Expr_name
                                             (Atom_name (Atom ufsplit_1_1))))
                                          (fa_args
                                            ((Expr_name (Var_name Y))
                                              (Expr_name (Var_name Z))
                                              (Expr_name (Var_name Fun))
                                              (Expr_name (Var_name L))
                                              (Expr_cons
                                                ((Expr_name (Var_name X)))
                                                (Expr_name (Var_name R)))
                                              (Expr_name (Var_name Rs))
                                              (Expr_name (Var_name S))))))))))))
                           ((c_lhs ((Pattern_match (Lit_atom (Atom false)))))
                             (c_guard ())
                             (c_rhs
                               (Expr_case
                                 (Expr_apply
                                   ((fa_name (Expr_name (Var_name Fun)))
                                     (fa_args
                                       ((Expr_name (Var_name S))
                                         (Expr_name (Var_name Z))))))
                                 (((c_lhs
                                     ((Pattern_match (Lit_atom (Atom true)))))
                                    (c_guard ())
                                    (c_rhs
                                      (Expr_case
                                        (Expr_apply
                                          ((fa_name (Expr_name (Var_name Fun)))
                                            (fa_args
                                              ((Expr_name (Var_name Z))
                                                (Expr_name (Var_name S))))))
                                        (((c_lhs
                                            ((Pattern_match
                                               (Lit_atom (Atom true)))))
                                           (c_guard ())
                                           (c_rhs
                                             (Expr_comment
                                               (Comment " Z equal to S")
                                               (Expr_apply
                                                 ((fa_name
                                                    (Expr_name
                                                      (Atom_name
                                                        (Atom ufsplit_1_1))))
                                                   (fa_args
                                                     ((Expr_name (Var_name Y))
                                                       (Expr_name (Var_name X))
                                                       (Expr_name
                                                         (Var_name Fun))
                                                       (Expr_name (Var_name L))
                                                       (Expr_name (Var_name R))
                                                       (Expr_name
                                                         (Var_name Rs))
                                                       (Expr_name (Var_name S)))))))))
                                          ((c_lhs
                                             ((Pattern_match
                                                (Lit_atom (Atom false)))))
                                            (c_guard ())
                                            (c_rhs
                                              (Expr_apply
                                                ((fa_name
                                                   (Expr_name
                                                     (Atom_name
                                                       (Atom ufsplit_1))))
                                                  (fa_args
                                                    ((Expr_name (Var_name Z))
                                                      (Expr_name (Var_name S))
                                                      (Expr_name
                                                        (Var_name Fun))
                                                      (Expr_name (Var_name L))
                                                      (Expr_list ())
                                                      (Expr_cons
                                                        ((Expr_cons
                                                           ((Expr_name
                                                              (Var_name Y))
                                                             (Expr_name
                                                               (Var_name X)))
                                                           (Expr_name
                                                             (Var_name R))))
                                                        (Expr_name
                                                          (Var_name Rs)))))))))))))
                                   ((c_lhs
                                      ((Pattern_match (Lit_atom (Atom false)))))
                                     (c_guard ())
                                     (c_rhs
                                       (Expr_apply
                                         ((fa_name
                                            (Expr_name
                                              (Atom_name (Atom ufsplit_1))))
                                           (fa_args
                                             ((Expr_name (Var_name S))
                                               (Expr_name (Var_name Z))
                                               (Expr_name (Var_name Fun))
                                               (Expr_name (Var_name L))
                                               (Expr_list ())
                                               (Expr_cons
                                                 ((Expr_cons
                                                    ((Expr_name (Var_name Y))
                                                      (Expr_name (Var_name X)))
                                                    (Expr_name (Var_name R))))
                                                 (Expr_name (Var_name Rs)))))))))))))))))))))
            ((c_lhs
               ((Pattern_binding (Var_name Y)) (Pattern_binding (Var_name X))
                 (Pattern_binding (Var_name Fun)) (Pattern_list ())
                 (Pattern_binding (Var_name R)) (Pattern_binding (Var_name Rs))
                 (Pattern_binding (Var_name S))))
              (c_guard ())
              (c_rhs
                (Expr_apply
                  ((fa_name (Expr_name (Atom_name (Atom rufmergel))))
                    (fa_args
                      ((Expr_cons
                         ((Expr_list ((Expr_name (Var_name S))))
                           (Expr_cons
                             ((Expr_name (Var_name Y))
                               (Expr_name (Var_name X)))
                             (Expr_name (Var_name R))))
                         (Expr_name (Var_name Rs)))
                        (Expr_list ()) (Expr_name (Var_name Fun))))))))))
        (fd_spec ())))
    (Module_comment (Comment "% Descending."))
    (Function_decl
      ((fd_name (Atom ufsplit_2)) (fd_arity 4)
        (fd_cases
          (((c_lhs
              ((Pattern_binding (Var_name Y))
                (Pattern_cons ((Pattern_binding (Var_name Z)))
                  (Pattern_binding (Var_name L)))
                (Pattern_binding (Var_name Fun))
                (Pattern_binding (Var_name R))))
             (c_guard ())
             (c_rhs
               (Expr_case
                 (Expr_apply
                   ((fa_name (Expr_name (Var_name Fun)))
                     (fa_args
                       ((Expr_name (Var_name Y)) (Expr_name (Var_name Z))))))
                 (((c_lhs ((Pattern_match (Lit_atom (Atom true)))))
                    (c_guard ())
                    (c_rhs
                      (Expr_case
                        (Expr_apply
                          ((fa_name (Expr_name (Var_name Fun)))
                            (fa_args
                              ((Expr_name (Var_name Z))
                                (Expr_name (Var_name Y))))))
                        (((c_lhs ((Pattern_match (Lit_atom (Atom true)))))
                           (c_guard ())
                           (c_rhs
                             (Expr_comment (Comment " Z equal to Y")
                               (Expr_apply
                                 ((fa_name
                                    (Expr_name (Atom_name (Atom ufsplit_2))))
                                   (fa_args
                                     ((Expr_name (Var_name Y))
                                       (Expr_name (Var_name L))
                                       (Expr_name (Var_name Fun))
                                       (Expr_name (Var_name R)))))))))
                          ((c_lhs ((Pattern_match (Lit_atom (Atom false)))))
                            (c_guard ())
                            (c_rhs
                              (Expr_apply
                                ((fa_name
                                   (Expr_name (Atom_name (Atom ufsplit_1))))
                                  (fa_args
                                    ((Expr_name (Var_name Z))
                                      (Expr_name (Var_name Y))
                                      (Expr_name (Var_name Fun))
                                      (Expr_name (Var_name L)) (Expr_list ())
                                      (Expr_list
                                        ((Expr_apply
                                           ((fa_name
                                              (Expr_name
                                                (Qualified_name
                                                  (n_mod
                                                    (Atom_name (Atom lists)))
                                                  (n_name
                                                    (Atom_name (Atom reverse))))))
                                             (fa_args
                                               ((Expr_name (Var_name R))
                                                 (Expr_list ())))))))))))))))))
                   ((c_lhs ((Pattern_match (Lit_atom (Atom false)))))
                     (c_guard ())
                     (c_rhs
                       (Expr_apply
                         ((fa_name (Expr_name (Atom_name (Atom ufsplit_2))))
                           (fa_args
                             ((Expr_name (Var_name Z)) (Expr_name (Var_name L))
                               (Expr_name (Var_name Fun))
                               (Expr_cons ((Expr_name (Var_name Y)))
                                 (Expr_name (Var_name R)))))))))))))
            ((c_lhs
               ((Pattern_binding (Var_name Y)) (Pattern_list ())
                 (Pattern_binding (Var_name _Fun))
                 (Pattern_binding (Var_name R))))
              (c_guard ())
              (c_rhs
                (Expr_cons ((Expr_name (Var_name Y))) (Expr_name (Var_name R)))))))
        (fd_spec ())))
    (Function_decl
      ((fd_name (Atom ufmergel)) (fd_arity 3)
        (fd_cases
          (((c_lhs
              ((Pattern_cons
                 ((Pattern_cons ((Pattern_binding (Var_name H1)))
                    (Pattern_binding (Var_name T1)))
                   (Pattern_binding (Var_name T2)))
                 (Pattern_binding (Var_name L)))
                (Pattern_binding (Var_name Acc))
                (Pattern_binding (Var_name Fun))))
             (c_guard ())
             (c_rhs
               (Expr_apply
                 ((fa_name (Expr_name (Atom_name (Atom ufmergel))))
                   (fa_args
                     ((Expr_name (Var_name L))
                       (Expr_cons
                         ((Expr_apply
                            ((fa_name
                               (Expr_name (Atom_name (Atom ufmerge2_2))))
                              (fa_args
                                ((Expr_name (Var_name H1))
                                  (Expr_name (Var_name T1))
                                  (Expr_name (Var_name Fun))
                                  (Expr_name (Var_name T2)) (Expr_list ()))))))
                         (Expr_name (Var_name Acc)))
                       (Expr_name (Var_name Fun))))))))
            ((c_lhs
               ((Pattern_list ((Pattern_binding (Var_name L))))
                 (Pattern_list ()) (Pattern_binding (Var_name _Fun))))
              (c_guard ()) (c_rhs (Expr_name (Var_name L))))
            ((c_lhs
               ((Pattern_list ((Pattern_binding (Var_name L))))
                 (Pattern_binding (Var_name Acc))
                 (Pattern_binding (Var_name Fun))))
              (c_guard ())
              (c_rhs
                (Expr_apply
                  ((fa_name (Expr_name (Atom_name (Atom rufmergel))))
                    (fa_args
                      ((Expr_cons
                         ((Expr_apply
                            ((fa_name
                               (Expr_name
                                 (Qualified_name
                                   (n_mod (Atom_name (Atom lists)))
                                   (n_name (Atom_name (Atom reverse))))))
                              (fa_args
                                ((Expr_name (Var_name L)) (Expr_list ()))))))
                         (Expr_name (Var_name Acc)))
                        (Expr_list ()) (Expr_name (Var_name Fun))))))))
            ((c_lhs
               ((Pattern_list ()) (Pattern_binding (Var_name Acc))
                 (Pattern_binding (Var_name Fun))))
              (c_guard ())
              (c_rhs
                (Expr_apply
                  ((fa_name (Expr_name (Atom_name (Atom rufmergel))))
                    (fa_args
                      ((Expr_name (Var_name Acc)) (Expr_list ())
                        (Expr_name (Var_name Fun))))))))))
        (fd_spec ())))
    (Function_decl
      ((fd_name (Atom rufmergel)) (fd_arity 3)
        (fd_cases
          (((c_lhs
              ((Pattern_cons
                 ((Pattern_cons ((Pattern_binding (Var_name H2)))
                    (Pattern_binding (Var_name T2)))
                   (Pattern_binding (Var_name T1)))
                 (Pattern_binding (Var_name L)))
                (Pattern_binding (Var_name Acc))
                (Pattern_binding (Var_name Fun))))
             (c_guard ())
             (c_rhs
               (Expr_apply
                 ((fa_name (Expr_name (Atom_name (Atom rufmergel))))
                   (fa_args
                     ((Expr_name (Var_name L))
                       (Expr_cons
                         ((Expr_apply
                            ((fa_name
                               (Expr_name (Atom_name (Atom rufmerge2_1))))
                              (fa_args
                                ((Expr_name (Var_name T1))
                                  (Expr_name (Var_name H2))
                                  (Expr_name (Var_name Fun))
                                  (Expr_name (Var_name T2)) (Expr_list ()))))))
                         (Expr_name (Var_name Acc)))
                       (Expr_name (Var_name Fun))))))))
            ((c_lhs
               ((Pattern_list ((Pattern_binding (Var_name L))))
                 (Pattern_binding (Var_name Acc))
                 (Pattern_binding (Var_name Fun))))
              (c_guard ())
              (c_rhs
                (Expr_apply
                  ((fa_name (Expr_name (Atom_name (Atom ufmergel))))
                    (fa_args
                      ((Expr_cons
                         ((Expr_apply
                            ((fa_name
                               (Expr_name
                                 (Qualified_name
                                   (n_mod (Atom_name (Atom lists)))
                                   (n_name (Atom_name (Atom reverse))))))
                              (fa_args
                                ((Expr_name (Var_name L)) (Expr_list ()))))))
                         (Expr_name (Var_name Acc)))
                        (Expr_list ()) (Expr_name (Var_name Fun))))))))
            ((c_lhs
               ((Pattern_list ()) (Pattern_binding (Var_name Acc))
                 (Pattern_binding (Var_name Fun))))
              (c_guard ())
              (c_rhs
                (Expr_apply
                  ((fa_name (Expr_name (Atom_name (Atom ufmergel))))
                    (fa_args
                      ((Expr_name (Var_name Acc)) (Expr_list ())
                        (Expr_name (Var_name Fun))))))))))
        (fd_spec ())))
    (Module_comment (Comment "% umerge/3"))
    (Module_comment
      (Comment "% Elements from the first list are kept and prioritized."))
    (Module_comment (Comment "% HdM before H2."))
    (Function_decl
      ((fd_name (Atom ufmerge2_1)) (fd_arity 6)
        (fd_cases
          (((c_lhs
              ((Pattern_cons ((Pattern_binding (Var_name H1)))
                 (Pattern_binding (Var_name T1)))
                (Pattern_binding (Var_name H2))
                (Pattern_binding (Var_name Fun))
                (Pattern_binding (Var_name T2)) (Pattern_binding (Var_name M))
                (Pattern_binding (Var_name HdM))))
             (c_guard ())
             (c_rhs
               (Expr_case
                 (Expr_apply
                   ((fa_name (Expr_name (Var_name Fun)))
                     (fa_args
                       ((Expr_name (Var_name H1)) (Expr_name (Var_name H2))))))
                 (((c_lhs ((Pattern_match (Lit_atom (Atom true)))))
                    (c_guard ())
                    (c_rhs
                      (Expr_apply
                        ((fa_name (Expr_name (Atom_name (Atom ufmerge2_1))))
                          (fa_args
                            ((Expr_name (Var_name T1))
                              (Expr_name (Var_name H2))
                              (Expr_name (Var_name Fun))
                              (Expr_name (Var_name T2))
                              (Expr_cons ((Expr_name (Var_name H1)))
                                (Expr_name (Var_name M)))
                              (Expr_name (Var_name H1))))))))
                   ((c_lhs ((Pattern_match (Lit_atom (Atom false)))))
                     (c_guard ())
                     (c_rhs
                       (Expr_case
                         (Expr_apply
                           ((fa_name (Expr_name (Var_name Fun)))
                             (fa_args
                               ((Expr_name (Var_name H2))
                                 (Expr_name (Var_name HdM))))))
                         (((c_lhs ((Pattern_match (Lit_atom (Atom true)))))
                            (c_guard ())
                            (c_rhs
                              (Expr_comment (Comment " HdM equal to H2")
                                (Expr_apply
                                  ((fa_name
                                     (Expr_name (Atom_name (Atom ufmerge2_2))))
                                    (fa_args
                                      ((Expr_name (Var_name H1))
                                        (Expr_name (Var_name T1))
                                        (Expr_name (Var_name Fun))
                                        (Expr_name (Var_name T2))
                                        (Expr_name (Var_name M)))))))))
                           ((c_lhs ((Pattern_match (Lit_atom (Atom false)))))
                             (c_guard ())
                             (c_rhs
                               (Expr_apply
                                 ((fa_name
                                    (Expr_name (Atom_name (Atom ufmerge2_2))))
                                   (fa_args
                                     ((Expr_name (Var_name H1))
                                       (Expr_name (Var_name T1))
                                       (Expr_name (Var_name Fun))
                                       (Expr_name (Var_name T2))
                                       (Expr_cons ((Expr_name (Var_name H2)))
                                         (Expr_name (Var_name M)))))))))))))))))
            ((c_lhs
               ((Pattern_list ()) (Pattern_binding (Var_name H2))
                 (Pattern_binding (Var_name Fun))
                 (Pattern_binding (Var_name T2)) (Pattern_binding (Var_name M))
                 (Pattern_binding (Var_name HdM))))
              (c_guard ())
              (c_rhs
                (Expr_case
                  (Expr_apply
                    ((fa_name (Expr_name (Var_name Fun)))
                      (fa_args
                        ((Expr_name (Var_name H2)) (Expr_name (Var_name HdM))))))
                  (((c_lhs ((Pattern_match (Lit_atom (Atom true)))))
                     (c_guard ())
                     (c_rhs
                       (Expr_comment (Comment " HdM equal to H2")
                         (Expr_apply
                           ((fa_name
                              (Expr_name
                                (Qualified_name
                                  (n_mod (Atom_name (Atom lists)))
                                  (n_name (Atom_name (Atom reverse))))))
                             (fa_args
                               ((Expr_name (Var_name T2))
                                 (Expr_name (Var_name M)))))))))
                    ((c_lhs ((Pattern_match (Lit_atom (Atom false)))))
                      (c_guard ())
                      (c_rhs
                        (Expr_apply
                          ((fa_name
                             (Expr_name
                               (Qualified_name (n_mod (Atom_name (Atom lists)))
                                 (n_name (Atom_name (Atom reverse))))))
                            (fa_args
                              ((Expr_name (Var_name T2))
                                (Expr_cons ((Expr_name (Var_name H2)))
                                  (Expr_name (Var_name M)))))))))))))))
        (fd_spec ())))
    (Function_decl
      ((fd_name (Atom ufmerge2_2)) (fd_arity 5)
        (fd_cases
          (((c_lhs
              ((Pattern_binding (Var_name H1)) (Pattern_binding (Var_name T1))
                (Pattern_binding (Var_name Fun))
                (Pattern_cons ((Pattern_binding (Var_name H2)))
                  (Pattern_binding (Var_name T2)))
                (Pattern_binding (Var_name M))))
             (c_guard ())
             (c_rhs
               (Expr_case
                 (Expr_apply
                   ((fa_name (Expr_name (Var_name Fun)))
                     (fa_args
                       ((Expr_name (Var_name H1)) (Expr_name (Var_name H2))))))
                 (((c_lhs ((Pattern_match (Lit_atom (Atom true)))))
                    (c_guard ())
                    (c_rhs
                      (Expr_apply
                        ((fa_name (Expr_name (Atom_name (Atom ufmerge2_1))))
                          (fa_args
                            ((Expr_name (Var_name T1))
                              (Expr_name (Var_name H2))
                              (Expr_name (Var_name Fun))
                              (Expr_name (Var_name T2))
                              (Expr_cons ((Expr_name (Var_name H1)))
                                (Expr_name (Var_name M)))
                              (Expr_name (Var_name H1))))))))
                   ((c_lhs ((Pattern_match (Lit_atom (Atom false)))))
                     (c_guard ())
                     (c_rhs
                       (Expr_apply
                         ((fa_name (Expr_name (Atom_name (Atom ufmerge2_2))))
                           (fa_args
                             ((Expr_name (Var_name H1))
                               (Expr_name (Var_name T1))
                               (Expr_name (Var_name Fun))
                               (Expr_name (Var_name T2))
                               (Expr_cons ((Expr_name (Var_name H2)))
                                 (Expr_name (Var_name M)))))))))))))
            ((c_lhs
               ((Pattern_binding (Var_name H1)) (Pattern_binding (Var_name T1))
                 (Pattern_binding (Var_name _Fun)) (Pattern_list ())
                 (Pattern_binding (Var_name M))))
              (c_guard ())
              (c_rhs
                (Expr_apply
                  ((fa_name
                     (Expr_name
                       (Qualified_name (n_mod (Atom_name (Atom lists)))
                         (n_name (Atom_name (Atom reverse))))))
                    (fa_args
                      ((Expr_name (Var_name T1))
                        (Expr_cons ((Expr_name (Var_name H1)))
                          (Expr_name (Var_name M)))))))))))
        (fd_spec ())))
    (Module_comment (Comment "% rumerge/3"))
    (Function_decl
      ((fd_name (Atom rufmerge2_1)) (fd_arity 5)
        (fd_cases
          (((c_lhs
              ((Pattern_cons ((Pattern_binding (Var_name H1)))
                 (Pattern_binding (Var_name T1)))
                (Pattern_binding (Var_name H2))
                (Pattern_binding (Var_name Fun))
                (Pattern_binding (Var_name T2)) (Pattern_binding (Var_name M))))
             (c_guard ())
             (c_rhs
               (Expr_case
                 (Expr_apply
                   ((fa_name (Expr_name (Var_name Fun)))
                     (fa_args
                       ((Expr_name (Var_name H1)) (Expr_name (Var_name H2))))))
                 (((c_lhs ((Pattern_match (Lit_atom (Atom true)))))
                    (c_guard ())
                    (c_rhs
                      (Expr_apply
                        ((fa_name (Expr_name (Atom_name (Atom rufmerge2_2))))
                          (fa_args
                            ((Expr_name (Var_name H1))
                              (Expr_name (Var_name T1))
                              (Expr_name (Var_name Fun))
                              (Expr_name (Var_name T2))
                              (Expr_name (Var_name M))
                              (Expr_name (Var_name H2))))))))
                   ((c_lhs ((Pattern_match (Lit_atom (Atom false)))))
                     (c_guard ())
                     (c_rhs
                       (Expr_apply
                         ((fa_name (Expr_name (Atom_name (Atom rufmerge2_1))))
                           (fa_args
                             ((Expr_name (Var_name T1))
                               (Expr_name (Var_name H2))
                               (Expr_name (Var_name Fun))
                               (Expr_name (Var_name T2))
                               (Expr_cons ((Expr_name (Var_name H1)))
                                 (Expr_name (Var_name M)))))))))))))
            ((c_lhs
               ((Pattern_list ()) (Pattern_binding (Var_name H2))
                 (Pattern_binding (Var_name _Fun))
                 (Pattern_binding (Var_name T2))
                 (Pattern_binding (Var_name M))))
              (c_guard ())
              (c_rhs
                (Expr_apply
                  ((fa_name
                     (Expr_name
                       (Qualified_name (n_mod (Atom_name (Atom lists)))
                         (n_name (Atom_name (Atom reverse))))))
                    (fa_args
                      ((Expr_name (Var_name T2))
                        (Expr_cons ((Expr_name (Var_name H2)))
                          (Expr_name (Var_name M)))))))))))
        (fd_spec ())))
    (Module_comment (Comment "% H1 before H2M"))
    (Function_decl
      ((fd_name (Atom rufmerge2_2)) (fd_arity 6)
        (fd_cases
          (((c_lhs
              ((Pattern_binding (Var_name H1)) (Pattern_binding (Var_name T1))
                (Pattern_binding (Var_name Fun))
                (Pattern_cons ((Pattern_binding (Var_name H2)))
                  (Pattern_binding (Var_name T2)))
                (Pattern_binding (Var_name M))
                (Pattern_binding (Var_name H2M))))
             (c_guard ())
             (c_rhs
               (Expr_case
                 (Expr_apply
                   ((fa_name (Expr_name (Var_name Fun)))
                     (fa_args
                       ((Expr_name (Var_name H1)) (Expr_name (Var_name H2))))))
                 (((c_lhs ((Pattern_match (Lit_atom (Atom true)))))
                    (c_guard ())
                    (c_rhs
                      (Expr_apply
                        ((fa_name (Expr_name (Atom_name (Atom rufmerge2_2))))
                          (fa_args
                            ((Expr_name (Var_name H1))
                              (Expr_name (Var_name T1))
                              (Expr_name (Var_name Fun))
                              (Expr_name (Var_name T2))
                              (Expr_cons ((Expr_name (Var_name H2M)))
                                (Expr_name (Var_name M)))
                              (Expr_name (Var_name H2))))))))
                   ((c_lhs ((Pattern_match (Lit_atom (Atom false)))))
                     (c_guard ())
                     (c_rhs
                       (Expr_case
                         (Expr_apply
                           ((fa_name (Expr_name (Var_name Fun)))
                             (fa_args
                               ((Expr_name (Var_name H2M))
                                 (Expr_name (Var_name H1))))))
                         (((c_lhs ((Pattern_match (Lit_atom (Atom true)))))
                            (c_guard ())
                            (c_rhs
                              (Expr_comment (Comment " H2M equal to H1")
                                (Expr_apply
                                  ((fa_name
                                     (Expr_name (Atom_name (Atom rufmerge2_1))))
                                    (fa_args
                                      ((Expr_name (Var_name T1))
                                        (Expr_name (Var_name H2))
                                        (Expr_name (Var_name Fun))
                                        (Expr_name (Var_name T2))
                                        (Expr_cons ((Expr_name (Var_name H1)))
                                          (Expr_name (Var_name M))))))))))
                           ((c_lhs ((Pattern_match (Lit_atom (Atom false)))))
                             (c_guard ())
                             (c_rhs
                               (Expr_apply
                                 ((fa_name
                                    (Expr_name (Atom_name (Atom rufmerge2_1))))
                                   (fa_args
                                     ((Expr_name (Var_name T1))
                                       (Expr_name (Var_name H2))
                                       (Expr_name (Var_name Fun))
                                       (Expr_name (Var_name T2))
                                       (Expr_cons
                                         ((Expr_name (Var_name H1))
                                           (Expr_name (Var_name H2M)))
                                         (Expr_name (Var_name M)))))))))))))))))
            ((c_lhs
               ((Pattern_binding (Var_name H1)) (Pattern_binding (Var_name T1))
                 (Pattern_binding (Var_name Fun)) (Pattern_list ())
                 (Pattern_binding (Var_name M))
                 (Pattern_binding (Var_name H2M))))
              (c_guard ())
              (c_rhs
                (Expr_case
                  (Expr_apply
                    ((fa_name (Expr_name (Var_name Fun)))
                      (fa_args
                        ((Expr_name (Var_name H2M)) (Expr_name (Var_name H1))))))
                  (((c_lhs ((Pattern_match (Lit_atom (Atom true)))))
                     (c_guard ())
                     (c_rhs
                       (Expr_apply
                         ((fa_name
                            (Expr_name
                              (Qualified_name (n_mod (Atom_name (Atom lists)))
                                (n_name (Atom_name (Atom reverse))))))
                           (fa_args
                             ((Expr_name (Var_name T1))
                               (Expr_cons ((Expr_name (Var_name H1)))
                                 (Expr_name (Var_name M)))))))))
                    ((c_lhs ((Pattern_match (Lit_atom (Atom false)))))
                      (c_guard ())
                      (c_rhs
                        (Expr_apply
                          ((fa_name
                             (Expr_name
                               (Qualified_name (n_mod (Atom_name (Atom lists)))
                                 (n_name (Atom_name (Atom reverse))))))
                            (fa_args
                              ((Expr_name (Var_name T1))
                                (Expr_cons
                                  ((Expr_name (Var_name H1))
                                    (Expr_name (Var_name H2M)))
                                  (Expr_name (Var_name M)))))))))))))))
        (fd_spec ()))))
  $ erldump parse gen_server.erl
  ((Module_comment (Comment %)) (Module_comment (Comment "% %CopyrightBegin%"))
    (Module_comment (Comment %))
    (Module_comment
      (Comment "% Copyright Ericsson AB 1996-2018. All Rights Reserved."))
    (Module_comment (Comment %))
    (Module_comment
      (Comment
        "% Licensed under the Apache License, Version 2.0 (the \"License\");"))
    (Module_comment
      (Comment
        "% you may not use this file except in compliance with the License."))
    (Module_comment (Comment "% You may obtain a copy of the License at"))
    (Module_comment (Comment %))
    (Module_comment
      (Comment "%     http://www.apache.org/licenses/LICENSE-2.0"))
    (Module_comment (Comment %))
    (Module_comment
      (Comment
        "% Unless required by applicable law or agreed to in writing, software"))
    (Module_comment
      (Comment
        "% distributed under the License is distributed on an \"AS IS\" BASIS,"))
    (Module_comment
      (Comment
        "% WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."))
    (Module_comment
      (Comment
        "% See the License for the specific language governing permissions and"))
    (Module_comment (Comment "% limitations under the License."))
    (Module_comment (Comment %)) (Module_comment (Comment "% %CopyrightEnd%"))
    (Module_comment (Comment %))
    (Module_attribute
      ((atr_name (Atom module))
        (atr_value (Expr_literal (Lit_atom (Atom gen_server))))))
    (Module_comment (Comment %%))
    (Module_comment
      (Comment
        "%% NOTE: If init_ack() return values are modified, see comment"))
    (Module_comment (Comment "%%       above monitor_return() in gen.erl!"))
    (Module_comment (Comment %%))
    (Module_comment
      (Comment "%% ---------------------------------------------------"))
    (Module_comment (Comment %%))
    (Module_comment
      (Comment "%% The idea behind THIS server is that the user module"))
    (Module_comment
      (Comment "%% provides (different) functions to handle different"))
    (Module_comment (Comment "%% kind of inputs. "))
    (Module_comment
      (Comment "%% If the Parent process terminates the Module:terminate/2"))
    (Module_comment (Comment "%% function is called."))
    (Module_comment (Comment %%))
    (Module_comment (Comment "%% The user module should export:"))
    (Module_comment (Comment %%))
    (Module_comment (Comment "%%   init(Args)  "))
    (Module_comment (Comment "%%     ==> {ok, State}"))
    (Module_comment (Comment "%%         {ok, State, Timeout}"))
    (Module_comment (Comment "%%         ignore"))
    (Module_comment (Comment "%%         {stop, Reason}"))
    (Module_comment (Comment %%))
    (Module_comment (Comment "%%   handle_call(Msg, {From, Tag}, State)"))
    (Module_comment (Comment %%))
    (Module_comment (Comment "%%    ==> {reply, Reply, State}"))
    (Module_comment (Comment "%%        {reply, Reply, State, Timeout}"))
    (Module_comment (Comment "%%        {noreply, State}"))
    (Module_comment (Comment "%%        {noreply, State, Timeout}"))
    (Module_comment (Comment "%%        {stop, Reason, Reply, State}  "))
    (Module_comment
      (Comment
        "%%              Reason = normal | shutdown | Term terminate(State) is called"))
    (Module_comment (Comment %%))
    (Module_comment (Comment "%%   handle_cast(Msg, State)"))
    (Module_comment (Comment %%))
    (Module_comment (Comment "%%    ==> {noreply, State}"))
    (Module_comment (Comment "%%        {noreply, State, Timeout}"))
    (Module_comment (Comment "%%        {stop, Reason, State} "))
    (Module_comment
      (Comment
        "%%              Reason = normal | shutdown | Term terminate(State) is called"))
    (Module_comment (Comment %%))
    (Module_comment
      (Comment
        "%%   handle_info(Info, State) Info is e.g. {'EXIT', P, R}, {nodedown, N}, ..."))
    (Module_comment (Comment %%))
    (Module_comment (Comment "%%    ==> {noreply, State}"))
    (Module_comment (Comment "%%        {noreply, State, Timeout}"))
    (Module_comment (Comment "%%        {stop, Reason, State} "))
    (Module_comment
      (Comment
        "%%              Reason = normal | shutdown | Term, terminate(State) is called"))
    (Module_comment (Comment %%))
    (Module_comment
      (Comment "%%   terminate(Reason, State) Let the user module clean up"))
    (Module_comment (Comment "%%        always called when server terminates"))
    (Module_comment (Comment %%)) (Module_comment (Comment "%%    ==> ok"))
    (Module_comment (Comment %%)) (Module_comment (Comment %%))
    (Module_comment
      (Comment "%% The work flow (of the server) can be described as follows:"))
    (Module_comment (Comment %%))
    (Module_comment
      (Comment "%%   User module                          Generic"))
    (Module_comment
      (Comment "%%   -----------                          -------"))
    (Module_comment
      (Comment "%%     start            ----->             start"))
    (Module_comment (Comment "%%     init             <-----              ."))
    (Module_comment (Comment %%))
    (Module_comment
      (Comment "%%                                         loop"))
    (Module_comment (Comment "%%     handle_call      <-----              ."))
    (Module_comment
      (Comment "%%                      ----->             reply"))
    (Module_comment (Comment %%))
    (Module_comment (Comment "%%     handle_cast      <-----              ."))
    (Module_comment (Comment %%))
    (Module_comment (Comment "%%     handle_info      <-----              ."))
    (Module_comment (Comment %%))
    (Module_comment (Comment "%%     terminate        <-----              ."))
    (Module_comment (Comment %%))
    (Module_comment
      (Comment "%%                      ----->             reply"))
    (Module_comment (Comment %%)) (Module_comment (Comment %%))
    (Module_comment
      (Comment "%% ---------------------------------------------------"))
    (Module_comment (Comment "% API"))
    (Module_attribute
      ((atr_name (Atom export))
        (atr_value
          (Expr_list
            ((Expr_tuple
               ((Expr_literal (Lit_atom (Atom start)))
                 (Expr_literal (Lit_integer 3))))
              (Expr_tuple
                ((Expr_literal (Lit_atom (Atom start)))
                  (Expr_literal (Lit_integer 4))))
              (Expr_tuple
                ((Expr_literal (Lit_atom (Atom start_link)))
                  (Expr_literal (Lit_integer 3))))
              (Expr_tuple
                ((Expr_literal (Lit_atom (Atom start_link)))
                  (Expr_literal (Lit_integer 4))))
              (Expr_tuple
                ((Expr_literal (Lit_atom (Atom start_monitor)))
                  (Expr_literal (Lit_integer 3))))
              (Expr_tuple
                ((Expr_literal (Lit_atom (Atom start_monitor)))
                  (Expr_literal (Lit_integer 4))))
              (Expr_tuple
                ((Expr_literal (Lit_atom (Atom stop)))
                  (Expr_literal (Lit_integer 1))))
              (Expr_tuple
                ((Expr_literal (Lit_atom (Atom stop)))
                  (Expr_literal (Lit_integer 3))))
              (Expr_tuple
                ((Expr_literal (Lit_atom (Atom call)))
                  (Expr_literal (Lit_integer 2))))
              (Expr_tuple
                ((Expr_literal (Lit_atom (Atom call)))
                  (Expr_literal (Lit_integer 3))))
              (Expr_tuple
                ((Expr_literal (Lit_atom (Atom send_request)))
                  (Expr_literal (Lit_integer 2))))
              (Expr_tuple
                ((Expr_literal (Lit_atom (Atom wait_response)))
                  (Expr_literal (Lit_integer 2))))
              (Expr_tuple
                ((Expr_literal (Lit_atom (Atom check_response)))
                  (Expr_literal (Lit_integer 2))))
              (Expr_tuple
                ((Expr_literal (Lit_atom (Atom cast)))
                  (Expr_literal (Lit_integer 2))))
              (Expr_tuple
                ((Expr_literal (Lit_atom (Atom reply)))
                  (Expr_literal (Lit_integer 2))))
              (Expr_tuple
                ((Expr_literal (Lit_atom (Atom abcast)))
                  (Expr_literal (Lit_integer 2))))
              (Expr_tuple
                ((Expr_literal (Lit_atom (Atom abcast)))
                  (Expr_literal (Lit_integer 3))))
              (Expr_tuple
                ((Expr_literal (Lit_atom (Atom multi_call)))
                  (Expr_literal (Lit_integer 2))))
              (Expr_tuple
                ((Expr_literal (Lit_atom (Atom multi_call)))
                  (Expr_literal (Lit_integer 3))))
              (Expr_tuple
                ((Expr_literal (Lit_atom (Atom multi_call)))
                  (Expr_literal (Lit_integer 4))))
              (Expr_tuple
                ((Expr_literal (Lit_atom (Atom enter_loop)))
                  (Expr_literal (Lit_integer 3))))
              (Expr_tuple
                ((Expr_literal (Lit_atom (Atom enter_loop)))
                  (Expr_literal (Lit_integer 4))))
              (Expr_tuple
                ((Expr_literal (Lit_atom (Atom enter_loop)))
                  (Expr_literal (Lit_integer 5))))
              (Expr_tuple
                ((Expr_literal (Lit_atom (Atom wake_hib)))
                  (Expr_literal (Lit_integer 6)))))))))
    (Module_comment (Comment "% System exports"))
    (Module_attribute
      ((atr_name (Atom export))
        (atr_value
          (Expr_list
            ((Expr_tuple
               ((Expr_literal (Lit_atom (Atom system_continue)))
                 (Expr_literal (Lit_integer 3))))
              (Expr_tuple
                ((Expr_literal (Lit_atom (Atom system_terminate)))
                  (Expr_literal (Lit_integer 4))))
              (Expr_tuple
                ((Expr_literal (Lit_atom (Atom system_code_change)))
                  (Expr_literal (Lit_integer 4))))
              (Expr_tuple
                ((Expr_literal (Lit_atom (Atom system_get_state)))
                  (Expr_literal (Lit_integer 1))))
              (Expr_tuple
                ((Expr_literal (Lit_atom (Atom system_replace_state)))
                  (Expr_literal (Lit_integer 2))))
              (Expr_tuple
                ((Expr_literal (Lit_atom (Atom format_status)))
                  (Expr_literal (Lit_integer 2)))))))))
    (Module_comment (Comment "% logger callback"))
    (Module_attribute
      ((atr_name (Atom export))
        (atr_value
          (Expr_list
            ((Expr_tuple
               ((Expr_literal (Lit_atom (Atom format_log)))
                 (Expr_literal (Lit_integer 1))))
              (Expr_tuple
                ((Expr_literal (Lit_atom (Atom format_log)))
                  (Expr_literal (Lit_integer 2)))))))))
    (Module_comment (Comment "% Internal exports"))
    (Module_attribute
      ((atr_name (Atom export))
        (atr_value
          (Expr_list
            ((Expr_tuple
               ((Expr_literal (Lit_atom (Atom init_it)))
                 (Expr_literal (Lit_integer 6)))))))))
    (Module_comment (Comment " FIXME: this should be \"logger.hrl\""))
    (Module_attribute
      ((atr_name (Atom include))
        (atr_value (Expr_literal (Lit_binary logger.hrl)))))
    (Module_attribute
      ((atr_name (Atom define))
        (atr_value
          (Expr_list
            ((Expr_apply
               ((fa_name (Expr_name (Var_name STACKTRACE))) (fa_args ())))
              (Expr_apply
                ((fa_name (Expr_name (Atom_name (Atom element))))
                  (fa_args
                    ((Expr_literal (Lit_integer 2))
                      (Expr_apply
                        ((fa_name
                           (Expr_name
                             (Qualified_name (n_mod (Atom_name (Atom erlang)))
                               (n_name (Atom_name (Atom process_info))))))
                          (fa_args
                            ((Expr_apply
                               ((fa_name (Expr_name (Atom_name (Atom self))))
                                 (fa_args ())))
                              (Expr_literal
                                (Lit_atom (Atom current_stacktrace))))))))))))))))
    (Module_comment (Comment " FIXME: parenthesizing isn't supported yet"))
    (Module_comment (Comment " | (LocalName :: atom())"))
    (Type_decl
      ((typ_expr
         (Type_variant
           ((Type_constr ((tc_name (Atom_name (Atom pid))) (tc_args ())))
             (Type_variant
               ((Type_tuple
                  ((Type_constr
                     ((tc_name (Atom_name (Atom atom))) (tc_args ())))
                    (Type_constr
                      ((tc_name (Atom_name (Atom atom))) (tc_args ())))))
                 (Type_variant
                   ((Type_tuple
                      ((Type_const (Lit_atom (Atom global)))
                        (Type_constr
                          ((tc_name (Atom_name (Atom term))) (tc_args ())))))
                     (Type_tuple
                       ((Type_const (Lit_atom (Atom via)))
                         (Type_constr
                           ((tc_name (Atom_name (Atom module))) (tc_args ())))
                         (Type_constr
                           ((tc_name (Atom_name (Atom term))) (tc_args ()))))))))))))
        (typ_kind Type) (typ_name (Atom server_ref)) (typ_params ())))
    (Type_decl
      ((typ_expr
         (Type_constr ((tc_name (Atom_name (Atom term))) (tc_args ()))))
        (typ_kind Type) (typ_name (Atom request_id)) (typ_params ())))
    (Module_comment
      (Comment
        %%=========================================================================))
    (Module_comment (Comment "%%  API"))
    (Module_comment
      (Comment
        %%=========================================================================))
    (Type_decl
      ((typ_expr
         (Type_variant
           ((Type_tuple
              ((Type_const (Lit_atom (Atom ok)))
                (Type_constr ((tc_name (Atom_name (Atom term))) (tc_args ())))))
             (Type_variant
               ((Type_tuple
                  ((Type_const (Lit_atom (Atom ok)))
                    (Type_constr
                      ((tc_name (Atom_name (Atom term))) (tc_args ())))
                    (Type_variant
                      ((Type_constr
                         ((tc_name (Atom_name (Atom timeout))) (tc_args ())))
                        (Type_variant
                          ((Type_const (Lit_atom (Atom hibernate)))
                            (Type_tuple
                              ((Type_const (Lit_atom (Atom continue)))
                                (Type_constr
                                  ((tc_name (Atom_name (Atom term)))
                                    (tc_args ())))))))))))
                 (Type_variant
                   ((Type_tuple
                      ((Type_const (Lit_atom (Atom stop)))
                        (Type_constr
                          ((tc_name (Atom_name (Atom term))) (tc_args ())))))
                     (Type_const (Lit_atom (Atom ignore))))))))))
        (typ_kind Callback) (typ_name (Atom init))
        (typ_params
          ((Type_constr ((tc_name (Atom_name (Atom term))) (tc_args ())))))))
    (Type_decl
      ((typ_expr
         (Type_variant
           ((Type_tuple
              ((Type_const (Lit_atom (Atom reply)))
                (Type_constr ((tc_name (Atom_name (Atom term))) (tc_args ())))
                (Type_constr ((tc_name (Atom_name (Atom term))) (tc_args ())))))
             (Type_variant
               ((Type_tuple
                  ((Type_const (Lit_atom (Atom reply)))
                    (Type_constr
                      ((tc_name (Atom_name (Atom term))) (tc_args ())))
                    (Type_constr
                      ((tc_name (Atom_name (Atom term))) (tc_args ())))
                    (Type_variant
                      ((Type_constr
                         ((tc_name (Atom_name (Atom timeout))) (tc_args ())))
                        (Type_variant
                          ((Type_const (Lit_atom (Atom hibernate)))
                            (Type_tuple
                              ((Type_const (Lit_atom (Atom continue)))
                                (Type_constr
                                  ((tc_name (Atom_name (Atom term)))
                                    (tc_args ())))))))))))
                 (Type_variant
                   ((Type_tuple
                      ((Type_const (Lit_atom (Atom noreply)))
                        (Type_constr
                          ((tc_name (Atom_name (Atom term))) (tc_args ())))))
                     (Type_variant
                       ((Type_tuple
                          ((Type_const (Lit_atom (Atom noreply)))
                            (Type_constr
                              ((tc_name (Atom_name (Atom term))) (tc_args ())))
                            (Type_variant
                              ((Type_constr
                                 ((tc_name (Atom_name (Atom timeout)))
                                   (tc_args ())))
                                (Type_variant
                                  ((Type_const (Lit_atom (Atom hibernate)))
                                    (Type_tuple
                                      ((Type_const (Lit_atom (Atom continue)))
                                        (Type_constr
                                          ((tc_name (Atom_name (Atom term)))
                                            (tc_args ())))))))))))
                         (Type_variant
                           ((Type_tuple
                              ((Type_const (Lit_atom (Atom stop)))
                                (Type_constr
                                  ((tc_name (Atom_name (Atom term)))
                                    (tc_args ())))
                                (Type_constr
                                  ((tc_name (Atom_name (Atom term)))
                                    (tc_args ())))
                                (Type_constr
                                  ((tc_name (Atom_name (Atom term)))
                                    (tc_args ())))))
                             (Type_tuple
                               ((Type_const (Lit_atom (Atom stop)))
                                 (Type_constr
                                   ((tc_name (Atom_name (Atom term)))
                                     (tc_args ())))
                                 (Type_constr
                                   ((tc_name (Atom_name (Atom term)))
                                     (tc_args ()))))))))))))))))
        (typ_kind Callback) (typ_name (Atom handle_call))
        (typ_params
          ((Type_constr ((tc_name (Atom_name (Atom term))) (tc_args ())))
            (Type_tuple
              ((Type_constr ((tc_name (Atom_name (Atom pid))) (tc_args ())))
                (Type_constr ((tc_name (Atom_name (Atom term))) (tc_args ())))))
            (Type_constr ((tc_name (Atom_name (Atom term))) (tc_args ())))))))
    (Type_decl
      ((typ_expr
         (Type_variant
           ((Type_tuple
              ((Type_const (Lit_atom (Atom noreply)))
                (Type_constr ((tc_name (Atom_name (Atom term))) (tc_args ())))))
             (Type_variant
               ((Type_tuple
                  ((Type_const (Lit_atom (Atom noreply)))
                    (Type_constr
                      ((tc_name (Atom_name (Atom term))) (tc_args ())))
                    (Type_variant
                      ((Type_constr
                         ((tc_name (Atom_name (Atom timeout))) (tc_args ())))
                        (Type_variant
                          ((Type_const (Lit_atom (Atom hibernate)))
                            (Type_tuple
                              ((Type_const (Lit_atom (Atom continue)))
                                (Type_constr
                                  ((tc_name (Atom_name (Atom term)))
                                    (tc_args ())))))))))))
                 (Type_tuple
                   ((Type_const (Lit_atom (Atom stop)))
                     (Type_constr
                       ((tc_name (Atom_name (Atom term))) (tc_args ())))
                     (Type_constr
                       ((tc_name (Atom_name (Atom term))) (tc_args ()))))))))))
        (typ_kind Callback) (typ_name (Atom handle_cast))
        (typ_params
          ((Type_constr ((tc_name (Atom_name (Atom term))) (tc_args ())))
            (Type_constr ((tc_name (Atom_name (Atom term))) (tc_args ())))))))
    (Type_decl
      ((typ_expr
         (Type_variant
           ((Type_tuple
              ((Type_const (Lit_atom (Atom noreply)))
                (Type_constr ((tc_name (Atom_name (Atom term))) (tc_args ())))))
             (Type_variant
               ((Type_tuple
                  ((Type_const (Lit_atom (Atom noreply)))
                    (Type_constr
                      ((tc_name (Atom_name (Atom term))) (tc_args ())))
                    (Type_variant
                      ((Type_constr
                         ((tc_name (Atom_name (Atom timeout))) (tc_args ())))
                        (Type_variant
                          ((Type_const (Lit_atom (Atom hibernate)))
                            (Type_tuple
                              ((Type_const (Lit_atom (Atom continue)))
                                (Type_constr
                                  ((tc_name (Atom_name (Atom term)))
                                    (tc_args ())))))))))))
                 (Type_tuple
                   ((Type_const (Lit_atom (Atom stop)))
                     (Type_constr
                       ((tc_name (Atom_name (Atom term))) (tc_args ())))
                     (Type_constr
                       ((tc_name (Atom_name (Atom term))) (tc_args ()))))))))))
        (typ_kind Callback) (typ_name (Atom handle_info))
        (typ_params
          ((Type_variant
             ((Type_const (Lit_atom (Atom timeout)))
               (Type_constr ((tc_name (Atom_name (Atom term))) (tc_args ())))))
            (Type_constr ((tc_name (Atom_name (Atom term))) (tc_args ())))))))
    (Type_decl
      ((typ_expr
         (Type_variant
           ((Type_tuple
              ((Type_const (Lit_atom (Atom noreply)))
                (Type_constr ((tc_name (Atom_name (Atom term))) (tc_args ())))))
             (Type_variant
               ((Type_tuple
                  ((Type_const (Lit_atom (Atom noreply)))
                    (Type_constr
                      ((tc_name (Atom_name (Atom term))) (tc_args ())))
                    (Type_variant
                      ((Type_constr
                         ((tc_name (Atom_name (Atom timeout))) (tc_args ())))
                        (Type_variant
                          ((Type_const (Lit_atom (Atom hibernate)))
                            (Type_tuple
                              ((Type_const (Lit_atom (Atom continue)))
                                (Type_constr
                                  ((tc_name (Atom_name (Atom term)))
                                    (tc_args ())))))))))))
                 (Type_tuple
                   ((Type_const (Lit_atom (Atom stop)))
                     (Type_constr
                       ((tc_name (Atom_name (Atom term))) (tc_args ())))
                     (Type_constr
                       ((tc_name (Atom_name (Atom term))) (tc_args ()))))))))))
        (typ_kind Callback) (typ_name (Atom handle_continue))
        (typ_params
          ((Type_constr ((tc_name (Atom_name (Atom term))) (tc_args ())))
            (Type_constr ((tc_name (Atom_name (Atom term))) (tc_args ())))))))
    (Type_decl
      ((typ_expr
         (Type_constr ((tc_name (Atom_name (Atom term))) (tc_args ()))))
        (typ_kind Callback) (typ_name (Atom terminate))
        (typ_params
          ((Type_variant
             ((Type_const (Lit_atom (Atom normal)))
               (Type_variant
                 ((Type_const (Lit_atom (Atom shutdown)))
                   (Type_variant
                     ((Type_tuple
                        ((Type_const (Lit_atom (Atom shutdown)))
                          (Type_constr
                            ((tc_name (Atom_name (Atom term))) (tc_args ())))))
                       (Type_constr
                         ((tc_name (Atom_name (Atom term))) (tc_args ())))))))))
            (Type_constr ((tc_name (Atom_name (Atom term))) (tc_args ())))))))
    (Type_decl
      ((typ_expr
         (Type_variant
           ((Type_tuple
              ((Type_const (Lit_atom (Atom ok)))
                (Type_constr ((tc_name (Atom_name (Atom term))) (tc_args ())))))
             (Type_tuple
               ((Type_const (Lit_atom (Atom error)))
                 (Type_constr ((tc_name (Atom_name (Atom term))) (tc_args ()))))))))
        (typ_kind Callback) (typ_name (Atom code_change))
        (typ_params
          ((Type_variant
             ((Type_constr ((tc_name (Atom_name (Atom term))) (tc_args ())))
               (Type_tuple
                 ((Type_const (Lit_atom (Atom down)))
                   (Type_constr
                     ((tc_name (Atom_name (Atom term))) (tc_args ())))))))
            (Type_constr ((tc_name (Atom_name (Atom term))) (tc_args ())))
            (Type_constr ((tc_name (Atom_name (Atom term))) (tc_args ())))))))
    (Type_decl
      ((typ_expr (Type_variable (Var_name Status))) (typ_kind Callback)
        (typ_name (Atom format_status))
        (typ_params
          ((Type_variable (Var_name Opt))
            (Type_variable (Var_name StatusData))))))
    (Module_attribute
      ((atr_name (Atom optional_callbacks))
        (atr_value
          (Expr_list
            ((Expr_tuple
               ((Expr_literal (Lit_atom (Atom handle_info)))
                 (Expr_literal (Lit_integer 2))))
              (Expr_tuple
                ((Expr_literal (Lit_atom (Atom handle_continue)))
                  (Expr_literal (Lit_integer 2))))
              (Expr_tuple
                ((Expr_literal (Lit_atom (Atom terminate)))
                  (Expr_literal (Lit_integer 2))))
              (Expr_tuple
                ((Expr_literal (Lit_atom (Atom code_change)))
                  (Expr_literal (Lit_integer 3))))
              (Expr_tuple
                ((Expr_literal (Lit_atom (Atom format_status)))
                  (Expr_literal (Lit_integer 2)))))))))
    (Module_comment
      (Comment
        "%%  -----------------------------------------------------------------"))
    (Module_comment (Comment "%% Starts a generic server."))
    (Module_comment (Comment "%% start(Mod, Args, Options)"))
    (Module_comment (Comment "%% start(Name, Mod, Args, Options)"))
    (Module_comment (Comment "%% start_link(Mod, Args, Options)"))
    (Module_comment (Comment "%% start_link(Name, Mod, Args, Options) where:"))
    (Module_comment
      (Comment
        "%%    Name ::= {local, atom()} | {global, term()} | {via, atom(), term()}"))
    (Module_comment
      (Comment
        "%%    Mod  ::= atom(), callback module implementing the 'real' server"))
    (Module_comment
      (Comment "%%    Args ::= term(), init arguments (to Mod:init/1)"))
    (Module_comment
      (Comment "%%    Options ::= [{timeout, Timeout} | {debug, [Flag]}]"))
    (Module_comment
      (Comment
        "%%      Flag ::= trace | log | {logfile, File} | statistics | debug"))
    (Module_comment (Comment "%%          (debug == log && statistics)"))
    (Module_comment (Comment "%% Returns: {ok, Pid} |"))
    (Module_comment (Comment "%%          {error, {already_started, Pid}} |"))
    (Module_comment (Comment "%%          {error, Reason}"))
    (Module_comment
      (Comment
        "%% -----------------------------------------------------------------"))
    (Function_decl
      ((fd_name (Atom start)) (fd_arity 3)
        (fd_cases
          (((c_lhs
              ((Pattern_binding (Var_name Mod))
                (Pattern_binding (Var_name Args))
                (Pattern_binding (Var_name Options))))
             (c_guard ())
             (c_rhs
               (Expr_apply
                 ((fa_name
                    (Expr_name
                      (Qualified_name (n_mod (Atom_name (Atom gen)))
                        (n_name (Atom_name (Atom start))))))
                   (fa_args
                     ((Expr_macro ?MODULE)
                       (Expr_literal (Lit_atom (Atom nolink)))
                       (Expr_name (Var_name Mod)) (Expr_name (Var_name Args))
                       (Expr_name (Var_name Options))))))))))
        (fd_spec ())))
    (Function_decl
      ((fd_name (Atom start)) (fd_arity 4)
        (fd_cases
          (((c_lhs
              ((Pattern_binding (Var_name Name))
                (Pattern_binding (Var_name Mod))
                (Pattern_binding (Var_name Args))
                (Pattern_binding (Var_name Options))))
             (c_guard ())
             (c_rhs
               (Expr_apply
                 ((fa_name
                    (Expr_name
                      (Qualified_name (n_mod (Atom_name (Atom gen)))
                        (n_name (Atom_name (Atom start))))))
                   (fa_args
                     ((Expr_macro ?MODULE)
                       (Expr_literal (Lit_atom (Atom nolink)))
                       (Expr_name (Var_name Name)) (Expr_name (Var_name Mod))
                       (Expr_name (Var_name Args))
                       (Expr_name (Var_name Options))))))))))
        (fd_spec ())))
    (Function_decl
      ((fd_name (Atom start_link)) (fd_arity 3)
        (fd_cases
          (((c_lhs
              ((Pattern_binding (Var_name Mod))
                (Pattern_binding (Var_name Args))
                (Pattern_binding (Var_name Options))))
             (c_guard ())
             (c_rhs
               (Expr_apply
                 ((fa_name
                    (Expr_name
                      (Qualified_name (n_mod (Atom_name (Atom gen)))
                        (n_name (Atom_name (Atom start))))))
                   (fa_args
                     ((Expr_macro ?MODULE)
                       (Expr_literal (Lit_atom (Atom link)))
                       (Expr_name (Var_name Mod)) (Expr_name (Var_name Args))
                       (Expr_name (Var_name Options))))))))))
        (fd_spec ())))
    (Function_decl
      ((fd_name (Atom start_link)) (fd_arity 4)
        (fd_cases
          (((c_lhs
              ((Pattern_binding (Var_name Name))
                (Pattern_binding (Var_name Mod))
                (Pattern_binding (Var_name Args))
                (Pattern_binding (Var_name Options))))
             (c_guard ())
             (c_rhs
               (Expr_apply
                 ((fa_name
                    (Expr_name
                      (Qualified_name (n_mod (Atom_name (Atom gen)))
                        (n_name (Atom_name (Atom start))))))
                   (fa_args
                     ((Expr_macro ?MODULE)
                       (Expr_literal (Lit_atom (Atom link)))
                       (Expr_name (Var_name Name)) (Expr_name (Var_name Mod))
                       (Expr_name (Var_name Args))
                       (Expr_name (Var_name Options))))))))))
        (fd_spec ())))
    (Function_decl
      ((fd_name (Atom start_monitor)) (fd_arity 3)
        (fd_cases
          (((c_lhs
              ((Pattern_binding (Var_name Mod))
                (Pattern_binding (Var_name Args))
                (Pattern_binding (Var_name Options))))
             (c_guard ())
             (c_rhs
               (Expr_apply
                 ((fa_name
                    (Expr_name
                      (Qualified_name (n_mod (Atom_name (Atom gen)))
                        (n_name (Atom_name (Atom start))))))
                   (fa_args
                     ((Expr_macro ?MODULE)
                       (Expr_literal (Lit_atom (Atom monitor)))
                       (Expr_name (Var_name Mod)) (Expr_name (Var_name Args))
                       (Expr_name (Var_name Options))))))))))
        (fd_spec ())))
    (Function_decl
      ((fd_name (Atom start_monitor)) (fd_arity 4)
        (fd_cases
          (((c_lhs
              ((Pattern_binding (Var_name Name))
                (Pattern_binding (Var_name Mod))
                (Pattern_binding (Var_name Args))
                (Pattern_binding (Var_name Options))))
             (c_guard ())
             (c_rhs
               (Expr_apply
                 ((fa_name
                    (Expr_name
                      (Qualified_name (n_mod (Atom_name (Atom gen)))
                        (n_name (Atom_name (Atom start))))))
                   (fa_args
                     ((Expr_macro ?MODULE)
                       (Expr_literal (Lit_atom (Atom monitor)))
                       (Expr_name (Var_name Name)) (Expr_name (Var_name Mod))
                       (Expr_name (Var_name Args))
                       (Expr_name (Var_name Options))))))))))
        (fd_spec ())))
    (Module_comment
      (Comment
        "% -----------------------------------------------------------------"))
    (Module_comment
      (Comment "% Stop a generic server and wait for it to terminate."))
    (Module_comment
      (Comment "% If the server is located at another node, that node will"))
    (Module_comment (Comment "% be monitored."))
    (Module_comment
      (Comment
        "% -----------------------------------------------------------------"))
    (Function_decl
      ((fd_name (Atom stop)) (fd_arity 1)
        (fd_cases
          (((c_lhs ((Pattern_binding (Var_name Name)))) (c_guard ())
             (c_rhs
               (Expr_apply
                 ((fa_name
                    (Expr_name
                      (Qualified_name (n_mod (Atom_name (Atom gen)))
                        (n_name (Atom_name (Atom stop))))))
                   (fa_args ((Expr_name (Var_name Name))))))))))
        (fd_spec ())))
    (Function_decl
      ((fd_name (Atom stop)) (fd_arity 3)
        (fd_cases
          (((c_lhs
              ((Pattern_binding (Var_name Name))
                (Pattern_binding (Var_name Reason))
                (Pattern_binding (Var_name Timeout))))
             (c_guard ())
             (c_rhs
               (Expr_apply
                 ((fa_name
                    (Expr_name
                      (Qualified_name (n_mod (Atom_name (Atom gen)))
                        (n_name (Atom_name (Atom stop))))))
                   (fa_args
                     ((Expr_name (Var_name Name)) (Expr_name (Var_name Reason))
                       (Expr_name (Var_name Timeout))))))))))
        (fd_spec ())))
    (Module_comment
      (Comment
        "% -----------------------------------------------------------------"))
    (Module_comment (Comment "% Make a call to a generic server."))
    (Module_comment
      (Comment "% If the server is located at another node, that node will"))
    (Module_comment (Comment "% be monitored."))
    (Module_comment
      (Comment
        "% If the client is trapping exits and is linked server termination"))
    (Module_comment
      (Comment
        "% is handled here (? Shall we do that here (or rely on timeouts) ?)."))
    (Module_comment
      (Comment
        "% ----------------------------------------------------------------- "))
    (Function_decl
      ((fd_name (Atom call)) (fd_arity 2)
        (fd_cases
          (((c_lhs
              ((Pattern_binding (Var_name Name))
                (Pattern_binding (Var_name Request))))
             (c_guard ())
             (c_rhs
               (Expr_case
                 (Expr_catch
                   (Expr_apply
                     ((fa_name
                        (Expr_name
                          (Qualified_name (n_mod (Atom_name (Atom gen)))
                            (n_name (Atom_name (Atom call))))))
                       (fa_args
                         ((Expr_name (Var_name Name))
                           (Expr_literal (Lit_atom (Atom '$gen_call')))
                           (Expr_name (Var_name Request)))))))
                 (((c_lhs
                     ((Pattern_tuple
                        ((Pattern_match (Lit_atom (Atom ok)))
                          (Pattern_binding (Var_name Res))))))
                    (c_guard ()) (c_rhs (Expr_name (Var_name Res))))
                   ((c_lhs
                      ((Pattern_tuple
                         ((Pattern_match (Lit_atom (Atom 'EXIT')))
                           (Pattern_binding (Var_name Reason))))))
                     (c_guard ())
                     (c_rhs
                       (Expr_apply
                         ((fa_name (Expr_name (Atom_name (Atom exit))))
                           (fa_args
                             ((Expr_tuple
                                ((Expr_name (Var_name Reason))
                                  (Expr_tuple
                                    ((Expr_macro ?MODULE)
                                      (Expr_literal (Lit_atom (Atom call)))
                                      (Expr_list
                                        ((Expr_name (Var_name Name))
                                          (Expr_name (Var_name Request))))))))))))))))))))
        (fd_spec ())))
    (Function_decl
      ((fd_name (Atom call)) (fd_arity 3)
        (fd_cases
          (((c_lhs
              ((Pattern_binding (Var_name Name))
                (Pattern_binding (Var_name Request))
                (Pattern_binding (Var_name Timeout))))
             (c_guard ())
             (c_rhs
               (Expr_case
                 (Expr_catch
                   (Expr_apply
                     ((fa_name
                        (Expr_name
                          (Qualified_name (n_mod (Atom_name (Atom gen)))
                            (n_name (Atom_name (Atom call))))))
                       (fa_args
                         ((Expr_name (Var_name Name))
                           (Expr_literal (Lit_atom (Atom '$gen_call')))
                           (Expr_name (Var_name Request))
                           (Expr_name (Var_name Timeout)))))))
                 (((c_lhs
                     ((Pattern_tuple
                        ((Pattern_match (Lit_atom (Atom ok)))
                          (Pattern_binding (Var_name Res))))))
                    (c_guard ()) (c_rhs (Expr_name (Var_name Res))))
                   ((c_lhs
                      ((Pattern_tuple
                         ((Pattern_match (Lit_atom (Atom 'EXIT')))
                           (Pattern_binding (Var_name Reason))))))
                     (c_guard ())
                     (c_rhs
                       (Expr_apply
                         ((fa_name (Expr_name (Atom_name (Atom exit))))
                           (fa_args
                             ((Expr_tuple
                                ((Expr_name (Var_name Reason))
                                  (Expr_tuple
                                    ((Expr_macro ?MODULE)
                                      (Expr_literal (Lit_atom (Atom call)))
                                      (Expr_list
                                        ((Expr_name (Var_name Name))
                                          (Expr_name (Var_name Request))
                                          (Expr_name (Var_name Timeout))))))))))))))))))))
        (fd_spec ())))
    (Module_comment
      (Comment
        "% -----------------------------------------------------------------"))
    (Module_comment
      (Comment
        "% Send a request to a generic server and return a Key which should be"))
    (Module_comment
      (Comment "% used with wait_response/2 or check_response/2 to fetch the"))
    (Module_comment (Comment "% result of the request."))
    (Type_decl
      ((typ_expr
         (Type_constr ((tc_name (Atom_name (Atom request_id))) (tc_args ()))))
        (typ_kind Spec) (typ_name (Atom send_request))
        (typ_params
          ((Type_constr ((tc_name (Atom_name (Atom server_ref))) (tc_args ())))
            (Type_constr ((tc_name (Atom_name (Atom term))) (tc_args ())))))))
    (Function_decl
      ((fd_name (Atom send_request)) (fd_arity 2)
        (fd_cases
          (((c_lhs
              ((Pattern_binding (Var_name Name))
                (Pattern_binding (Var_name Request))))
             (c_guard ())
             (c_rhs
               (Expr_apply
                 ((fa_name
                    (Expr_name
                      (Qualified_name (n_mod (Atom_name (Atom gen)))
                        (n_name (Atom_name (Atom send_request))))))
                   (fa_args
                     ((Expr_name (Var_name Name))
                       (Expr_literal (Lit_atom (Atom '$gen_call')))
                       (Expr_name (Var_name Request))))))))))
        (fd_spec ())))
    (Type_decl
      ((typ_expr
         (Type_variant
           ((Type_tuple
              ((Type_const (Lit_atom (Atom reply)))
                (Type_constr ((tc_name (Atom_name (Atom term))) (tc_args ())))))
             (Type_variant
               ((Type_const (Lit_atom (Atom timeout)))
                 (Type_tuple
                   ((Type_const (Lit_atom (Atom error)))
                     (Type_tuple
                       ((Type_constr
                          ((tc_name (Atom_name (Atom term))) (tc_args ())))
                         (Type_constr
                           ((tc_name (Atom_name (Atom server_ref)))
                             (tc_args ()))))))))))))
        (typ_kind Spec) (typ_name (Atom wait_response))
        (typ_params
          ((Type_constr ((tc_name (Atom_name (Atom request_id))) (tc_args ())))
            (Type_constr ((tc_name (Atom_name (Atom timeout))) (tc_args ())))))))
    (Function_decl
      ((fd_name (Atom wait_response)) (fd_arity 2)
        (fd_cases
          (((c_lhs
              ((Pattern_binding (Var_name RequestId))
                (Pattern_binding (Var_name Timeout))))
             (c_guard ())
             (c_rhs
               (Expr_apply
                 ((fa_name
                    (Expr_name
                      (Qualified_name (n_mod (Atom_name (Atom gen)))
                        (n_name (Atom_name (Atom wait_response))))))
                   (fa_args
                     ((Expr_name (Var_name RequestId))
                       (Expr_name (Var_name Timeout))))))))))
        (fd_spec ())))
    (Type_decl
      ((typ_expr
         (Type_variant
           ((Type_tuple
              ((Type_const (Lit_atom (Atom reply)))
                (Type_constr ((tc_name (Atom_name (Atom term))) (tc_args ())))))
             (Type_variant
               ((Type_const (Lit_atom (Atom no_reply)))
                 (Type_tuple
                   ((Type_const (Lit_atom (Atom error)))
                     (Type_tuple
                       ((Type_constr
                          ((tc_name (Atom_name (Atom term))) (tc_args ())))
                         (Type_constr
                           ((tc_name (Atom_name (Atom server_ref)))
                             (tc_args ()))))))))))))
        (typ_kind Spec) (typ_name (Atom check_response))
        (typ_params
          ((Type_constr ((tc_name (Atom_name (Atom term))) (tc_args ())))
            (Type_constr
              ((tc_name (Atom_name (Atom request_id))) (tc_args ())))))))
    (Function_decl
      ((fd_name (Atom check_response)) (fd_arity 2)
        (fd_cases
          (((c_lhs
              ((Pattern_binding (Var_name Msg))
                (Pattern_binding (Var_name RequestId))))
             (c_guard ())
             (c_rhs
               (Expr_apply
                 ((fa_name
                    (Expr_name
                      (Qualified_name (n_mod (Atom_name (Atom gen)))
                        (n_name (Atom_name (Atom check_response))))))
                   (fa_args
                     ((Expr_name (Var_name Msg))
                       (Expr_name (Var_name RequestId))))))))))
        (fd_spec ())))
    (Module_comment
      (Comment
        "% -----------------------------------------------------------------"))
    (Module_comment (Comment "% Make a cast to a generic server."))
    (Module_comment
      (Comment
        "% -----------------------------------------------------------------"))
    (Function_decl
      ((fd_name (Atom cast)) (fd_arity 2)
        (fd_cases
          (((c_lhs
              ((Pattern_tuple
                 ((Pattern_match (Lit_atom (Atom global)))
                   (Pattern_binding (Var_name Name))))
                (Pattern_binding (Var_name Request))))
             (c_guard ())
             (c_rhs
               (Expr_comment
                 (Comment " FIXME: ignored let bindings are not supported yet")
                 (Expr_let
                   ((lb_lhs (Pattern_binding (Var_name _)))
                     (lb_rhs
                       (Expr_catch
                         (Expr_apply
                           ((fa_name
                              (Expr_name
                                (Qualified_name
                                  (n_mod (Atom_name (Atom global)))
                                  (n_name (Atom_name (Atom send))))))
                             (fa_args
                               ((Expr_name (Var_name Name))
                                 (Expr_apply
                                   ((fa_name
                                      (Expr_name (Atom_name (Atom cast_msg))))
                                     (fa_args ((Expr_name (Var_name Request)))))))))))))
                   (Expr_literal (Lit_atom (Atom ok)))))))
            ((c_lhs
               ((Pattern_tuple
                  ((Pattern_match (Lit_atom (Atom via)))
                    (Pattern_binding (Var_name Mod))
                    (Pattern_binding (Var_name Name))))
                 (Pattern_binding (Var_name Request))))
              (c_guard ())
              (c_rhs
                (Expr_comment
                  (Comment
                    " FIXME: ignored let bindings are not supported yet")
                  (Expr_let
                    ((lb_lhs (Pattern_binding (Var_name _)))
                      (lb_rhs
                        (Expr_catch
                          (Expr_apply
                            ((fa_name
                               (Expr_name
                                 (Qualified_name (n_mod (Var_name Mod))
                                   (n_name (Atom_name (Atom send))))))
                              (fa_args
                                ((Expr_name (Var_name Name))
                                  (Expr_apply
                                    ((fa_name
                                       (Expr_name (Atom_name (Atom cast_msg))))
                                      (fa_args
                                        ((Expr_name (Var_name Request)))))))))))))
                    (Expr_literal (Lit_atom (Atom ok)))))))
            ((c_lhs
               ((Pattern_with_name
                  (Pattern_tuple
                    ((Pattern_binding (Var_name Name))
                      (Pattern_binding (Var_name Node))))
                  (Pattern_binding (Var_name Dest)))))
              (c_guard
                (((Expr_apply
                    ((fa_name (Expr_name (Atom_name (Atom is_atom))))
                      (fa_args ((Expr_name (Var_name Name))))))
                   (Expr_apply
                     ((fa_name (Expr_name (Atom_name (Atom is_atom))))
                       (fa_args ((Expr_name (Var_name Node)))))))))
              (c_rhs
                (Expr_apply
                  ((fa_name (Expr_name (Atom_name (Atom do_cast))))
                    (fa_args
                      ((Expr_name (Var_name Dest))
                        (Expr_name (Var_name Request))))))))
            ((c_lhs
               ((Pattern_binding (Var_name Dest))
                 (Pattern_binding (Var_name Request))))
              (c_guard
                (((Expr_apply
                    ((fa_name (Expr_name (Atom_name (Atom is_atom))))
                      (fa_args ((Expr_name (Var_name Dest)))))))))
              (c_rhs
                (Expr_apply
                  ((fa_name (Expr_name (Atom_name (Atom do_cast))))
                    (fa_args
                      ((Expr_name (Var_name Dest))
                        (Expr_name (Var_name Request))))))))
            ((c_lhs
               ((Pattern_binding (Var_name Dest))
                 (Pattern_binding (Var_name Request))))
              (c_guard
                (((Expr_apply
                    ((fa_name (Expr_name (Atom_name (Atom is_pid))))
                      (fa_args ((Expr_name (Var_name Dest)))))))))
              (c_rhs
                (Expr_apply
                  ((fa_name (Expr_name (Atom_name (Atom do_cast))))
                    (fa_args
                      ((Expr_name (Var_name Dest))
                        (Expr_name (Var_name Request))))))))))
        (fd_spec ())))
    (Function_decl
      ((fd_name (Atom do_cast)) (fd_arity 2)
        (fd_cases
          (((c_lhs
              ((Pattern_binding (Var_name Dest))
                (Pattern_binding (Var_name Request))))
             (c_guard ())
             (c_rhs
               (Expr_comment
                 (Comment " FIXME: ignored let bindings are not supported yet")
                 (Expr_let
                   ((lb_lhs (Pattern_binding (Var_name _)))
                     (lb_rhs
                       (Expr_apply
                         ((fa_name (Expr_name (Atom_name (Atom do_send))))
                           (fa_args
                             ((Expr_name (Var_name Dest))
                               (Expr_apply
                                 ((fa_name
                                    (Expr_name (Atom_name (Atom cast_msg))))
                                   (fa_args ((Expr_name (Var_name Request))))))))))))
                   (Expr_literal (Lit_atom (Atom ok)))))))))
        (fd_spec ())))
    (Function_decl
      ((fd_name (Atom cast_msg)) (fd_arity 1)
        (fd_cases
          (((c_lhs ((Pattern_binding (Var_name Request)))) (c_guard ())
             (c_rhs
               (Expr_tuple
                 ((Expr_literal (Lit_atom (Atom '$gen_cast')))
                   (Expr_name (Var_name Request))))))))
        (fd_spec ())))
    (Module_comment
      (Comment
        "% -----------------------------------------------------------------"))
    (Module_comment (Comment "% Send a reply to the client."))
    (Module_comment
      (Comment
        "% -----------------------------------------------------------------"))
    (Function_decl
      ((fd_name (Atom reply)) (fd_arity 2)
        (fd_cases
          (((c_lhs
              ((Pattern_tuple
                 ((Pattern_binding (Var_name To))
                   (Pattern_binding (Var_name Tag))))
                (Pattern_binding (Var_name Reply))))
             (c_guard ())
             (c_rhs
               (Expr_comment
                 (Comment " FIXME: ignored let bindings are not supported yet")
                 (Expr_let
                   ((lb_lhs (Pattern_binding (Var_name _)))
                     (lb_rhs
                       (Expr_catch
                         (Expr_apply
                           ((fa_name
                              (Expr_name
                                (Qualified_name
                                  (n_mod (Atom_name (Atom erlang)))
                                  (n_name (Atom_name (Atom send))))))
                             (fa_args
                               ((Expr_name (Var_name To))
                                 (Expr_tuple
                                   ((Expr_name (Var_name Tag))
                                     (Expr_name (Var_name Reply)))))))))))
                   (Expr_literal (Lit_atom (Atom ok)))))))))
        (fd_spec ())))
    (Module_comment
      (Comment
        "% ----------------------------------------------------------------- "))
    (Module_comment
      (Comment
        "% Asynchronous broadcast, returns nothing, it's just send 'n' pray"))
    (Module_comment
      (Comment
        "%-----------------------------------------------------------------  "))
    (Function_decl
      ((fd_name (Atom abcast)) (fd_arity 2)
        (fd_cases
          (((c_lhs
              ((Pattern_binding (Var_name Name))
                (Pattern_binding (Var_name Request))))
             (c_guard
               (((Expr_apply
                   ((fa_name (Expr_name (Atom_name (Atom is_atom))))
                     (fa_args ((Expr_name (Var_name Name)))))))))
             (c_rhs
               (Expr_apply
                 ((fa_name (Expr_name (Atom_name (Atom do_abcast))))
                   (fa_args
                     ((Expr_cons
                        ((Expr_apply
                           ((fa_name (Expr_name (Atom_name (Atom node))))
                             (fa_args ()))))
                        (Expr_apply
                          ((fa_name (Expr_name (Atom_name (Atom nodes))))
                            (fa_args ()))))
                       (Expr_name (Var_name Name))
                       (Expr_apply
                         ((fa_name (Expr_name (Atom_name (Atom cast_msg))))
                           (fa_args ((Expr_name (Var_name Request))))))))))))))
        (fd_spec ())))
    (Function_decl
      ((fd_name (Atom abcast)) (fd_arity 3)
        (fd_cases
          (((c_lhs
              ((Pattern_binding (Var_name Nodes))
                (Pattern_binding (Var_name Name))
                (Pattern_binding (Var_name Request))))
             (c_guard
               (((Expr_apply
                   ((fa_name (Expr_name (Atom_name (Atom is_list))))
                     (fa_args ((Expr_name (Var_name Nodes))))))
                  (Expr_apply
                    ((fa_name (Expr_name (Atom_name (Atom is_atom))))
                      (fa_args ((Expr_name (Var_name Name)))))))))
             (c_rhs
               (Expr_apply
                 ((fa_name (Expr_name (Atom_name (Atom do_abcast))))
                   (fa_args
                     ((Expr_name (Var_name Nodes)) (Expr_name (Var_name Name))
                       (Expr_apply
                         ((fa_name (Expr_name (Atom_name (Atom cast_msg))))
                           (fa_args ((Expr_name (Var_name Request))))))))))))))
        (fd_spec ())))
    (Function_decl
      ((fd_name (Atom do_abcast)) (fd_arity 3)
        (fd_cases
          (((c_lhs
              ((Pattern_cons ((Pattern_binding (Var_name Node)))
                 (Pattern_binding (Var_name Nodes)))
                (Pattern_binding (Var_name Name))
                (Pattern_binding (Var_name Msg))))
             (c_guard
               (((Expr_apply
                   ((fa_name (Expr_name (Atom_name (Atom is_atom))))
                     (fa_args ((Expr_name (Var_name Node)))))))))
             (c_rhs
               (Expr_comment
                 (Comment " FIXME: ignored let bindings are not supported yet")
                 (Expr_let
                   ((lb_lhs (Pattern_binding (Var_name _)))
                     (lb_rhs
                       (Expr_apply
                         ((fa_name (Expr_name (Atom_name (Atom do_send))))
                           (fa_args
                             ((Expr_tuple
                                ((Expr_name (Var_name Name))
                                  (Expr_name (Var_name Node))))
                               (Expr_name (Var_name Msg))))))))
                   (Expr_apply
                     ((fa_name (Expr_name (Atom_name (Atom do_abcast))))
                       (fa_args
                         ((Expr_name (Var_name Nodes))
                           (Expr_name (Var_name Name))
                           (Expr_name (Var_name Msg))))))))))
            ((c_lhs
               ((Pattern_list ()) (Pattern_binding (Var_name _))
                 (Pattern_binding (Var_name _))))
              (c_guard ()) (c_rhs (Expr_literal (Lit_atom (Atom abcast)))))))
        (fd_spec ())))
    (Module_comment
      (Comment
        "%% -----------------------------------------------------------------"))
    (Module_comment (Comment "%% Make a call to servers at several nodes."))
    (Module_comment (Comment "%% Returns: {[Replies],[BadNodes]}"))
    (Module_comment (Comment "%% A Timeout can be given"))
    (Module_comment (Comment "%% "))
    (Module_comment
      (Comment
        "%% A middleman process is used in case late answers arrives after"))
    (Module_comment
      (Comment
        "%% the timeout. If they would be allowed to glog the callers message"))
    (Module_comment
      (Comment
        "%% queue, it would probably become confused. Late answers will "))
    (Module_comment
      (Comment
        "%% now arrive to the terminated middleman and so be discarded."))
    (Module_comment
      (Comment
        "%% -----------------------------------------------------------------"))
    (Function_decl
      ((fd_name (Atom multi_call)) (fd_arity 2)
        (fd_cases
          (((c_lhs
              ((Pattern_binding (Var_name Name))
                (Pattern_binding (Var_name Req))))
             (c_guard
               (((Expr_apply
                   ((fa_name (Expr_name (Atom_name (Atom is_atom))))
                     (fa_args ((Expr_name (Var_name Name)))))))))
             (c_rhs
               (Expr_apply
                 ((fa_name (Expr_name (Atom_name (Atom do_multi_call))))
                   (fa_args
                     ((Expr_cons
                        ((Expr_apply
                           ((fa_name (Expr_name (Atom_name (Atom node))))
                             (fa_args ()))))
                        (Expr_apply
                          ((fa_name (Expr_name (Atom_name (Atom nodes))))
                            (fa_args ()))))
                       (Expr_name (Var_name Name)) (Expr_name (Var_name Req))
                       (Expr_literal (Lit_atom (Atom infinity)))))))))))
        (fd_spec ())))
    (Function_decl
      ((fd_name (Atom multi_call)) (fd_arity 3)
        (fd_cases
          (((c_lhs
              ((Pattern_binding (Var_name Nodes))
                (Pattern_binding (Var_name Name))
                (Pattern_binding (Var_name Req))))
             (c_guard
               (((Expr_apply
                   ((fa_name (Expr_name (Atom_name (Atom is_list))))
                     (fa_args ((Expr_name (Var_name Nodes))))))
                  (Expr_apply
                    ((fa_name (Expr_name (Atom_name (Atom is_atom))))
                      (fa_args ((Expr_name (Var_name Name)))))))))
             (c_rhs
               (Expr_apply
                 ((fa_name (Expr_name (Atom_name (Atom do_multi_call))))
                   (fa_args
                     ((Expr_name (Var_name Nodes)) (Expr_name (Var_name Name))
                       (Expr_name (Var_name Req))
                       (Expr_literal (Lit_atom (Atom infinity)))))))))))
        (fd_spec ())))
    (Function_decl
      ((fd_name (Atom multi_call)) (fd_arity 4)
        (fd_cases
          (((c_lhs
              ((Pattern_binding (Var_name Nodes))
                (Pattern_binding (Var_name Name))
                (Pattern_binding (Var_name Req))
                (Pattern_match (Lit_atom (Atom infinity)))))
             (c_guard ())
             (c_rhs
               (Expr_apply
                 ((fa_name (Expr_name (Atom_name (Atom do_multi_call))))
                   (fa_args
                     ((Expr_name (Var_name Nodes)) (Expr_name (Var_name Name))
                       (Expr_name (Var_name Req))
                       (Expr_literal (Lit_atom (Atom infinity)))))))))
            ((c_lhs
               ((Pattern_binding (Var_name Nodes))
                 (Pattern_binding (Var_name Name))
                 (Pattern_binding (Var_name Req))
                 (Pattern_binding (Var_name Timeout))))
              (c_guard
                (((Expr_apply
                    ((fa_name (Expr_name (Atom_name (Atom is_list))))
                      (fa_args ((Expr_name (Var_name Nodes))))))
                   (Expr_apply
                     ((fa_name (Expr_name (Atom_name (Atom is_atom))))
                       (fa_args ((Expr_name (Var_name Name))))))
                   (Expr_apply
                     ((fa_name (Expr_name (Atom_name (Atom is_integer))))
                       (fa_args ((Expr_name (Var_name Timeout))))))
                   (Expr_apply
                     ((fa_name
                        (Expr_name
                          (Qualified_name (n_mod (Atom_name (Atom erlang)))
                            (n_name (Atom_name (Atom '>='))))))
                       (fa_args
                         ((Expr_name (Var_name Timeout))
                           (Expr_literal (Lit_integer 0)))))))))
              (c_rhs
                (Expr_apply
                  ((fa_name (Expr_name (Atom_name (Atom do_multi_call))))
                    (fa_args
                      ((Expr_name (Var_name Nodes)) (Expr_name (Var_name Name))
                        (Expr_name (Var_name Req))
                        (Expr_name (Var_name Timeout))))))))))
        (fd_spec ())))
    (Module_comment
      (Comment
        %-----------------------------------------------------------------))
    (Module_comment
      (Comment
        "% enter_loop(Mod, Options, State, <ServerName>, <TimeOut>) ->_ "))
    (Module_comment (Comment "%   "))
    (Module_comment
      (Comment "% Description: Makes an existing process into a gen_server. "))
    (Module_comment
      (Comment
        "%              The calling process will enter the gen_server receive "))
    (Module_comment
      (Comment "%              loop and become a gen_server process."))
    (Module_comment
      (Comment
        "%              The process *must* have been started using one of the "))
    (Module_comment
      (Comment "%              start functions in proc_lib, see proc_lib(3). "))
    (Module_comment
      (Comment
        "%              The user is responsible for any initialization of the "))
    (Module_comment
      (Comment "%              process, including registering a name for it."))
    (Module_comment
      (Comment
        %-----------------------------------------------------------------))
    (Function_decl
      ((fd_name (Atom enter_loop)) (fd_arity 3)
        (fd_cases
          (((c_lhs
              ((Pattern_binding (Var_name Mod))
                (Pattern_binding (Var_name Options))
                (Pattern_binding (Var_name State))))
             (c_guard ())
             (c_rhs
               (Expr_apply
                 ((fa_name (Expr_name (Atom_name (Atom enter_loop))))
                   (fa_args
                     ((Expr_name (Var_name Mod)) (Expr_name (Var_name Options))
                       (Expr_name (Var_name State))
                       (Expr_apply
                         ((fa_name (Expr_name (Atom_name (Atom self))))
                           (fa_args ())))
                       (Expr_literal (Lit_atom (Atom infinity)))))))))))
        (fd_spec ())))
    (Function_decl
      ((fd_name (Atom enter_loop)) (fd_arity 4)
        (fd_cases
          (((c_lhs
              ((Pattern_binding (Var_name Mod))
                (Pattern_binding (Var_name Options))
                (Pattern_binding (Var_name State))
                (Pattern_with_name (Pattern_binding (Var_name ServerName))
                  (Pattern_tuple
                    ((Pattern_binding (Var_name Scope))
                      (Pattern_binding (Var_name _)))))))
             (c_guard
               (((Expr_apply
                   ((fa_name
                      (Expr_name
                        (Qualified_name (n_mod (Atom_name (Atom erlang)))
                          (n_name (Atom_name (Atom '=='))))))
                     (fa_args
                       ((Expr_name (Var_name Scope))
                         (Expr_literal (Lit_atom (Atom local)))))))
                  (Expr_apply
                    ((fa_name
                       (Expr_name
                         (Qualified_name (n_mod (Atom_name (Atom erlang)))
                           (n_name (Atom_name (Atom '=='))))))
                      (fa_args
                        ((Expr_name (Var_name Scope))
                          (Expr_literal (Lit_atom (Atom global))))))))))
             (c_rhs
               (Expr_apply
                 ((fa_name (Expr_name (Atom_name (Atom enter_loop))))
                   (fa_args
                     ((Expr_name (Var_name Mod)) (Expr_name (Var_name Options))
                       (Expr_name (Var_name State))
                       (Expr_name (Var_name ServerName))
                       (Expr_literal (Lit_atom (Atom infinity)))))))))
            ((c_lhs
               ((Pattern_binding (Var_name Mod))
                 (Pattern_binding (Var_name Options))
                 (Pattern_binding (Var_name State))
                 (Pattern_with_name (Pattern_binding (Var_name ServerName))
                   (Pattern_tuple
                     ((Pattern_match (Lit_atom (Atom via)))
                       (Pattern_binding (Var_name _))
                       (Pattern_binding (Var_name _)))))))
              (c_guard ())
              (c_rhs
                (Expr_apply
                  ((fa_name (Expr_name (Atom_name (Atom enter_loop))))
                    (fa_args
                      ((Expr_name (Var_name Mod))
                        (Expr_name (Var_name Options))
                        (Expr_name (Var_name State))
                        (Expr_name (Var_name ServerName))
                        (Expr_literal (Lit_atom (Atom infinity)))))))))
            ((c_lhs
               ((Pattern_binding (Var_name Mod))
                 (Pattern_binding (Var_name Options))
                 (Pattern_binding (Var_name State))
                 (Pattern_binding (Var_name Timeout))))
              (c_guard ())
              (c_rhs
                (Expr_apply
                  ((fa_name (Expr_name (Atom_name (Atom enter_loop))))
                    (fa_args
                      ((Expr_name (Var_name Mod))
                        (Expr_name (Var_name Options))
                        (Expr_name (Var_name State))
                        (Expr_apply
                          ((fa_name (Expr_name (Atom_name (Atom self))))
                            (fa_args ())))
                        (Expr_name (Var_name Timeout))))))))))
        (fd_spec ())))
    (Function_decl
      ((fd_name (Atom enter_loop)) (fd_arity 5)
        (fd_cases
          (((c_lhs
              ((Pattern_binding (Var_name Mod))
                (Pattern_binding (Var_name Options))
                (Pattern_binding (Var_name State))
                (Pattern_binding (Var_name ServerName))
                (Pattern_binding (Var_name Timeout))))
             (c_guard ())
             (c_rhs
               (Expr_let
                 ((lb_lhs (Pattern_binding (Var_name Name)))
                   (lb_rhs
                     (Expr_apply
                       ((fa_name
                          (Expr_name
                            (Qualified_name (n_mod (Atom_name (Atom gen)))
                              (n_name (Atom_name (Atom get_proc_name))))))
                         (fa_args ((Expr_name (Var_name ServerName))))))))
                 (Expr_let
                   ((lb_lhs (Pattern_binding (Var_name Parent)))
                     (lb_rhs
                       (Expr_apply
                         ((fa_name
                            (Expr_name
                              (Qualified_name (n_mod (Atom_name (Atom gen)))
                                (n_name (Atom_name (Atom get_parent))))))
                           (fa_args ())))))
                   (Expr_let
                     ((lb_lhs (Pattern_binding (Var_name Debug)))
                       (lb_rhs
                         (Expr_apply
                           ((fa_name
                              (Expr_name
                                (Qualified_name (n_mod (Atom_name (Atom gen)))
                                  (n_name (Atom_name (Atom debug_options))))))
                             (fa_args
                               ((Expr_name (Var_name Name))
                                 (Expr_name (Var_name Options))))))))
                     (Expr_let
                       ((lb_lhs
                          (Pattern_binding (Var_name HibernateAfterTimeout)))
                         (lb_rhs
                           (Expr_apply
                             ((fa_name
                                (Expr_name
                                  (Qualified_name
                                    (n_mod (Atom_name (Atom gen)))
                                    (n_name (Atom_name (Atom hibernate_after))))))
                               (fa_args ((Expr_name (Var_name Options))))))))
                       (Expr_apply
                         ((fa_name (Expr_name (Atom_name (Atom loop))))
                           (fa_args
                             ((Expr_name (Var_name Parent))
                               (Expr_name (Var_name Name))
                               (Expr_name (Var_name State))
                               (Expr_name (Var_name Mod))
                               (Expr_name (Var_name Timeout))
                               (Expr_name (Var_name HibernateAfterTimeout))
                               (Expr_name (Var_name Debug))))))))))))))
        (fd_spec ())))
    (Module_comment
      (Comment
        %%========================================================================))
    (Module_comment (Comment "%% Gen-callback functions"))
    (Module_comment
      (Comment
        %%========================================================================))
    (Module_comment
      (Comment "%% ---------------------------------------------------"))
    (Module_comment (Comment "%% Initiate the new process."))
    (Module_comment (Comment "%% Register the name using the Rfunc function"))
    (Module_comment (Comment "%% Calls the Mod:init/Args function."))
    (Module_comment
      (Comment "%% Finally an acknowledge is sent to Parent and the main"))
    (Module_comment (Comment "%% loop is entered."))
    (Module_comment
      (Comment "%% ---------------------------------------------------"))
    (Function_decl
      ((fd_name (Atom init_it)) (fd_arity 6)
        (fd_cases
          (((c_lhs
              ((Pattern_binding (Var_name Starter))
                (Pattern_match (Lit_atom (Atom self)))
                (Pattern_binding (Var_name Name))
                (Pattern_binding (Var_name Mod))
                (Pattern_binding (Var_name Args))
                (Pattern_binding (Var_name Options))))
             (c_guard ())
             (c_rhs
               (Expr_apply
                 ((fa_name (Expr_name (Atom_name (Atom init_it))))
                   (fa_args
                     ((Expr_name (Var_name Starter))
                       (Expr_apply
                         ((fa_name (Expr_name (Atom_name (Atom self))))
                           (fa_args ())))
                       (Expr_name (Var_name Name)) (Expr_name (Var_name Mod))
                       (Expr_name (Var_name Args))
                       (Expr_name (Var_name Options))))))))
            ((c_lhs
               ((Pattern_binding (Var_name Starter))
                 (Pattern_binding (Var_name Parent))
                 (Pattern_binding (Var_name Name0))
                 (Pattern_binding (Var_name Mod))
                 (Pattern_binding (Var_name Args))
                 (Pattern_binding (Var_name Options))))
              (c_guard ())
              (c_rhs
                (Expr_let
                  ((lb_lhs (Pattern_binding (Var_name Name)))
                    (lb_rhs
                      (Expr_apply
                        ((fa_name
                           (Expr_name
                             (Qualified_name (n_mod (Atom_name (Atom gen)))
                               (n_name (Atom_name (Atom name))))))
                          (fa_args ((Expr_name (Var_name Name0))))))))
                  (Expr_let
                    ((lb_lhs (Pattern_binding (Var_name Debug)))
                      (lb_rhs
                        (Expr_apply
                          ((fa_name
                             (Expr_name
                               (Qualified_name (n_mod (Atom_name (Atom gen)))
                                 (n_name (Atom_name (Atom debug_options))))))
                            (fa_args
                              ((Expr_name (Var_name Name))
                                (Expr_name (Var_name Options))))))))
                    (Expr_let
                      ((lb_lhs
                         (Pattern_binding (Var_name HibernateAfterTimeout)))
                        (lb_rhs
                          (Expr_apply
                            ((fa_name
                               (Expr_name
                                 (Qualified_name (n_mod (Atom_name (Atom gen)))
                                   (n_name (Atom_name (Atom hibernate_after))))))
                              (fa_args ((Expr_name (Var_name Options))))))))
                      (Expr_case
                        (Expr_apply
                          ((fa_name (Expr_name (Atom_name (Atom init_it))))
                            (fa_args
                              ((Expr_name (Var_name Mod))
                                (Expr_name (Var_name Args))))))
                        (((c_lhs
                            ((Pattern_tuple
                               ((Pattern_match (Lit_atom (Atom ok)))
                                 (Pattern_tuple
                                   ((Pattern_match (Lit_atom (Atom ok)))
                                     (Pattern_binding (Var_name State))))))))
                           (c_guard ())
                           (c_rhs
                             (Expr_comment
                               (Comment
                                 " FIXME: ignored let bindings are not supported yet")
                               (Expr_let
                                 ((lb_lhs (Pattern_binding (Var_name _)))
                                   (lb_rhs
                                     (Expr_apply
                                       ((fa_name
                                          (Expr_name
                                            (Qualified_name
                                              (n_mod
                                                (Atom_name (Atom proc_lib)))
                                              (n_name
                                                (Atom_name (Atom init_ack))))))
                                         (fa_args
                                           ((Expr_name (Var_name Starter))
                                             (Expr_tuple
                                               ((Expr_literal
                                                  (Lit_atom (Atom ok)))
                                                 (Expr_apply
                                                   ((fa_name
                                                      (Expr_name
                                                        (Atom_name (Atom self))))
                                                     (fa_args ())))))))))))
                                 (Expr_apply
                                   ((fa_name
                                      (Expr_name (Atom_name (Atom loop))))
                                     (fa_args
                                       ((Expr_name (Var_name Parent))
                                         (Expr_name (Var_name Name))
                                         (Expr_name (Var_name State))
                                         (Expr_name (Var_name Mod))
                                         (Expr_literal
                                           (Lit_atom (Atom infinity)))
                                         (Expr_name
                                           (Var_name HibernateAfterTimeout))
                                         (Expr_name (Var_name Debug))))))))))
                          ((c_lhs
                             ((Pattern_tuple
                                ((Pattern_match (Lit_atom (Atom ok)))
                                  (Pattern_tuple
                                    ((Pattern_match (Lit_atom (Atom ok)))
                                      (Pattern_binding (Var_name State))
                                      (Pattern_binding (Var_name Timeout))))))))
                            (c_guard ())
                            (c_rhs
                              (Expr_comment
                                (Comment
                                  " FIXME: ignored let bindings are not supported yet")
                                (Expr_let
                                  ((lb_lhs (Pattern_binding (Var_name _)))
                                    (lb_rhs
                                      (Expr_apply
                                        ((fa_name
                                           (Expr_name
                                             (Qualified_name
                                               (n_mod
                                                 (Atom_name (Atom proc_lib)))
                                               (n_name
                                                 (Atom_name (Atom init_ack))))))
                                          (fa_args
                                            ((Expr_name (Var_name Starter))
                                              (Expr_tuple
                                                ((Expr_literal
                                                   (Lit_atom (Atom ok)))
                                                  (Expr_apply
                                                    ((fa_name
                                                       (Expr_name
                                                         (Atom_name
                                                           (Atom self))))
                                                      (fa_args ())))))))))))
                                  (Expr_apply
                                    ((fa_name
                                       (Expr_name (Atom_name (Atom loop))))
                                      (fa_args
                                        ((Expr_name (Var_name Parent))
                                          (Expr_name (Var_name Name))
                                          (Expr_name (Var_name State))
                                          (Expr_name (Var_name Mod))
                                          (Expr_name (Var_name Timeout))
                                          (Expr_name
                                            (Var_name HibernateAfterTimeout))
                                          (Expr_name (Var_name Debug))))))))))
                          ((c_lhs
                             ((Pattern_tuple
                                ((Pattern_match (Lit_atom (Atom ok)))
                                  (Pattern_tuple
                                    ((Pattern_match (Lit_atom (Atom stop)))
                                      (Pattern_binding (Var_name Reason))))))))
                            (c_guard ())
                            (c_rhs
                              (Expr_comment
                                (Comment
                                  "% For consistency, we must make sure that the")
                                (Expr_comment
                                  (Comment
                                    "% registered name (if any) is unregistered before")
                                  (Expr_comment
                                    (Comment
                                      "% the parent process is notified about the failure.")
                                    (Expr_comment
                                      (Comment
                                        "% (Otherwise, the parent process could get")
                                      (Expr_comment
                                        (Comment
                                          "% an 'already_started' error if it immediately")
                                        (Expr_comment
                                          (Comment
                                            "% tried starting the process again.)")
                                          (Expr_comment
                                            (Comment
                                              " FIXME: ignored let bindings are not supported yet")
                                            (Expr_let
                                              ((lb_lhs
                                                 (Pattern_binding (Var_name _)))
                                                (lb_rhs
                                                  (Expr_apply
                                                    ((fa_name
                                                       (Expr_name
                                                         (Qualified_name
                                                           (n_mod
                                                             (Atom_name
                                                               (Atom gen)))
                                                           (n_name
                                                             (Atom_name
                                                               (Atom
                                                                 unregister_name))))))
                                                      (fa_args
                                                        ((Expr_name
                                                           (Var_name Name0))))))))
                                              (Expr_let
                                                ((lb_lhs
                                                   (Pattern_binding
                                                     (Var_name _)))
                                                  (lb_rhs
                                                    (Expr_apply
                                                      ((fa_name
                                                         (Expr_name
                                                           (Qualified_name
                                                             (n_mod
                                                               (Atom_name
                                                                 (Atom
                                                                   proc_lib)))
                                                             (n_name
                                                               (Atom_name
                                                                 (Atom
                                                                   init_ack))))))
                                                        (fa_args
                                                          ((Expr_name
                                                             (Var_name Starter))
                                                            (Expr_tuple
                                                              ((Expr_literal
                                                                 (Lit_atom
                                                                   (Atom error)))
                                                                (Expr_name
                                                                  (Var_name
                                                                    Reason))))))))))
                                                (Expr_apply
                                                  ((fa_name
                                                     (Expr_name
                                                       (Atom_name (Atom exit))))
                                                    (fa_args
                                                      ((Expr_name
                                                         (Var_name Reason)))))))))))))))))
                          ((c_lhs
                             ((Pattern_tuple
                                ((Pattern_match (Lit_atom (Atom ok)))
                                  (Pattern_match (Lit_atom (Atom ignore)))))))
                            (c_guard ())
                            (c_rhs
                              (Expr_comment
                                (Comment
                                  " FIXME: ignored let bindings are not supported yet")
                                (Expr_let
                                  ((lb_lhs (Pattern_binding (Var_name _)))
                                    (lb_rhs
                                      (Expr_apply
                                        ((fa_name
                                           (Expr_name
                                             (Qualified_name
                                               (n_mod (Atom_name (Atom gen)))
                                               (n_name
                                                 (Atom_name
                                                   (Atom unregister_name))))))
                                          (fa_args
                                            ((Expr_name (Var_name Name0))))))))
                                  (Expr_let
                                    ((lb_lhs (Pattern_binding (Var_name _)))
                                      (lb_rhs
                                        (Expr_apply
                                          ((fa_name
                                             (Expr_name
                                               (Qualified_name
                                                 (n_mod
                                                   (Atom_name (Atom proc_lib)))
                                                 (n_name
                                                   (Atom_name (Atom init_ack))))))
                                            (fa_args
                                              ((Expr_name (Var_name Starter))
                                                (Expr_literal
                                                  (Lit_atom (Atom ignore)))))))))
                                    (Expr_apply
                                      ((fa_name
                                         (Expr_name (Atom_name (Atom exit))))
                                        (fa_args
                                          ((Expr_literal
                                             (Lit_atom (Atom normal))))))))))))
                          ((c_lhs
                             ((Pattern_tuple
                                ((Pattern_match (Lit_atom (Atom ok)))
                                  (Pattern_binding (Var_name Else))))))
                            (c_guard ())
                            (c_rhs
                              (Expr_comment
                                (Comment
                                  " FIXME: ignored let bindings are not supported yet")
                                (Expr_let
                                  ((lb_lhs (Pattern_binding (Var_name Error)))
                                    (lb_rhs
                                      (Expr_tuple
                                        ((Expr_literal
                                           (Lit_atom (Atom bad_return_value)))
                                          (Expr_name (Var_name Else))))))
                                  (Expr_let
                                    ((lb_lhs (Pattern_binding (Var_name _)))
                                      (lb_rhs
                                        (Expr_apply
                                          ((fa_name
                                             (Expr_name
                                               (Qualified_name
                                                 (n_mod
                                                   (Atom_name (Atom proc_lib)))
                                                 (n_name
                                                   (Atom_name (Atom init_ack))))))
                                            (fa_args
                                              ((Expr_name (Var_name Starter))
                                                (Expr_tuple
                                                  ((Expr_literal
                                                     (Lit_atom (Atom error)))
                                                    (Expr_name
                                                      (Var_name Error))))))))))
                                    (Expr_apply
                                      ((fa_name
                                         (Expr_name (Atom_name (Atom exit))))
                                        (fa_args
                                          ((Expr_name (Var_name Error)))))))))))
                          ((c_lhs
                             ((Pattern_tuple
                                ((Pattern_match (Lit_atom (Atom 'EXIT')))
                                  (Pattern_binding (Var_name Class))
                                  (Pattern_binding (Var_name Reason))
                                  (Pattern_binding (Var_name Stacktrace))))))
                            (c_guard ())
                            (c_rhs
                              (Expr_comment
                                (Comment
                                  " FIXME: ignored let bindings are not supported yet")
                                (Expr_let
                                  ((lb_lhs (Pattern_binding (Var_name _)))
                                    (lb_rhs
                                      (Expr_apply
                                        ((fa_name
                                           (Expr_name
                                             (Qualified_name
                                               (n_mod (Atom_name (Atom gen)))
                                               (n_name
                                                 (Atom_name
                                                   (Atom unregister_name))))))
                                          (fa_args
                                            ((Expr_name (Var_name Name0))))))))
                                  (Expr_let
                                    ((lb_lhs (Pattern_binding (Var_name _)))
                                      (lb_rhs
                                        (Expr_apply
                                          ((fa_name
                                             (Expr_name
                                               (Qualified_name
                                                 (n_mod
                                                   (Atom_name (Atom proc_lib)))
                                                 (n_name
                                                   (Atom_name (Atom init_ack))))))
                                            (fa_args
                                              ((Expr_name (Var_name Starter))
                                                (Expr_tuple
                                                  ((Expr_literal
                                                     (Lit_atom (Atom error)))
                                                    (Expr_apply
                                                      ((fa_name
                                                         (Expr_name
                                                           (Atom_name
                                                             (Atom
                                                               terminate_reason))))
                                                        (fa_args
                                                          ((Expr_name
                                                             (Var_name Class))
                                                            (Expr_name
                                                              (Var_name Reason))
                                                            (Expr_name
                                                              (Var_name
                                                                Stacktrace))))))))))))))
                                    (Expr_apply
                                      ((fa_name
                                         (Expr_name
                                           (Qualified_name
                                             (n_mod (Atom_name (Atom erlang)))
                                             (n_name (Atom_name (Atom raise))))))
                                        (fa_args
                                          ((Expr_name (Var_name Class))
                                            (Expr_name (Var_name Reason))
                                            (Expr_name (Var_name Stacktrace))))))))))))))))))))
        (fd_spec ())))
    (Function_decl
      ((fd_name (Atom init_it)) (fd_arity 2)
        (fd_cases
          (((c_lhs
              ((Pattern_binding (Var_name Mod))
                (Pattern_binding (Var_name Args))))
             (c_guard ())
             (c_rhs
               (Expr_try
                 ((try_expr
                    (Expr_tuple
                      ((Expr_literal (Lit_atom (Atom ok)))
                        (Expr_apply
                          ((fa_name
                             (Expr_name
                               (Qualified_name (n_mod (Var_name Mod))
                                 (n_name (Atom_name (Atom init))))))
                            (fa_args ((Expr_name (Var_name Args)))))))))
                   (try_catch
                     ((((c_lhs
                          ((Pattern_catch ((Atom_name (Atom throw)))
                             (Pattern_binding (Var_name R)) ())))
                         (c_guard ())
                         (c_rhs
                           (Expr_tuple
                             ((Expr_literal (Lit_atom (Atom ok)))
                               (Expr_name (Var_name R))))))
                        ((c_lhs
                           ((Pattern_catch ((Var_name Class))
                              (Pattern_binding (Var_name R)) ((Var_name S)))))
                          (c_guard ())
                          (c_rhs
                            (Expr_tuple
                              ((Expr_literal (Lit_atom (Atom 'EXIT')))
                                (Expr_name (Var_name Class))
                                (Expr_name (Var_name R))
                                (Expr_name (Var_name S)))))))))
                   (try_after ())))))))
        (fd_spec ())))
    (Module_comment
      (Comment
        %%========================================================================))
    (Module_comment (Comment "%% Internal functions"))
    (Module_comment
      (Comment
        %%========================================================================))
    (Module_comment
      (Comment "%% ---------------------------------------------------"))
    (Module_comment (Comment "%% The MAIN loop."))
    (Module_comment
      (Comment "%% ---------------------------------------------------"))
    (Function_decl
      ((fd_name (Atom loop)) (fd_arity 6)
        (fd_cases
          (((c_lhs
              ((Pattern_binding (Var_name Parent))
                (Pattern_binding (Var_name Name))
                (Pattern_binding (Var_name State))
                (Pattern_binding (Var_name Mod))
                (Pattern_with_name
                  (Pattern_tuple
                    ((Pattern_match (Lit_atom (Atom continue)))
                      (Pattern_binding (Var_name Continue))))
                  (Pattern_binding (Var_name Msg)))
                (Pattern_binding (Var_name Debug))))
             (c_guard ())
             (c_rhs
               (Expr_let
                 ((lb_lhs (Pattern_binding (Var_name Reply)))
                   (lb_rhs
                     (Expr_apply
                       ((fa_name (Expr_name (Atom_name (Atom try_dispatch))))
                         (fa_args
                           ((Expr_name (Var_name Mod))
                             (Expr_literal (Lit_atom (Atom handle_continue)))
                             (Expr_name (Var_name Continue))
                             (Expr_name (Var_name State))))))))
                 (Expr_case (Expr_name (Var_name Debug))
                   (((c_lhs ((Pattern_list ()))) (c_guard ())
                      (c_rhs
                        (Expr_apply
                          ((fa_name
                             (Expr_name (Atom_name (Atom handle_common_reply))))
                            (fa_args
                              ((Expr_name (Var_name Reply))
                                (Expr_name (Var_name Parent))
                                (Expr_name (Var_name Name))
                                (Expr_literal (Lit_atom (Atom undefined)))
                                (Expr_name (Var_name Msg))
                                (Expr_name (Var_name Mod))
                                (Expr_name (Var_name HibernateAfterTimeout))
                                (Expr_name (Var_name State))))))))
                     ((c_lhs ((Pattern_binding (Var_name _)))) (c_guard ())
                       (c_rhs
                         (Expr_let
                           ((lb_lhs (Pattern_binding (Var_name Debug1)))
                             (lb_rhs
                               (Expr_apply
                                 ((fa_name
                                    (Expr_name
                                      (Qualified_name
                                        (n_mod (Atom_name (Atom sys)))
                                        (n_name
                                          (Atom_name (Atom handle_debug))))))
                                   (fa_args
                                     ((Expr_name (Var_name Debug))
                                       (Expr_fun_ref
                                         (fref_name
                                           (Atom_name (Atom print_event)))
                                         (fref_arity 3))
                                       (Expr_name (Var_name Name))
                                       (Expr_name (Var_name Msg))))))))
                           (Expr_apply
                             ((fa_name
                                (Expr_name
                                  (Atom_name (Atom handle_common_reply))))
                               (fa_args
                                 ((Expr_name (Var_name Reply))
                                   (Expr_name (Var_name Parent))
                                   (Expr_name (Var_name Name))
                                   (Expr_literal (Lit_atom (Atom undefined)))
                                   (Expr_name (Var_name Msg))
                                   (Expr_name (Var_name Mod))
                                   (Expr_name (Var_name HibernateAfterTimeout))
                                   (Expr_name (Var_name State))
                                   (Expr_name (Var_name Debug1))))))))))))))
            ((c_lhs
               ((Pattern_binding (Var_name Parent))
                 (Pattern_binding (Var_name Name))
                 (Pattern_binding (Var_name State))
                 (Pattern_binding (Var_name Mod))
                 (Pattern_match (Lit_atom (Atom hibernate)))
                 (Pattern_binding (Var_name HibernateAfterTimeout))
                 (Pattern_binding (Var_name Debug))))
              (c_guard ())
              (c_rhs
                (Expr_apply
                  ((fa_name
                     (Expr_name
                       (Qualified_name (n_mod (Atom_name (Atom proc_lib)))
                         (n_name (Atom_name (Atom hibernate))))))
                    (fa_args
                      ((Expr_macro ?MODULE)
                        (Expr_literal (Lit_atom (Atom wake_hib)))
                        (Expr_list
                          ((Expr_name (Var_name Parent))
                            (Expr_name (Var_name Name))
                            (Expr_name (Var_name State))
                            (Expr_name (Var_name Mod))
                            (Expr_name (Var_name HibernateAfterTimeout))
                            (Expr_name (Var_name Debug))))))))))
            ((c_lhs
               ((Pattern_binding (Var_name Parent))
                 (Pattern_binding (Var_name Name))
                 (Pattern_binding (Var_name State))
                 (Pattern_binding (Var_name Mod))
                 (Pattern_match (Lit_atom (Atom infinity)))
                 (Pattern_binding (Var_name HibernateAfterTimeout))
                 (Pattern_binding (Var_name Debug))))
              (c_guard ())
              (c_rhs
                (Expr_recv
                  ((rcv_cases
                     (((c_lhs ((Pattern_binding (Var_name Msg)))) (c_guard ())
                        (c_rhs
                          (Expr_apply
                            ((fa_name
                               (Expr_name (Atom_name (Atom decode_msg))))
                              (fa_args
                                ((Expr_name (Var_name Msg))
                                  (Expr_name (Var_name Parent))
                                  (Expr_name (Var_name Name))
                                  (Expr_name (Var_name State))
                                  (Expr_name (Var_name Mod))
                                  (Expr_literal (Lit_atom (Atom infinity)))
                                  (Expr_name (Var_name HibernateAfterTimeout))
                                  (Expr_name (Var_name Debug))
                                  (Expr_literal (Lit_atom (Atom false)))))))))))
                    (rcv_after
                      (((c_lhs
                          ((Pattern_binding (Var_name HibernateAfterTimeout))))
                         (c_guard ())
                         (c_rhs
                           (Expr_apply
                             ((fa_name (Expr_name (Atom_name (Atom loop))))
                               (fa_args
                                 ((Expr_name (Var_name Parent))
                                   (Expr_name (Var_name Name))
                                   (Expr_name (Var_name State))
                                   (Expr_name (Var_name Mod))
                                   (Expr_literal (Lit_atom (Atom hibernate)))
                                   (Expr_name (Var_name HibernateAfterTimeout))
                                   (Expr_name (Var_name Debug))))))))))))))
            ((c_lhs
               ((Pattern_binding (Var_name Parent))
                 (Pattern_binding (Var_name Name))
                 (Pattern_binding (Var_name State))
                 (Pattern_binding (Var_name Mod))
                 (Pattern_binding (Var_name Time))
                 (Pattern_binding (Var_name HibernateAfterTimeout))
                 (Pattern_binding (Var_name Debug))))
              (c_guard ())
              (c_rhs
                (Expr_let
                  ((lb_lhs (Pattern_binding (Var_name Msg)))
                    (lb_rhs
                      (Expr_recv
                        ((rcv_cases
                           (((c_lhs ((Pattern_binding (Var_name Input))))
                              (c_guard ())
                              (c_rhs (Expr_name (Var_name Input))))))
                          (rcv_after
                            (((c_lhs ((Pattern_binding (Var_name Time))))
                               (c_guard ())
                               (c_rhs (Expr_literal (Lit_atom (Atom timeout)))))))))))
                  (Expr_apply
                    ((fa_name (Expr_name (Atom_name (Atom decode_msg))))
                      (fa_args
                        ((Expr_name (Var_name Msg))
                          (Expr_name (Var_name Parent))
                          (Expr_name (Var_name Name))
                          (Expr_name (Var_name State))
                          (Expr_name (Var_name Mod))
                          (Expr_name (Var_name Time))
                          (Expr_name (Var_name HibernateAfterTimeout))
                          (Expr_name (Var_name Debug))
                          (Expr_literal (Lit_atom (Atom false))))))))))))
        (fd_spec ())))
    (Function_decl
      ((fd_name (Atom wake_hib)) (fd_arity 6)
        (fd_cases
          (((c_lhs
              ((Pattern_binding (Var_name Parent))
                (Pattern_binding (Var_name Name))
                (Pattern_binding (Var_name State))
                (Pattern_binding (Var_name Mod))
                (Pattern_binding (Var_name HibernateAfterTimeout))
                (Pattern_binding (Var_name Debug))))
             (c_guard ())
             (c_rhs
               (Expr_let
                 ((lb_lhs (Pattern_binding (Var_name Msg)))
                   (lb_rhs
                     (Expr_recv
                       ((rcv_cases
                          (((c_lhs ((Pattern_binding (Var_name Input))))
                             (c_guard ()) (c_rhs (Expr_name (Var_name Input))))))
                         (rcv_after ())))))
                 (Expr_apply
                   ((fa_name (Expr_name (Atom_name (Atom decode_msg))))
                     (fa_args
                       ((Expr_name (Var_name Msg))
                         (Expr_name (Var_name Parent))
                         (Expr_name (Var_name Name))
                         (Expr_name (Var_name State))
                         (Expr_name (Var_name Mod))
                         (Expr_literal (Lit_atom (Atom hibernate)))
                         (Expr_name (Var_name HibernateAfterTimeout))
                         (Expr_name (Var_name Debug))
                         (Expr_literal (Lit_atom (Atom true))))))))))))
        (fd_spec ())))
    (Function_decl
      ((fd_name (Atom decode_msg)) (fd_arity 9)
        (fd_cases
          (((c_lhs
              ((Pattern_binding (Var_name Msg))
                (Pattern_binding (Var_name Parent))
                (Pattern_binding (Var_name Name))
                (Pattern_binding (Var_name State))
                (Pattern_binding (Var_name Mod))
                (Pattern_binding (Var_name Time))
                (Pattern_binding (Var_name HibernateAfterTimeout))
                (Pattern_binding (Var_name Debug))
                (Pattern_binding (Var_name Hib))))
             (c_guard ())
             (c_rhs
               (Expr_case (Expr_name (Var_name Msg))
                 (((c_lhs
                     ((Pattern_tuple
                        ((Pattern_match (Lit_atom (Atom system)))
                          (Pattern_binding (Var_name From))
                          (Pattern_binding (Var_name Req))))))
                    (c_guard ())
                    (c_rhs
                      (Expr_apply
                        ((fa_name
                           (Expr_name
                             (Qualified_name (n_mod (Atom_name (Atom sys)))
                               (n_name (Atom_name (Atom handle_system_msg))))))
                          (fa_args
                            ((Expr_name (Var_name Req))
                              (Expr_name (Var_name From))
                              (Expr_name (Var_name Parent))
                              (Expr_macro ?MODULE) (Expr_name (Var_name Debug))
                              (Expr_list
                                ((Expr_name (Var_name Name))
                                  (Expr_name (Var_name State))
                                  (Expr_name (Var_name Mod))
                                  (Expr_name (Var_name Time))
                                  (Expr_name (Var_name HibernateAfterTimeout))))
                              (Expr_name (Var_name Hib))))))))
                   ((c_lhs
                      ((Pattern_tuple
                         ((Pattern_match (Lit_atom (Atom 'EXIT')))
                           (Pattern_binding (Var_name Parent))
                           (Pattern_binding (Var_name Reason))))))
                     (c_guard ())
                     (c_rhs
                       (Expr_apply
                         ((fa_name (Expr_name (Atom_name (Atom terminate))))
                           (fa_args
                             ((Expr_name (Var_name Reason))
                               (Expr_apply
                                 ((fa_name (Expr_macro ?STACKTRACE))
                                   (fa_args ())))
                               (Expr_name (Var_name Name))
                               (Expr_literal (Lit_atom (Atom undefined)))
                               (Expr_name (Var_name Msg))
                               (Expr_name (Var_name Mod))
                               (Expr_name (Var_name State))
                               (Expr_name (Var_name Debug))))))))
                   ((c_lhs ((Pattern_binding (Var_name _Msg))))
                     (c_guard
                       (((Expr_apply
                           ((fa_name
                              (Expr_name
                                (Qualified_name
                                  (n_mod (Atom_name (Atom erlang)))
                                  (n_name (Atom_name (Atom '=:='))))))
                             (fa_args
                               ((Expr_name (Var_name Debug)) (Expr_list ()))))))))
                     (c_rhs
                       (Expr_apply
                         ((fa_name (Expr_name (Atom_name (Atom handle_msg))))
                           (fa_args
                             ((Expr_name (Var_name Msg))
                               (Expr_name (Var_name Parent))
                               (Expr_name (Var_name Name))
                               (Expr_name (Var_name State))
                               (Expr_name (Var_name Mod))
                               (Expr_name (Var_name HibernateAfterTimeout))))))))
                   ((c_lhs ((Pattern_binding (Var_name _Msg)))) (c_guard ())
                     (c_rhs
                       (Expr_let
                         ((lb_lhs (Pattern_binding (Var_name Debug1)))
                           (lb_rhs
                             (Expr_apply
                               ((fa_name
                                  (Expr_name
                                    (Qualified_name
                                      (n_mod (Atom_name (Atom sys)))
                                      (n_name (Atom_name (Atom handle_debug))))))
                                 (fa_args
                                   ((Expr_name (Var_name Debug))
                                     (Expr_fun_ref
                                       (fref_name
                                         (Atom_name (Atom print_event)))
                                       (fref_arity 3))
                                     (Expr_name (Var_name Name))
                                     (Expr_tuple
                                       ((Expr_literal (Lit_atom (Atom in)))
                                         (Expr_name (Var_name Msg))))))))))
                         (Expr_apply
                           ((fa_name (Expr_name (Atom_name (Atom handle_msg))))
                             (fa_args
                               ((Expr_name (Var_name Msg))
                                 (Expr_name (Var_name Parent))
                                 (Expr_name (Var_name Name))
                                 (Expr_name (Var_name State))
                                 (Expr_name (Var_name Mod))
                                 (Expr_name (Var_name HibernateAfterTimeout))
                                 (Expr_name (Var_name Debug1)))))))))))))))
        (fd_spec ())))
    (Module_comment
      (Comment "%% ---------------------------------------------------"))
    (Module_comment (Comment "%% Send/receive functions"))
    (Module_comment
      (Comment "%% ---------------------------------------------------"))
    (Function_decl
      ((fd_name (Atom do_send)) (fd_arity 2)
        (fd_cases
          (((c_lhs
              ((Pattern_binding (Var_name Dest))
                (Pattern_binding (Var_name Msg))))
             (c_guard ())
             (c_rhs
               (Expr_comment
                 (Comment " FIXME: ignored let bindings are not supported yet")
                 (Expr_let
                   ((lb_lhs (Pattern_binding (Var_name _)))
                     (lb_rhs
                       (Expr_try
                         ((try_expr
                            (Expr_apply
                              ((fa_name
                                 (Expr_name
                                   (Qualified_name
                                     (n_mod (Atom_name (Atom erlang)))
                                     (n_name (Atom_name (Atom send))))))
                                (fa_args
                                  ((Expr_name (Var_name Dest))
                                    (Expr_name (Var_name Msg)))))))
                           (try_catch
                             ((((c_lhs
                                  ((Pattern_catch ((Atom_name (Atom error)))
                                     (Pattern_binding (Var_name _)) ())))
                                 (c_guard ())
                                 (c_rhs (Expr_literal (Lit_atom (Atom ok))))))))
                           (try_after ())))))
                   (Expr_literal (Lit_atom (Atom ok)))))))))
        (fd_spec ())))
    (Function_decl
      ((fd_name (Atom do_multi_call)) (fd_arity 4)
        (fd_cases
          (((c_lhs
              ((Pattern_binding (Var_name Nodes))
                (Pattern_binding (Var_name Name))
                (Pattern_binding (Var_name Req))
                (Pattern_match (Lit_atom (Atom infinity)))))
             (c_guard ())
             (c_rhs
               (Expr_let
                 ((lb_lhs (Pattern_binding (Var_name Tag)))
                   (lb_rhs
                     (Expr_apply
                       ((fa_name (Expr_name (Atom_name (Atom make_ref))))
                         (fa_args ())))))
                 (Expr_let
                   ((lb_lhs (Pattern_binding (Var_name Monitors)))
                     (lb_rhs
                       (Expr_apply
                         ((fa_name (Expr_name (Atom_name (Atom send_nodes))))
                           (fa_args
                             ((Expr_name (Var_name Nodes))
                               (Expr_name (Var_name Name))
                               (Expr_name (Var_name Tag))
                               (Expr_name (Var_name Req))))))))
                   (Expr_apply
                     ((fa_name (Expr_name (Atom_name (Atom rec_nodes))))
                       (fa_args
                         ((Expr_name (Var_name Tag))
                           (Expr_name (Var_name Monitors))
                           (Expr_name (Var_name Name))
                           (Expr_literal (Lit_atom (Atom undefined)))))))))))
            ((c_lhs
               ((Pattern_binding (Var_name Nodes))
                 (Pattern_binding (Var_name Name))
                 (Pattern_binding (Var_name Req))
                 (Pattern_binding (Var_name Timeout))))
              (c_guard ())
              (c_rhs
                (Expr_let
                  ((lb_lhs (Pattern_binding (Var_name Tag)))
                    (lb_rhs
                      (Expr_apply
                        ((fa_name (Expr_name (Atom_name (Atom make_ref))))
                          (fa_args ())))))
                  (Expr_let
                    ((lb_lhs (Pattern_binding (Var_name Caller)))
                      (lb_rhs
                        (Expr_apply
                          ((fa_name (Expr_name (Atom_name (Atom self))))
                            (fa_args ())))))
                    (Expr_let
                      ((lb_lhs (Pattern_binding (Var_name Receiver)))
                        (lb_rhs
                          (Expr_apply
                            ((fa_name (Expr_name (Atom_name (Atom spawn))))
                              (fa_args
                                ((Expr_fun
                                   (((c_lhs ()) (c_guard ())
                                      (c_rhs
                                        (Expr_comment
                                          (Comment
                                            "% Middleman process. Should be unsensitive to regular")
                                          (Expr_comment
                                            (Comment
                                              "% exit signals. The sychronization is needed in case")
                                            (Expr_comment
                                              (Comment
                                                "% the receiver would exit before the caller started")
                                              (Expr_comment
                                                (Comment "% the monitor.")
                                                (Expr_comment
                                                  (Comment
                                                    " FIXME: ignored let bindings are not supported yet")
                                                  (Expr_let
                                                    ((lb_lhs
                                                       (Pattern_binding
                                                         (Var_name _)))
                                                      (lb_rhs
                                                        (Expr_apply
                                                          ((fa_name
                                                             (Expr_name
                                                               (Atom_name
                                                                 (Atom
                                                                   process_flag))))
                                                            (fa_args
                                                              ((Expr_literal
                                                                 (Lit_atom
                                                                   (Atom
                                                                     trap_exit)))
                                                                (Expr_literal
                                                                  (Lit_atom
                                                                    (Atom true)))))))))
                                                    (Expr_let
                                                      ((lb_lhs
                                                         (Pattern_binding
                                                           (Var_name Mref)))
                                                        (lb_rhs
                                                          (Expr_apply
                                                            ((fa_name
                                                               (Expr_name
                                                                 (Qualified_name
                                                                   (n_mod
                                                                     (Atom_name
                                                                      (Atom
                                                                      erlang)))
                                                                   (n_name
                                                                     (Atom_name
                                                                      (Atom
                                                                      monitor))))))
                                                              (fa_args
                                                                ((Expr_literal
                                                                   (Lit_atom
                                                                     (Atom
                                                                      process)))
                                                                  (Expr_name
                                                                    (Var_name
                                                                      Caller))))))))
                                                      (Expr_recv
                                                        ((rcv_cases
                                                           (((c_lhs
                                                               ((Pattern_tuple
                                                                  ((Pattern_binding
                                                                     (Var_name
                                                                      Caller))
                                                                    (Pattern_binding
                                                                      (Var_name
                                                                      Tag))))))
                                                              (c_guard ())
                                                              (c_rhs
                                                                (Expr_let
                                                                  ((lb_lhs
                                                                     (Pattern_binding
                                                                      (Var_name
                                                                      Monitors)))
                                                                    (lb_rhs
                                                                      (Expr_apply
                                                                      ((fa_name
                                                                      (Expr_name
                                                                      (Atom_name
                                                                      (Atom
                                                                      send_nodes))))
                                                                      (fa_args
                                                                      ((Expr_name
                                                                      (Var_name
                                                                      Nodes))
                                                                      (Expr_name
                                                                      (Var_name
                                                                      Name))
                                                                      (Expr_name
                                                                      (Var_name
                                                                      Tag))
                                                                      (Expr_name
                                                                      (Var_name
                                                                      Req))))))))
                                                                  (Expr_let
                                                                    ((lb_lhs
                                                                      (Pattern_binding
                                                                      (Var_name
                                                                      TimerId)))
                                                                      (lb_rhs
                                                                      (Expr_apply
                                                                      ((fa_name
                                                                      (Expr_name
                                                                      (Qualified_name
                                                                      (n_mod
                                                                      (Atom_name
                                                                      (Atom
                                                                      erlang)))
                                                                      (n_name
                                                                      (Atom_name
                                                                      (Atom
                                                                      start_timer))))))
                                                                      (fa_args
                                                                      ((Expr_name
                                                                      (Var_name
                                                                      Timeout))
                                                                      (Expr_apply
                                                                      ((fa_name
                                                                      (Expr_name
                                                                      (Atom_name
                                                                      (Atom
                                                                      self))))
                                                                      (fa_args
                                                                      ())))
                                                                      (Expr_literal
                                                                      (Lit_atom
                                                                      (Atom ok)))))))))
                                                                    (Expr_let
                                                                      ((lb_lhs
                                                                      (Pattern_binding
                                                                      (Var_name
                                                                      Result)))
                                                                      (lb_rhs
                                                                      (Expr_apply
                                                                      ((fa_name
                                                                      (Expr_name
                                                                      (Atom_name
                                                                      (Atom
                                                                      rec_nodes))))
                                                                      (fa_args
                                                                      ((Expr_name
                                                                      (Var_name
                                                                      Tag))
                                                                      (Expr_name
                                                                      (Var_name
                                                                      Monitors))
                                                                      (Expr_name
                                                                      (Var_name
                                                                      Name))
                                                                      (Expr_name
                                                                      (Var_name
                                                                      TimerId))))))))
                                                                      (Expr_apply
                                                                      ((fa_name
                                                                      (Expr_name
                                                                      (Atom_name
                                                                      (Atom
                                                                      exit))))
                                                                      (fa_args
                                                                      ((Expr_tuple
                                                                      ((Expr_apply
                                                                      ((fa_name
                                                                      (Expr_name
                                                                      (Atom_name
                                                                      (Atom
                                                                      self))))
                                                                      (fa_args
                                                                      ())))
                                                                      (Expr_name
                                                                      (Var_name
                                                                      Tag))
                                                                      (Expr_name
                                                                      (Var_name
                                                                      Result)))))))))))))
                                                             ((c_lhs
                                                                ((Pattern_tuple
                                                                   ((Pattern_match
                                                                      (Lit_atom
                                                                      (Atom
                                                                      'DOWN')))
                                                                     (Pattern_binding
                                                                      (Var_name
                                                                      Mref))
                                                                     (Pattern_binding
                                                                      (Var_name
                                                                      _))
                                                                     (Pattern_binding
                                                                      (Var_name
                                                                      _))
                                                                     (Pattern_binding
                                                                      (Var_name
                                                                      _))))))
                                                               (c_guard ())
                                                               (c_rhs
                                                                 (Expr_comment
                                                                   (Comment
                                                                     "% Caller died before sending us the go-ahead.")
                                                                   (Expr_comment
                                                                     (Comment
                                                                      "% Give up silently.")
                                                                     (Expr_apply
                                                                      ((fa_name
                                                                      (Expr_name
                                                                      (Atom_name
                                                                      (Atom
                                                                      exit))))
                                                                      (fa_args
                                                                      ((Expr_literal
                                                                      (Lit_atom
                                                                      (Atom
                                                                      normal)))))))))))))
                                                          (rcv_after ()))))))))))))))))))))
                      (Expr_let
                        ((lb_lhs (Pattern_binding (Var_name Mref)))
                          (lb_rhs
                            (Expr_apply
                              ((fa_name
                                 (Expr_name
                                   (Qualified_name
                                     (n_mod (Atom_name (Atom erlang)))
                                     (n_name (Atom_name (Atom monitor))))))
                                (fa_args
                                  ((Expr_literal (Lit_atom (Atom process)))
                                    (Expr_name (Var_name Receiver))))))))
                        (Expr_comment
                          (Comment
                            " FIXME: ignored let bindings are not supported yet")
                          (Expr_let
                            ((lb_lhs (Pattern_binding (Var_name _)))
                              (lb_rhs
                                (Expr_apply
                                  ((fa_name
                                     (Expr_name
                                       (Qualified_name
                                         (n_mod (Atom_name (Atom erlang)))
                                         (n_name (Atom_name (Atom send))))))
                                    (fa_args
                                      ((Expr_name (Var_name Receiver))
                                        (Expr_tuple
                                          ((Expr_apply
                                             ((fa_name
                                                (Expr_name
                                                  (Atom_name (Atom self))))
                                               (fa_args ())))
                                            (Expr_name (Var_name Tag))))))))))
                            (Expr_recv
                              ((rcv_cases
                                 (((c_lhs
                                     ((Pattern_tuple
                                        ((Pattern_match
                                           (Lit_atom (Atom 'DOWN')))
                                          (Pattern_binding (Var_name Mref))
                                          (Pattern_binding (Var_name _))
                                          (Pattern_binding (Var_name _))
                                          (Pattern_tuple
                                            ((Pattern_binding
                                               (Var_name Receiver))
                                              (Pattern_binding (Var_name Tag))
                                              (Pattern_binding
                                                (Var_name Result))))))))
                                    (c_guard ())
                                    (c_rhs (Expr_name (Var_name Result))))
                                   ((c_lhs
                                      ((Pattern_tuple
                                         ((Pattern_match
                                            (Lit_atom (Atom 'DOWN')))
                                           (Pattern_binding (Var_name Mref))
                                           (Pattern_binding (Var_name _))
                                           (Pattern_binding (Var_name _))
                                           (Pattern_binding (Var_name Reason))))))
                                     (c_guard ())
                                     (c_rhs
                                       (Expr_comment
                                         (Comment
                                           "% The middleman code failed. Or someone did ")
                                         (Expr_comment
                                           (Comment
                                             "% exit(_, kill) on the middleman process => Reason==killed")
                                           (Expr_apply
                                             ((fa_name
                                                (Expr_name
                                                  (Atom_name (Atom exit))))
                                               (fa_args
                                                 ((Expr_name (Var_name Reason))))))))))))
                                (rcv_after ())))))))))))))
        (fd_spec ())))
    (Function_decl
      ((fd_name (Atom send_nodes)) (fd_arity 4)
        (fd_cases
          (((c_lhs
              ((Pattern_binding (Var_name Nodes))
                (Pattern_binding (Var_name Name))
                (Pattern_binding (Var_name Tag))
                (Pattern_binding (Var_name Req))))
             (c_guard ())
             (c_rhs
               (Expr_apply
                 ((fa_name (Expr_name (Atom_name (Atom send_nodes))))
                   (fa_args
                     ((Expr_name (Var_name Nodes)) (Expr_name (Var_name Name))
                       (Expr_name (Var_name Tag)) (Expr_name (Var_name Req))
                       (Expr_list ())))))))))
        (fd_spec ())))
    (Function_decl
      ((fd_name (Atom send_nodes)) (fd_arity 5)
        (fd_cases
          (((c_lhs
              ((Pattern_cons ((Pattern_binding (Var_name Node)))
                 (Pattern_binding (Var_name Tail)))
                (Pattern_binding (Var_name Name))
                (Pattern_binding (Var_name Tag))
                (Pattern_binding (Var_name Req))
                (Pattern_binding (Var_name Monitors))))
             (c_guard
               (((Expr_apply
                   ((fa_name (Expr_name (Atom_name (Atom is_atom))))
                     (fa_args ((Expr_name (Var_name Node)))))))))
             (c_rhs
               (Expr_let
                 ((lb_lhs (Pattern_binding (Var_name Monitor)))
                   (lb_rhs
                     (Expr_apply
                       ((fa_name (Expr_name (Atom_name (Atom start_monitor))))
                         (fa_args
                           ((Expr_name (Var_name Node))
                             (Expr_name (Var_name Name))))))))
                 (Expr_comment
                   (Comment "% Handle non-existing names in rec_nodes.")
                   (Expr_comment
                     (Comment
                       " FIXME: ignored let bindings are not supported yet")
                     (Expr_let
                       ((lb_lhs (Pattern_binding (Var_name _)))
                         (lb_rhs
                           (Expr_catch
                             (Expr_apply
                               ((fa_name
                                  (Expr_name
                                    (Qualified_name
                                      (n_mod (Atom_name (Atom erlang)))
                                      (n_name (Atom_name (Atom send))))))
                                 (fa_args
                                   ((Expr_tuple
                                      ((Expr_name (Var_name Name))
                                        (Expr_name (Var_name Node))))
                                     (Expr_tuple
                                       ((Expr_literal
                                          (Lit_atom (Atom '$gen_call')))
                                         (Expr_tuple
                                           ((Expr_apply
                                              ((fa_name
                                                 (Expr_name
                                                   (Atom_name (Atom self))))
                                                (fa_args ())))
                                             (Expr_tuple
                                               ((Expr_name (Var_name Tag))
                                                 (Expr_name (Var_name Node))))))
                                         (Expr_name (Var_name Req)))))))))))
                       (Expr_apply
                         ((fa_name (Expr_name (Atom_name (Atom send_nodes))))
                           (fa_args
                             ((Expr_name (Var_name Tail))
                               (Expr_name (Var_name Name))
                               (Expr_name (Var_name Tag))
                               (Expr_name (Var_name Req))
                               (Expr_cons ((Expr_name (Var_name Monitor)))
                                 (Expr_name (Var_name Monitors)))))))))))))
            ((c_lhs
               ((Pattern_cons ((Pattern_binding (Var_name _Node)))
                  (Pattern_binding (Var_name Tail)))
                 (Pattern_binding (Var_name Name))
                 (Pattern_binding (Var_name Tag))
                 (Pattern_binding (Var_name Req))
                 (Pattern_binding (Var_name Monitors))))
              (c_guard ())
              (c_rhs
                (Expr_comment (Comment "% Skip non-atom Node")
                  (Expr_apply
                    ((fa_name (Expr_name (Atom_name (Atom send_nodes))))
                      (fa_args
                        ((Expr_name (Var_name Tail))
                          (Expr_name (Var_name Name))
                          (Expr_name (Var_name Tag)) (Expr_name (Var_name Req))
                          (Expr_name (Var_name Monitors)))))))))
            ((c_lhs
               ((Pattern_list ()) (Pattern_binding (Var_name _Name))
                 (Pattern_binding (Var_name _Tag))
                 (Pattern_binding (Var_name _Req))
                 (Pattern_binding (Var_name Monitors))))
              (c_guard ()) (c_rhs (Expr_name (Var_name Monitors))))))
        (fd_spec ())))
    (Module_comment (Comment "% Against old nodes:"))
    (Module_comment
      (Comment
        "% If no reply has been delivered within 2 secs. (per node) check that"))
    (Module_comment
      (Comment "% the server really exists and wait for ever for the answer."))
    (Module_comment (Comment %))
    (Module_comment (Comment "% Against contemporary nodes:"))
    (Module_comment
      (Comment "% Wait for reply, server 'DOWN', or timeout from TimerId."))
    (Function_decl
      ((fd_name (Atom rec_nodes)) (fd_arity 4)
        (fd_cases
          (((c_lhs
              ((Pattern_binding (Var_name Tag))
                (Pattern_binding (Var_name Nodes))
                (Pattern_binding (Var_name Name))
                (Pattern_binding (Var_name TimerId))))
             (c_guard ())
             (c_rhs
               (Expr_apply
                 ((fa_name (Expr_name (Atom_name (Atom rec_nodes))))
                   (fa_args
                     ((Expr_name (Var_name Tag)) (Expr_name (Var_name Nodes))
                       (Expr_name (Var_name Name)) (Expr_list ())
                       (Expr_list ()) (Expr_literal (Lit_integer 2000))
                       (Expr_name (Var_name TimerId))))))))))
        (fd_spec ())))
    (Function_decl
      ((fd_name (Atom rec_nodes)) (fd_arity 7)
        (fd_cases
          (((c_lhs
              ((Pattern_binding (Var_name Tag))
                (Pattern_cons
                  ((Pattern_tuple
                     ((Pattern_binding (Var_name N))
                       (Pattern_binding (Var_name R)))))
                  (Pattern_binding (Var_name Tail)))
                (Pattern_binding (Var_name Name))
                (Pattern_binding (Var_name Badnodes))
                (Pattern_binding (Var_name Replies))
                (Pattern_binding (Var_name Time))
                (Pattern_binding (Var_name TimerId))))
             (c_guard ())
             (c_rhs
               (Expr_recv
                 ((rcv_cases
                    (((c_lhs
                        ((Pattern_tuple
                           ((Pattern_match (Lit_atom (Atom 'DOWN')))
                             (Pattern_binding (Var_name R))
                             (Pattern_binding (Var_name _))
                             (Pattern_binding (Var_name _))
                             (Pattern_binding (Var_name _))))))
                       (c_guard ())
                       (c_rhs
                         (Expr_apply
                           ((fa_name (Expr_name (Atom_name (Atom rec_nodes))))
                             (fa_args
                               ((Expr_name (Var_name Tag))
                                 (Expr_name (Var_name Tail))
                                 (Expr_name (Var_name Name))
                                 (Expr_cons ((Expr_name (Var_name N)))
                                   (Expr_name (Var_name Badnodes)))
                                 (Expr_name (Var_name Replies))
                                 (Expr_name (Var_name Time))
                                 (Expr_name (Var_name TimerId))))))))
                      ((c_lhs
                         ((Pattern_tuple
                            ((Pattern_tuple
                               ((Pattern_binding (Var_name Tag))
                                 (Pattern_binding (Var_name N))))
                              (Pattern_binding (Var_name Reply))))))
                        (c_guard ())
                        (c_rhs
                          (Expr_comment (Comment "% Tag is bound !!!")
                            (Expr_comment
                              (Comment
                                " FIXME: ignored let bindings are not supported yet")
                              (Expr_let
                                ((lb_lhs (Pattern_binding (Var_name _)))
                                  (lb_rhs
                                    (Expr_apply
                                      ((fa_name
                                         (Expr_name
                                           (Qualified_name
                                             (n_mod (Atom_name (Atom erlang)))
                                             (n_name
                                               (Atom_name (Atom demonitor))))))
                                        (fa_args
                                          ((Expr_name (Var_name R))
                                            (Expr_list
                                              ((Expr_literal
                                                 (Lit_atom (Atom flush)))))))))))
                                (Expr_apply
                                  ((fa_name
                                     (Expr_name (Atom_name (Atom rec_nodes))))
                                    (fa_args
                                      ((Expr_name (Var_name Tag))
                                        (Expr_name (Var_name Tail))
                                        (Expr_name (Var_name Name))
                                        (Expr_name (Var_name Badnodes))
                                        (Expr_cons
                                          ((Expr_tuple
                                             ((Expr_name (Var_name N))
                                               (Expr_name (Var_name Reply)))))
                                          (Expr_name (Var_name Replies)))
                                        (Expr_name (Var_name Time))
                                        (Expr_name (Var_name TimerId)))))))))))
                      ((c_lhs
                         ((Pattern_tuple
                            ((Pattern_match (Lit_atom (Atom timeout)))
                              (Pattern_binding (Var_name TimerId))
                              (Pattern_binding (Var_name _))))))
                        (c_guard ())
                        (c_rhs
                          (Expr_comment
                            (Comment
                              " FIXME: ignored let bindings are not supported yet")
                            (Expr_let
                              ((lb_lhs (Pattern_binding (Var_name _)))
                                (lb_rhs
                                  (Expr_apply
                                    ((fa_name
                                       (Expr_name
                                         (Qualified_name
                                           (n_mod (Atom_name (Atom erlang)))
                                           (n_name
                                             (Atom_name (Atom demonitor))))))
                                      (fa_args
                                        ((Expr_name (Var_name R))
                                          (Expr_list
                                            ((Expr_literal
                                               (Lit_atom (Atom flush)))))))))))
                              (Expr_comment
                                (Comment
                                  "% Collect all replies that already have arrived")
                                (Expr_apply
                                  ((fa_name
                                     (Expr_name
                                       (Atom_name (Atom rec_nodes_rest))))
                                    (fa_args
                                      ((Expr_name (Var_name Tag))
                                        (Expr_name (Var_name Tail))
                                        (Expr_name (Var_name Name))
                                        (Expr_cons ((Expr_name (Var_name N)))
                                          (Expr_name (Var_name Badnodes)))
                                        (Expr_name (Var_name Replies)))))))))))))
                   (rcv_after ())))))
            ((c_lhs
               ((Pattern_binding (Var_name Tag))
                 (Pattern_cons ((Pattern_binding (Var_name N)))
                   (Pattern_binding (Var_name Tail)))
                 (Pattern_binding (Var_name Name))
                 (Pattern_binding (Var_name Badnodes))
                 (Pattern_binding (Var_name Replies))
                 (Pattern_binding (Var_name Time))
                 (Pattern_binding (Var_name TimerId))))
              (c_guard ())
              (c_rhs
                (Expr_comment (Comment "% R6 node")
                  (Expr_recv
                    ((rcv_cases
                       (((c_lhs
                           ((Pattern_tuple
                              ((Pattern_match (Lit_atom (Atom nodedown)))
                                (Pattern_binding (Var_name N))))))
                          (c_guard ())
                          (c_rhs
                            (Expr_comment
                              (Comment
                                " FIXME: ignored let bindings are not supported yet")
                              (Expr_let
                                ((lb_lhs (Pattern_binding (Var_name _)))
                                  (lb_rhs
                                    (Expr_apply
                                      ((fa_name
                                         (Expr_name
                                           (Atom_name (Atom monitor_node))))
                                        (fa_args
                                          ((Expr_name (Var_name N))
                                            (Expr_literal
                                              (Lit_atom (Atom false)))))))))
                                (Expr_apply
                                  ((fa_name
                                     (Expr_name (Atom_name (Atom rec_nodes))))
                                    (fa_args
                                      ((Expr_name (Var_name Tag))
                                        (Expr_name (Var_name Tail))
                                        (Expr_name (Var_name Name))
                                        (Expr_cons ((Expr_name (Var_name N)))
                                          (Expr_name (Var_name Badnodes)))
                                        (Expr_name (Var_name Replies))
                                        (Expr_literal (Lit_integer 2000))
                                        (Expr_name (Var_name TimerId))))))))))
                         ((c_lhs
                            ((Pattern_tuple
                               ((Pattern_tuple
                                  ((Pattern_binding (Var_name Tag))
                                    (Pattern_binding (Var_name N))))
                                 (Pattern_binding (Var_name Reply))))))
                           (c_guard ())
                           (c_rhs
                             (Expr_comment (Comment "% Tag is bound !!!")
                               (Expr_comment
                                 (Comment
                                   " FIXME: ignored let bindings are not supported yet")
                                 (Expr_let
                                   ((lb_lhs (Pattern_binding (Var_name _)))
                                     (lb_rhs
                                       (Expr_recv
                                         ((rcv_cases
                                            (((c_lhs
                                                ((Pattern_tuple
                                                   ((Pattern_match
                                                      (Lit_atom
                                                        (Atom nodedown)))
                                                     (Pattern_binding
                                                       (Var_name N))))))
                                               (c_guard ())
                                               (c_rhs
                                                 (Expr_literal
                                                   (Lit_atom (Atom ok)))))))
                                           (rcv_after
                                             (((c_lhs
                                                 ((Pattern_match
                                                    (Lit_integer 0))))
                                                (c_guard ())
                                                (c_rhs
                                                  (Expr_literal
                                                    (Lit_atom (Atom ok)))))))))))
                                   (Expr_let
                                     ((lb_lhs (Pattern_binding (Var_name _)))
                                       (lb_rhs
                                         (Expr_apply
                                           ((fa_name
                                              (Expr_name
                                                (Atom_name (Atom monitor_node))))
                                             (fa_args
                                               ((Expr_name (Var_name N))
                                                 (Expr_literal
                                                   (Lit_atom (Atom false)))))))))
                                     (Expr_apply
                                       ((fa_name
                                          (Expr_name
                                            (Atom_name (Atom rec_nodes))))
                                         (fa_args
                                           ((Expr_name (Var_name Tag))
                                             (Expr_name (Var_name Tail))
                                             (Expr_name (Var_name Name))
                                             (Expr_name (Var_name Badnodes))
                                             (Expr_cons
                                               ((Expr_tuple
                                                  ((Expr_name (Var_name N))
                                                    (Expr_name
                                                      (Var_name Reply)))))
                                               (Expr_name (Var_name Replies)))
                                             (Expr_literal (Lit_integer 2000))
                                             (Expr_name (Var_name TimerId))))))))))))
                         ((c_lhs
                            ((Pattern_tuple
                               ((Pattern_match (Lit_atom (Atom timeout)))
                                 (Pattern_binding (Var_name TimerId))
                                 (Pattern_binding (Var_name _))))))
                           (c_guard ())
                           (c_rhs
                             (Expr_let
                               ((lb_lhs (Pattern_binding (Var_name _)))
                                 (lb_rhs
                                   (Expr_recv
                                     ((rcv_cases
                                        (((c_lhs
                                            ((Pattern_tuple
                                               ((Pattern_match
                                                  (Lit_atom (Atom nodedown)))
                                                 (Pattern_binding (Var_name N))))))
                                           (c_guard ())
                                           (c_rhs
                                             (Expr_literal
                                               (Lit_atom (Atom ok)))))))
                                       (rcv_after
                                         (((c_lhs
                                             ((Pattern_match (Lit_integer 0))))
                                            (c_guard ())
                                            (c_rhs
                                              (Expr_literal
                                                (Lit_atom (Atom ok)))))))))))
                               (Expr_let
                                 ((lb_lhs (Pattern_binding (Var_name _)))
                                   (lb_rhs
                                     (Expr_apply
                                       ((fa_name
                                          (Expr_name
                                            (Atom_name (Atom monitor_node))))
                                         (fa_args
                                           ((Expr_name (Var_name N))
                                             (Expr_literal
                                               (Lit_atom (Atom false)))))))))
                                 (Expr_comment
                                   (Comment
                                     "% Collect all replies that already have arrived")
                                   (Expr_apply
                                     ((fa_name
                                        (Expr_name
                                          (Atom_name (Atom rec_nodes_rest))))
                                       (fa_args
                                         ((Expr_name (Var_name Tag))
                                           (Expr_name (Var_name Tail))
                                           (Expr_name (Var_name Name))
                                           (Expr_cons
                                             ((Expr_name (Var_name N)))
                                             (Expr_name (Var_name Badnodes)))
                                           (Expr_name (Var_name Replies)))))))))))))
                      (rcv_after
                        (((c_lhs ((Pattern_binding (Var_name Time))))
                           (c_guard ())
                           (c_rhs
                             (Expr_case
                               (Expr_apply
                                 ((fa_name
                                    (Expr_name
                                      (Qualified_name
                                        (n_mod (Atom_name (Atom rpc)))
                                        (n_name (Atom_name (Atom call))))))
                                   (fa_args
                                     ((Expr_name (Var_name N))
                                       (Expr_literal (Lit_atom (Atom erlang)))
                                       (Expr_literal (Lit_atom (Atom whereis)))
                                       (Expr_list
                                         ((Expr_name (Var_name Name))))))))
                               (((c_lhs ((Pattern_binding (Var_name Pid))))
                                  (c_guard
                                    (((Expr_apply
                                        ((fa_name
                                           (Expr_name
                                             (Atom_name (Atom is_pid))))
                                          (fa_args
                                            ((Expr_name (Var_name Pid)))))))))
                                  (c_rhs
                                    (Expr_comment
                                      (Comment " It exists try again.")
                                      (Expr_apply
                                        ((fa_name
                                           (Expr_name
                                             (Atom_name (Atom rec_nodes))))
                                          (fa_args
                                            ((Expr_name (Var_name Tag))
                                              (Expr_cons
                                                ((Expr_name (Var_name N)))
                                                (Expr_name (Var_name Tail)))
                                              (Expr_name (Var_name Name))
                                              (Expr_name (Var_name Badnodes))
                                              (Expr_name (Var_name Replies))
                                              (Expr_literal
                                                (Lit_atom (Atom infinity)))
                                              (Expr_name (Var_name TimerId)))))))))
                                 ((c_lhs ((Pattern_binding (Var_name _))))
                                   (c_guard ())
                                   (c_rhs
                                     (Expr_comment (Comment " badnode")
                                       (Expr_comment
                                         (Comment
                                           " FIXME: ignored let bindings are not supported yet")
                                         (Expr_let
                                           ((lb_lhs
                                              (Pattern_binding (Var_name _)))
                                             (lb_rhs
                                               (Expr_recv
                                                 ((rcv_cases
                                                    (((c_lhs
                                                        ((Pattern_tuple
                                                           ((Pattern_match
                                                              (Lit_atom
                                                                (Atom nodedown)))
                                                             (Pattern_binding
                                                               (Var_name N))))))
                                                       (c_guard ())
                                                       (c_rhs
                                                         (Expr_literal
                                                           (Lit_atom (Atom ok)))))))
                                                   (rcv_after
                                                     (((c_lhs
                                                         ((Pattern_match
                                                            (Lit_integer 0))))
                                                        (c_guard ())
                                                        (c_rhs
                                                          (Expr_literal
                                                            (Lit_atom
                                                              (Atom ok)))))))))))
                                           (Expr_let
                                             ((lb_lhs
                                                (Pattern_binding (Var_name _)))
                                               (lb_rhs
                                                 (Expr_apply
                                                   ((fa_name
                                                      (Expr_name
                                                        (Atom_name
                                                          (Atom monitor_node))))
                                                     (fa_args
                                                       ((Expr_name
                                                          (Var_name N))
                                                         (Expr_literal
                                                           (Lit_atom
                                                             (Atom false)))))))))
                                             (Expr_apply
                                               ((fa_name
                                                  (Expr_name
                                                    (Atom_name
                                                      (Atom rec_nodes))))
                                                 (fa_args
                                                   ((Expr_name (Var_name Tag))
                                                     (Expr_name
                                                       (Var_name Tail))
                                                     (Expr_name
                                                       (Var_name Name))
                                                     (Expr_cons
                                                       ((Expr_name
                                                          (Var_name N)))
                                                       (Expr_name
                                                         (Var_name Badnodes)))
                                                     (Expr_name
                                                       (Var_name Replies))
                                                     (Expr_literal
                                                       (Lit_integer 2000))
                                                     (Expr_name
                                                       (Var_name TimerId)))))))))))))))))))))))
            ((c_lhs
               ((Pattern_binding (Var_name _)) (Pattern_list ())
                 (Pattern_binding (Var_name _))
                 (Pattern_binding (Var_name Badnodes))
                 (Pattern_binding (Var_name Replies))
                 (Pattern_binding (Var_name _))
                 (Pattern_binding (Var_name TimerId))))
              (c_guard ())
              (c_rhs
                (Expr_comment
                  (Comment
                    " FIXME: ignored let bindings are not supported yet")
                  (Expr_let
                    ((lb_lhs (Pattern_binding (Var_name _)))
                      (lb_rhs
                        (Expr_case
                          (Expr_catch
                            (Expr_apply
                              ((fa_name
                                 (Expr_name
                                   (Qualified_name
                                     (n_mod (Atom_name (Atom erlang)))
                                     (n_name (Atom_name (Atom cancel_timer))))))
                                (fa_args ((Expr_name (Var_name TimerId)))))))
                          (((c_lhs ((Pattern_match (Lit_atom (Atom false)))))
                             (c_guard ())
                             (c_rhs
                               (Expr_comment
                                 (Comment " It has already sent it's message")
                                 (Expr_recv
                                   ((rcv_cases
                                      (((c_lhs
                                          ((Pattern_tuple
                                             ((Pattern_match
                                                (Lit_atom (Atom timeout)))
                                               (Pattern_binding
                                                 (Var_name TimerId))
                                               (Pattern_binding (Var_name _))))))
                                         (c_guard ())
                                         (c_rhs
                                           (Expr_literal (Lit_atom (Atom ok)))))))
                                     (rcv_after
                                       (((c_lhs
                                           ((Pattern_match (Lit_integer 0))))
                                          (c_guard ())
                                          (c_rhs
                                            (Expr_literal (Lit_atom (Atom ok))))))))))))
                            ((c_lhs ((Pattern_binding (Var_name _))))
                              (c_guard ())
                              (c_rhs
                                (Expr_comment
                                  (Comment
                                    " Timer was cancelled, or TimerId was 'undefined'")
                                  (Expr_literal (Lit_atom (Atom ok))))))))))
                    (Expr_tuple
                      ((Expr_name (Var_name Replies))
                        (Expr_name (Var_name Badnodes))))))))))
        (fd_spec ())))
    (Module_comment
      (Comment "% Collect all replies that already have arrived"))
    (Function_decl
      ((fd_name (Atom rec_nodes_rest)) (fd_arity 5)
        (fd_cases
          (((c_lhs
              ((Pattern_binding (Var_name Tag))
                (Pattern_cons
                  ((Pattern_tuple
                     ((Pattern_binding (Var_name N))
                       (Pattern_binding (Var_name R)))))
                  (Pattern_binding (Var_name Tail)))
                (Pattern_binding (Var_name Name))
                (Pattern_binding (Var_name Badnodes))
                (Pattern_binding (Var_name Replies))))
             (c_guard ())
             (c_rhs
               (Expr_recv
                 ((rcv_cases
                    (((c_lhs
                        ((Pattern_tuple
                           ((Pattern_match (Lit_atom (Atom 'DOWN')))
                             (Pattern_binding (Var_name R))
                             (Pattern_binding (Var_name _))
                             (Pattern_binding (Var_name _))
                             (Pattern_binding (Var_name _))))))
                       (c_guard ())
                       (c_rhs
                         (Expr_apply
                           ((fa_name
                              (Expr_name (Atom_name (Atom rec_nodes_rest))))
                             (fa_args
                               ((Expr_name (Var_name Tag))
                                 (Expr_name (Var_name Tail))
                                 (Expr_name (Var_name Name))
                                 (Expr_cons ((Expr_name (Var_name N)))
                                   (Expr_name (Var_name Badnodes)))
                                 (Expr_name (Var_name Replies))))))))
                      ((c_lhs
                         ((Pattern_tuple
                            ((Pattern_tuple
                               ((Pattern_binding (Var_name Tag))
                                 (Pattern_binding (Var_name N))))
                              (Pattern_binding (Var_name Reply))))))
                        (c_guard ())
                        (c_rhs
                          (Expr_comment (Comment "% Tag is bound !!!")
                            (Expr_comment
                              (Comment
                                " FIXME: ignored let bindings are not supported yet")
                              (Expr_let
                                ((lb_lhs (Pattern_binding (Var_name _)))
                                  (lb_rhs
                                    (Expr_apply
                                      ((fa_name
                                         (Expr_name
                                           (Qualified_name
                                             (n_mod (Atom_name (Atom erlang)))
                                             (n_name
                                               (Atom_name (Atom demonitor))))))
                                        (fa_args
                                          ((Expr_name (Var_name R))
                                            (Expr_list
                                              ((Expr_literal
                                                 (Lit_atom (Atom flush)))))))))))
                                (Expr_apply
                                  ((fa_name
                                     (Expr_name
                                       (Atom_name (Atom rec_nodes_rest))))
                                    (fa_args
                                      ((Expr_name (Var_name Tag))
                                        (Expr_name (Var_name Tail))
                                        (Expr_name (Var_name Name))
                                        (Expr_name (Var_name Badnodes))
                                        (Expr_cons
                                          ((Expr_tuple
                                             ((Expr_name (Var_name N))
                                               (Expr_name (Var_name Reply)))))
                                          (Expr_name (Var_name Replies))))))))))))))
                   (rcv_after
                     (((c_lhs ((Pattern_match (Lit_integer 0)))) (c_guard ())
                        (c_rhs
                          (Expr_comment
                            (Comment
                              " FIXME: ignored let bindings are not supported yet")
                            (Expr_let
                              ((lb_lhs (Pattern_binding (Var_name _)))
                                (lb_rhs
                                  (Expr_apply
                                    ((fa_name
                                       (Expr_name
                                         (Qualified_name
                                           (n_mod (Atom_name (Atom erlang)))
                                           (n_name
                                             (Atom_name (Atom demonitor))))))
                                      (fa_args
                                        ((Expr_name (Var_name R))
                                          (Expr_list
                                            ((Expr_literal
                                               (Lit_atom (Atom flush)))))))))))
                              (Expr_apply
                                ((fa_name
                                   (Expr_name
                                     (Atom_name (Atom rec_nodes_rest))))
                                  (fa_args
                                    ((Expr_name (Var_name Tag))
                                      (Expr_name (Var_name Tail))
                                      (Expr_name (Var_name Name))
                                      (Expr_cons ((Expr_name (Var_name N)))
                                        (Expr_name (Var_name Badnodes)))
                                      (Expr_name (Var_name Replies))))))))))))))))
            ((c_lhs
               ((Pattern_binding (Var_name Tag))
                 (Pattern_cons ((Pattern_binding (Var_name N)))
                   (Pattern_binding (Var_name Tail)))
                 (Pattern_binding (Var_name Name))
                 (Pattern_binding (Var_name Badnodes))
                 (Pattern_binding (Var_name Replies))))
              (c_guard ())
              (c_rhs
                (Expr_comment (Comment "% R6 node")
                  (Expr_recv
                    ((rcv_cases
                       (((c_lhs
                           ((Pattern_tuple
                              ((Pattern_match (Lit_atom (Atom nodedown)))
                                (Pattern_binding (Var_name N))))))
                          (c_guard ())
                          (c_rhs
                            (Expr_comment
                              (Comment
                                " FIXME: ignored let bindings are not supported yet")
                              (Expr_let
                                ((lb_lhs (Pattern_binding (Var_name _)))
                                  (lb_rhs
                                    (Expr_apply
                                      ((fa_name
                                         (Expr_name
                                           (Atom_name (Atom monitor_node))))
                                        (fa_args
                                          ((Expr_name (Var_name N))
                                            (Expr_literal
                                              (Lit_atom (Atom false)))))))))
                                (Expr_apply
                                  ((fa_name
                                     (Expr_name
                                       (Atom_name (Atom rec_nodes_rest))))
                                    (fa_args
                                      ((Expr_name (Var_name Tag))
                                        (Expr_name (Var_name Tail))
                                        (Expr_name (Var_name Name))
                                        (Expr_cons ((Expr_name (Var_name N)))
                                          (Expr_name (Var_name Badnodes)))
                                        (Expr_name (Var_name Replies))))))))))
                         ((c_lhs
                            ((Pattern_tuple
                               ((Pattern_tuple
                                  ((Pattern_binding (Var_name Tag))
                                    (Pattern_binding (Var_name N))))
                                 (Pattern_binding (Var_name Reply))))))
                           (c_guard ())
                           (c_rhs
                             (Expr_comment (Comment "% Tag is bound !!!")
                               (Expr_comment
                                 (Comment
                                   " FIXME: ignored let bindings are not supported yet")
                                 (Expr_let
                                   ((lb_lhs (Pattern_binding (Var_name _)))
                                     (lb_rhs
                                       (Expr_recv
                                         ((rcv_cases
                                            (((c_lhs
                                                ((Pattern_tuple
                                                   ((Pattern_match
                                                      (Lit_atom
                                                        (Atom nodedown)))
                                                     (Pattern_binding
                                                       (Var_name N))))))
                                               (c_guard ())
                                               (c_rhs
                                                 (Expr_literal
                                                   (Lit_atom (Atom ok)))))))
                                           (rcv_after
                                             (((c_lhs
                                                 ((Pattern_match
                                                    (Lit_integer 0))))
                                                (c_guard ())
                                                (c_rhs
                                                  (Expr_literal
                                                    (Lit_atom (Atom ok)))))))))))
                                   (Expr_let
                                     ((lb_lhs (Pattern_binding (Var_name _)))
                                       (lb_rhs
                                         (Expr_apply
                                           ((fa_name
                                              (Expr_name
                                                (Atom_name (Atom monitor_node))))
                                             (fa_args
                                               ((Expr_name (Var_name N))
                                                 (Expr_literal
                                                   (Lit_atom (Atom false)))))))))
                                     (Expr_apply
                                       ((fa_name
                                          (Expr_name
                                            (Atom_name (Atom rec_nodes_rest))))
                                         (fa_args
                                           ((Expr_name (Var_name Tag))
                                             (Expr_name (Var_name Tail))
                                             (Expr_name (Var_name Name))
                                             (Expr_name (Var_name Badnodes))
                                             (Expr_cons
                                               ((Expr_tuple
                                                  ((Expr_name (Var_name N))
                                                    (Expr_name
                                                      (Var_name Reply)))))
                                               (Expr_name (Var_name Replies)))))))))))))))
                      (rcv_after
                        (((c_lhs ((Pattern_match (Lit_integer 0))))
                           (c_guard ())
                           (c_rhs
                             (Expr_comment
                               (Comment
                                 " FIXME: ignored let bindings are not supported yet")
                               (Expr_let
                                 ((lb_lhs (Pattern_binding (Var_name _)))
                                   (lb_rhs
                                     (Expr_recv
                                       ((rcv_cases
                                          (((c_lhs
                                              ((Pattern_tuple
                                                 ((Pattern_match
                                                    (Lit_atom (Atom nodedown)))
                                                   (Pattern_binding
                                                     (Var_name N))))))
                                             (c_guard ())
                                             (c_rhs
                                               (Expr_literal
                                                 (Lit_atom (Atom ok)))))))
                                         (rcv_after
                                           (((c_lhs
                                               ((Pattern_match (Lit_integer 0))))
                                              (c_guard ())
                                              (c_rhs
                                                (Expr_literal
                                                  (Lit_atom (Atom ok)))))))))))
                                 (Expr_let
                                   ((lb_lhs (Pattern_binding (Var_name _)))
                                     (lb_rhs
                                       (Expr_apply
                                         ((fa_name
                                            (Expr_name
                                              (Atom_name (Atom monitor_node))))
                                           (fa_args
                                             ((Expr_name (Var_name N))
                                               (Expr_literal
                                                 (Lit_atom (Atom false)))))))))
                                   (Expr_apply
                                     ((fa_name
                                        (Expr_name
                                          (Atom_name (Atom rec_nodes_rest))))
                                       (fa_args
                                         ((Expr_name (Var_name Tag))
                                           (Expr_name (Var_name Tail))
                                           (Expr_name (Var_name Name))
                                           (Expr_cons
                                             ((Expr_name (Var_name N)))
                                             (Expr_name (Var_name Badnodes)))
                                           (Expr_name (Var_name Replies))))))))))))))))))
            ((c_lhs
               ((Pattern_binding (Var_name _Tag)) (Pattern_list ())
                 (Pattern_binding (Var_name _Name))
                 (Pattern_binding (Var_name Badnodes))
                 (Pattern_binding (Var_name Replies))))
              (c_guard ())
              (c_rhs
                (Expr_tuple
                  ((Expr_name (Var_name Replies))
                    (Expr_name (Var_name Badnodes))))))))
        (fd_spec ())))
    (Module_comment
      (Comment "%% ---------------------------------------------------"))
    (Module_comment (Comment "%% Monitor functions"))
    (Module_comment
      (Comment "%% ---------------------------------------------------"))
    (Function_decl
      ((fd_name (Atom start_monitor)) (fd_arity 2)
        (fd_cases
          (((c_lhs
              ((Pattern_binding (Var_name Node))
                (Pattern_binding (Var_name Name))))
             (c_guard
               (((Expr_apply
                   ((fa_name (Expr_name (Atom_name (Atom is_atom))))
                     (fa_args ((Expr_name (Var_name Node))))))
                  (Expr_apply
                    ((fa_name (Expr_name (Atom_name (Atom is_atom))))
                      (fa_args ((Expr_name (Var_name Name)))))))))
             (c_rhs
               (Expr_if
                 (((((Expr_apply
                       ((fa_name
                          (Expr_name
                            (Qualified_name (n_mod (Atom_name (Atom erlang)))
                              (n_name (Atom_name (Atom '=:='))))))
                         (fa_args
                           ((Expr_apply
                              ((fa_name (Expr_name (Atom_name (Atom node))))
                                (fa_args ())))
                             (Expr_literal (Lit_atom (Atom nonode@nohost)))))))
                      (Expr_apply
                        ((fa_name
                           (Expr_name
                             (Qualified_name (n_mod (Atom_name (Atom erlang)))
                               (n_name (Atom_name (Atom '=/='))))))
                          (fa_args
                            ((Expr_name (Var_name Node))
                              (Expr_literal (Lit_atom (Atom nonode@nohost)))))))))
                    (Expr_let
                      ((lb_lhs (Pattern_binding (Var_name Ref)))
                        (lb_rhs
                          (Expr_apply
                            ((fa_name (Expr_name (Atom_name (Atom make_ref))))
                              (fa_args ())))))
                      (Expr_comment
                        (Comment
                          " FIXME: ignored let bindings are not supported yet")
                        (Expr_let
                          ((lb_lhs (Pattern_binding (Var_name _)))
                            (lb_rhs
                              (Expr_apply
                                ((fa_name
                                   (Expr_name
                                     (Qualified_name
                                       (n_mod (Atom_name (Atom erlang)))
                                       (n_name (Atom_name (Atom send))))))
                                  (fa_args
                                    ((Expr_apply
                                       ((fa_name
                                          (Expr_name (Atom_name (Atom self))))
                                         (fa_args ())))
                                      (Expr_tuple
                                        ((Expr_literal
                                           (Lit_atom (Atom 'DOWN')))
                                          (Expr_name (Var_name Ref))
                                          (Expr_literal
                                            (Lit_atom (Atom process)))
                                          (Expr_tuple
                                            ((Expr_name (Var_name Name))
                                              (Expr_name (Var_name Node))))
                                          (Expr_literal
                                            (Lit_atom (Atom noconnection)))))))))))
                          (Expr_tuple
                            ((Expr_name (Var_name Node))
                              (Expr_name (Var_name Ref))))))))
                   ((((Expr_literal (Lit_atom (Atom true)))))
                     (Expr_case
                       (Expr_catch
                         (Expr_apply
                           ((fa_name
                              (Expr_name
                                (Qualified_name
                                  (n_mod (Atom_name (Atom erlang)))
                                  (n_name (Atom_name (Atom monitor))))))
                             (fa_args
                               ((Expr_literal (Lit_atom (Atom process)))
                                 (Expr_tuple
                                   ((Expr_name (Var_name Name))
                                     (Expr_name (Var_name Node)))))))))
                       (((c_lhs
                           ((Pattern_tuple
                              ((Pattern_match (Lit_atom (Atom 'EXIT')))
                                (Pattern_binding (Var_name _))))))
                          (c_guard ())
                          (c_rhs
                            (Expr_comment (Comment "% Remote node is R6")
                              (Expr_comment
                                (Comment
                                  " FIXME: ignored let bindings are not supported yet")
                                (Expr_let
                                  ((lb_lhs (Pattern_binding (Var_name _)))
                                    (lb_rhs
                                      (Expr_apply
                                        ((fa_name
                                           (Expr_name
                                             (Atom_name (Atom monitor_node))))
                                          (fa_args
                                            ((Expr_name (Var_name Node))
                                              (Expr_literal
                                                (Lit_atom (Atom true)))))))))
                                  (Expr_name (Var_name Node)))))))
                         ((c_lhs ((Pattern_binding (Var_name Ref))))
                           (c_guard
                             (((Expr_apply
                                 ((fa_name
                                    (Expr_name (Atom_name (Atom is_reference))))
                                   (fa_args ((Expr_name (Var_name Ref)))))))))
                           (c_rhs
                             (Expr_tuple
                               ((Expr_name (Var_name Node))
                                 (Expr_name (Var_name Ref)))))))))))))))
        (fd_spec ())))
    (Module_comment
      (Comment "% ---------------------------------------------------"))
    (Module_comment (Comment "% Helper functions for try-catch of callbacks."))
    (Module_comment (Comment "% Returns the return value of the callback, or"))
    (Module_comment
      (Comment "% {'EXIT', Class, Reason, Stack} (if an exception occurs)"))
    (Module_comment (Comment %))
    (Module_comment
      (Comment "% The Class, Reason and Stack are given to erlang:raise/3"))
    (Module_comment
      (Comment "% to make sure proc_lib receives the proper reasons and"))
    (Module_comment (Comment "% stacktraces."))
    (Module_comment
      (Comment "% ---------------------------------------------------"))
    (Function_decl
      ((fd_name (Atom try_dispatch)) (fd_arity 3)
        (fd_cases
          (((c_lhs
              ((Pattern_tuple
                 ((Pattern_match (Lit_atom (Atom '$gen_cast')))
                   (Pattern_binding (Var_name Msg))))
                (Pattern_binding (Var_name Mod))
                (Pattern_binding (Var_name State))))
             (c_guard ())
             (c_rhs
               (Expr_apply
                 ((fa_name (Expr_name (Atom_name (Atom try_dispatch))))
                   (fa_args
                     ((Expr_name (Var_name Mod))
                       (Expr_literal (Lit_atom (Atom handle_cast)))
                       (Expr_name (Var_name Msg)) (Expr_name (Var_name State))))))))
            ((c_lhs
               ((Pattern_binding (Var_name Info))
                 (Pattern_binding (Var_name Mod))
                 (Pattern_binding (Var_name State))))
              (c_guard ())
              (c_rhs
                (Expr_apply
                  ((fa_name (Expr_name (Atom_name (Atom try_dispatch))))
                    (fa_args
                      ((Expr_name (Var_name Mod))
                        (Expr_literal (Lit_atom (Atom handle_info)))
                        (Expr_name (Var_name Info))
                        (Expr_name (Var_name State))))))))))
        (fd_spec ())))
    (Function_decl
      ((fd_name (Atom try_dispatch)) (fd_arity 4)
        (fd_cases
          (((c_lhs
              ((Pattern_binding (Var_name Mod))
                (Pattern_binding (Var_name Func))
                (Pattern_binding (Var_name Msg))
                (Pattern_binding (Var_name State))))
             (c_guard ())
             (c_rhs
               (Expr_try
                 ((try_expr
                    (Expr_tuple
                      ((Expr_literal (Lit_atom (Atom ok)))
                        (Expr_apply
                          ((fa_name
                             (Expr_name
                               (Qualified_name (n_mod (Var_name Mod))
                                 (n_name (Var_name Func)))))
                            (fa_args
                              ((Expr_name (Var_name Msg))
                                (Expr_name (Var_name State)))))))))
                   (try_catch
                     ((((c_lhs
                          ((Pattern_catch ((Atom_name (Atom throw)))
                             (Pattern_binding (Var_name R)) ())))
                         (c_guard ())
                         (c_rhs
                           (Expr_tuple
                             ((Expr_literal (Lit_atom (Atom ok)))
                               (Expr_name (Var_name R))))))
                        ((c_lhs
                           ((Pattern_catch ((Var_name R))
                              (Pattern_binding (Var_name Stacktrace)) ())))
                          (c_guard
                            (((Expr_apply
                                ((fa_name
                                   (Expr_name
                                     (Qualified_name
                                       (n_mod (Atom_name (Atom erlang)))
                                       (n_name (Atom_name (Atom '=='))))))
                                  (fa_args
                                    ((Expr_name (Var_name Func))
                                      (Expr_literal
                                        (Lit_atom (Atom handle_info))))))))))
                          (c_rhs
                            (Expr_comment
                              (Comment
                                " FIXME: this form of pattern matching on")
                              (Expr_comment
                                (Comment
                                  " catch clauses is not supported yet:")
                                (Expr_comment (Comment "")
                                  (Expr_comment
                                    (Comment
                                      "   error:undef = R:Stacktrace when Func == handle_info ->")
                                    (Expr_case
                                      (Expr_apply
                                        ((fa_name
                                           (Expr_name
                                             (Qualified_name
                                               (n_mod
                                                 (Atom_name (Atom erlang)))
                                               (n_name
                                                 (Atom_name
                                                   (Atom function_exported))))))
                                          (fa_args
                                            ((Expr_name (Var_name Mod))
                                              (Expr_literal
                                                (Lit_atom (Atom handle_info)))
                                              (Expr_literal (Lit_integer 2))))))
                                      (((c_lhs
                                          ((Pattern_match
                                             (Lit_atom (Atom false)))))
                                         (c_guard ())
                                         (c_rhs
                                           (Expr_comment
                                             (Comment
                                               " FIXME: ignored let bindings are not supported yet")
                                             (Expr_let
                                               ((lb_lhs
                                                  (Pattern_binding
                                                    (Var_name _)))
                                                 (lb_rhs
                                                   (Expr_apply
                                                     ((fa_name
                                                        (Expr_macro
                                                          ?LOG_WARNING))
                                                       (fa_args
                                                         ((Expr_map
                                                            (((mf_name
                                                                (Expr_literal
                                                                  (Lit_atom
                                                                    (Atom
                                                                      label))))
                                                               (mf_value
                                                                 (Expr_tuple
                                                                   ((Expr_literal
                                                                      (Lit_atom
                                                                      (Atom
                                                                      gen_server)))
                                                                     (Expr_literal
                                                                      (Lit_atom
                                                                      (Atom
                                                                      no_handle_info)))))))
                                                              ((mf_name
                                                                 (Expr_literal
                                                                   (Lit_atom
                                                                     (Atom
                                                                      module))))
                                                                (mf_value
                                                                  (Expr_name
                                                                    (Var_name
                                                                      Mod))))
                                                              ((mf_name
                                                                 (Expr_literal
                                                                   (Lit_atom
                                                                     (Atom
                                                                      message))))
                                                                (mf_value
                                                                  (Expr_name
                                                                    (Var_name
                                                                      Msg))))))
                                                           (Expr_map
                                                             (((mf_name
                                                                 (Expr_literal
                                                                   (Lit_atom
                                                                     (Atom
                                                                      domain))))
                                                                (mf_value
                                                                  (Expr_list
                                                                    ((Expr_literal
                                                                      (Lit_atom
                                                                      (Atom
                                                                      otp)))))))
                                                               ((mf_name
                                                                  (Expr_literal
                                                                    (Lit_atom
                                                                      (Atom
                                                                      report_cb))))
                                                                 (mf_value
                                                                   (Expr_fun_ref
                                                                     (fref_name
                                                                      (Qualified_name
                                                                      (n_mod
                                                                      (Atom_name
                                                                      (Atom
                                                                      gen_server)))
                                                                      (n_name
                                                                      (Atom_name
                                                                      (Atom
                                                                      format_log)))))
                                                                     (fref_arity
                                                                      2))))
                                                               ((mf_name
                                                                  (Expr_literal
                                                                    (Lit_atom
                                                                      (Atom
                                                                      error_logger))))
                                                                 (mf_value
                                                                   (Expr_map
                                                                     (((mf_name
                                                                      (Expr_literal
                                                                      (Lit_atom
                                                                      (Atom
                                                                      tag))))
                                                                      (mf_value
                                                                      (Expr_literal
                                                                      (Lit_atom
                                                                      (Atom
                                                                      warning_msg)))))
                                                                      ((mf_name
                                                                      (Expr_literal
                                                                      (Lit_atom
                                                                      (Atom
                                                                      report_cb))))
                                                                      (mf_value
                                                                      (Expr_fun_ref
                                                                      (fref_name
                                                                      (Qualified_name
                                                                      (n_mod
                                                                      (Atom_name
                                                                      (Atom
                                                                      gen_server)))
                                                                      (n_name
                                                                      (Atom_name
                                                                      (Atom
                                                                      format_log)))))
                                                                      (fref_arity
                                                                      1))))))))))))))))
                                               (Expr_tuple
                                                 ((Expr_literal
                                                    (Lit_atom (Atom ok)))
                                                   (Expr_tuple
                                                     ((Expr_literal
                                                        (Lit_atom
                                                          (Atom noreply)))
                                                       (Expr_name
                                                         (Var_name State))))))))))
                                        ((c_lhs
                                           ((Pattern_match
                                              (Lit_atom (Atom true)))))
                                          (c_guard ())
                                          (c_rhs
                                            (Expr_tuple
                                              ((Expr_literal
                                                 (Lit_atom (Atom 'EXIT')))
                                                (Expr_literal
                                                  (Lit_atom (Atom error)))
                                                (Expr_name (Var_name R))
                                                (Expr_name
                                                  (Var_name Stacktrace))))))))))))))
                        ((c_lhs
                           ((Pattern_catch ((Var_name Class))
                              (Pattern_binding (Var_name R))
                              ((Var_name Stacktrace)))))
                          (c_guard ())
                          (c_rhs
                            (Expr_tuple
                              ((Expr_literal (Lit_atom (Atom 'EXIT')))
                                (Expr_name (Var_name Class))
                                (Expr_name (Var_name R))
                                (Expr_name (Var_name Stacktrace)))))))))
                   (try_after ())))))))
        (fd_spec ())))
    (Function_decl
      ((fd_name (Atom try_handle_call)) (fd_arity 4)
        (fd_cases
          (((c_lhs
              ((Pattern_binding (Var_name Mod))
                (Pattern_binding (Var_name Msg))
                (Pattern_binding (Var_name From))
                (Pattern_binding (Var_name State))))
             (c_guard ())
             (c_rhs
               (Expr_try
                 ((try_expr
                    (Expr_tuple
                      ((Expr_literal (Lit_atom (Atom ok)))
                        (Expr_apply
                          ((fa_name
                             (Expr_name
                               (Qualified_name (n_mod (Var_name Mod))
                                 (n_name (Atom_name (Atom handle_call))))))
                            (fa_args
                              ((Expr_name (Var_name Msg))
                                (Expr_name (Var_name From))
                                (Expr_name (Var_name State)))))))))
                   (try_catch
                     ((((c_lhs
                          ((Pattern_catch ((Atom_name (Atom throw)))
                             (Pattern_binding (Var_name R)) ())))
                         (c_guard ())
                         (c_rhs
                           (Expr_tuple
                             ((Expr_literal (Lit_atom (Atom ok)))
                               (Expr_name (Var_name R))))))
                        ((c_lhs
                           ((Pattern_catch ((Var_name Class))
                              (Pattern_binding (Var_name R))
                              ((Var_name Stacktrace)))))
                          (c_guard ())
                          (c_rhs
                            (Expr_tuple
                              ((Expr_literal (Lit_atom (Atom 'EXIT')))
                                (Expr_name (Var_name Class))
                                (Expr_name (Var_name R))
                                (Expr_name (Var_name Stacktrace)))))))))
                   (try_after ())))))))
        (fd_spec ())))
    (Function_decl
      ((fd_name (Atom try_terminate)) (fd_arity 3)
        (fd_cases
          (((c_lhs
              ((Pattern_binding (Var_name Mod))
                (Pattern_binding (Var_name Reason))
                (Pattern_binding (Var_name State))))
             (c_guard ())
             (c_rhs
               (Expr_case
                 (Expr_apply
                   ((fa_name
                      (Expr_name
                        (Qualified_name (n_mod (Atom_name (Atom erlang)))
                          (n_name (Atom_name (Atom function_exported))))))
                     (fa_args
                       ((Expr_name (Var_name Mod))
                         (Expr_literal (Lit_atom (Atom terminate)))
                         (Expr_literal (Lit_integer 2))))))
                 (((c_lhs ((Pattern_match (Lit_atom (Atom true)))))
                    (c_guard ())
                    (c_rhs
                      (Expr_try
                        ((try_expr
                           (Expr_tuple
                             ((Expr_literal (Lit_atom (Atom ok)))
                               (Expr_apply
                                 ((fa_name
                                    (Expr_name
                                      (Qualified_name (n_mod (Var_name Mod))
                                        (n_name (Atom_name (Atom terminate))))))
                                   (fa_args
                                     ((Expr_name (Var_name Reason))
                                       (Expr_name (Var_name State)))))))))
                          (try_catch
                            ((((c_lhs
                                 ((Pattern_catch ((Atom_name (Atom throw)))
                                    (Pattern_binding (Var_name R)) ())))
                                (c_guard ())
                                (c_rhs
                                  (Expr_tuple
                                    ((Expr_literal (Lit_atom (Atom ok)))
                                      (Expr_name (Var_name R))))))
                               ((c_lhs
                                  ((Pattern_catch ((Var_name Class))
                                     (Pattern_binding (Var_name R))
                                     ((Var_name Stacktrace)))))
                                 (c_guard ())
                                 (c_rhs
                                   (Expr_tuple
                                     ((Expr_literal (Lit_atom (Atom 'EXIT')))
                                       (Expr_name (Var_name Class))
                                       (Expr_name (Var_name R))
                                       (Expr_name (Var_name Stacktrace)))))))))
                          (try_after ())))))
                   ((c_lhs ((Pattern_match (Lit_atom (Atom false)))))
                     (c_guard ())
                     (c_rhs
                       (Expr_tuple
                         ((Expr_literal (Lit_atom (Atom ok)))
                           (Expr_literal (Lit_atom (Atom ok)))))))))))))
        (fd_spec ())))
    (Module_comment
      (Comment "%% ---------------------------------------------------"))
    (Module_comment (Comment "%% Message handling functions"))
    (Module_comment
      (Comment "%% ---------------------------------------------------"))
    (Function_decl
      ((fd_name (Atom handle_msg)) (fd_arity 6)
        (fd_cases
          (((c_lhs
              ((Pattern_tuple
                 ((Pattern_match (Lit_atom (Atom '$gen_call')))
                   (Pattern_binding (Var_name From))
                   (Pattern_binding (Var_name Msg))))
                (Pattern_binding (Var_name Parent))
                (Pattern_binding (Var_name Name))
                (Pattern_binding (Var_name State))
                (Pattern_binding (Var_name Mod))
                (Pattern_binding (Var_name HibernateAfterTimeout))))
             (c_guard ())
             (c_rhs
               (Expr_let
                 ((lb_lhs (Pattern_binding (Var_name Result)))
                   (lb_rhs
                     (Expr_apply
                       ((fa_name
                          (Expr_name (Atom_name (Atom try_handle_call))))
                         (fa_args
                           ((Expr_name (Var_name Mod))
                             (Expr_name (Var_name Msg))
                             (Expr_name (Var_name From))
                             (Expr_name (Var_name State))))))))
                 (Expr_case (Expr_name (Var_name Result))
                   (((c_lhs
                       ((Pattern_tuple
                          ((Pattern_match (Lit_atom (Atom ok)))
                            (Pattern_tuple
                              ((Pattern_match (Lit_atom (Atom reply)))
                                (Pattern_binding (Var_name Reply))
                                (Pattern_binding (Var_name NState))))))))
                      (c_guard ())
                      (c_rhs
                        (Expr_comment
                          (Comment
                            " FIXME: ignored let bindings are not supported yet")
                          (Expr_let
                            ((lb_lhs (Pattern_binding (Var_name _)))
                              (lb_rhs
                                (Expr_apply
                                  ((fa_name
                                     (Expr_name (Atom_name (Atom reply))))
                                    (fa_args
                                      ((Expr_name (Var_name From))
                                        (Expr_name (Var_name Reply))))))))
                            (Expr_apply
                              ((fa_name (Expr_name (Atom_name (Atom loop))))
                                (fa_args
                                  ((Expr_name (Var_name Parent))
                                    (Expr_name (Var_name Name))
                                    (Expr_name (Var_name NState))
                                    (Expr_name (Var_name Mod))
                                    (Expr_literal (Lit_atom (Atom infinity)))
                                    (Expr_name
                                      (Var_name HibernateAfterTimeout))
                                    (Expr_list ())))))))))
                     ((c_lhs
                        ((Pattern_tuple
                           ((Pattern_match (Lit_atom (Atom ok)))
                             (Pattern_tuple
                               ((Pattern_match (Lit_atom (Atom reply)))
                                 (Pattern_binding (Var_name Reply))
                                 (Pattern_binding (Var_name NState))
                                 (Pattern_binding (Var_name Time1))))))))
                       (c_guard ())
                       (c_rhs
                         (Expr_comment
                           (Comment
                             " FIXME: ignored let bindings are not supported yet")
                           (Expr_let
                             ((lb_lhs (Pattern_binding (Var_name _)))
                               (lb_rhs
                                 (Expr_apply
                                   ((fa_name
                                      (Expr_name (Atom_name (Atom reply))))
                                     (fa_args
                                       ((Expr_name (Var_name From))
                                         (Expr_name (Var_name Reply))))))))
                             (Expr_apply
                               ((fa_name (Expr_name (Atom_name (Atom loop))))
                                 (fa_args
                                   ((Expr_name (Var_name Parent))
                                     (Expr_name (Var_name Name))
                                     (Expr_name (Var_name NState))
                                     (Expr_name (Var_name Mod))
                                     (Expr_name (Var_name Time1))
                                     (Expr_name
                                       (Var_name HibernateAfterTimeout))
                                     (Expr_list ())))))))))
                     ((c_lhs
                        ((Pattern_tuple
                           ((Pattern_match (Lit_atom (Atom ok)))
                             (Pattern_tuple
                               ((Pattern_match (Lit_atom (Atom noreply)))
                                 (Pattern_binding (Var_name NState))))))))
                       (c_guard ())
                       (c_rhs
                         (Expr_apply
                           ((fa_name (Expr_name (Atom_name (Atom loop))))
                             (fa_args
                               ((Expr_name (Var_name Parent))
                                 (Expr_name (Var_name Name))
                                 (Expr_name (Var_name NState))
                                 (Expr_name (Var_name Mod))
                                 (Expr_literal (Lit_atom (Atom infinity)))
                                 (Expr_name (Var_name HibernateAfterTimeout))
                                 (Expr_list ())))))))
                     ((c_lhs
                        ((Pattern_tuple
                           ((Pattern_match (Lit_atom (Atom ok)))
                             (Pattern_tuple
                               ((Pattern_match (Lit_atom (Atom noreply)))
                                 (Pattern_binding (Var_name NState))
                                 (Pattern_binding (Var_name Time1))))))))
                       (c_guard ())
                       (c_rhs
                         (Expr_apply
                           ((fa_name (Expr_name (Atom_name (Atom loop))))
                             (fa_args
                               ((Expr_name (Var_name Parent))
                                 (Expr_name (Var_name Name))
                                 (Expr_name (Var_name NState))
                                 (Expr_name (Var_name Mod))
                                 (Expr_name (Var_name Time1))
                                 (Expr_name (Var_name HibernateAfterTimeout))
                                 (Expr_list ())))))))
                     ((c_lhs
                        ((Pattern_tuple
                           ((Pattern_match (Lit_atom (Atom ok)))
                             (Pattern_tuple
                               ((Pattern_match (Lit_atom (Atom stop)))
                                 (Pattern_binding (Var_name Reason))
                                 (Pattern_binding (Var_name Reply))
                                 (Pattern_binding (Var_name NState))))))))
                       (c_guard ())
                       (c_rhs
                         (Expr_try
                           ((try_expr
                              (Expr_apply
                                ((fa_name
                                   (Expr_name (Atom_name (Atom terminate))))
                                  (fa_args
                                    ((Expr_name (Var_name Reason))
                                      (Expr_apply
                                        ((fa_name (Expr_macro ?STACKTRACE))
                                          (fa_args ())))
                                      (Expr_name (Var_name Name))
                                      (Expr_name (Var_name From))
                                      (Expr_name (Var_name Msg))
                                      (Expr_name (Var_name Mod))
                                      (Expr_name (Var_name NState))
                                      (Expr_list ()))))))
                             (try_catch ())
                             (try_after
                               ((Expr_apply
                                  ((fa_name
                                     (Expr_name (Atom_name (Atom reply))))
                                    (fa_args
                                      ((Expr_name (Var_name From))
                                        (Expr_name (Var_name Reply))))))))))))
                     ((c_lhs ((Pattern_binding (Var_name Other)))) (c_guard ())
                       (c_rhs
                         (Expr_apply
                           ((fa_name
                              (Expr_name
                                (Atom_name (Atom handle_common_reply))))
                             (fa_args
                               ((Expr_name (Var_name Other))
                                 (Expr_name (Var_name Parent))
                                 (Expr_name (Var_name Name))
                                 (Expr_name (Var_name From))
                                 (Expr_name (Var_name Msg))
                                 (Expr_name (Var_name Mod))
                                 (Expr_name (Var_name HibernateAfterTimeout))
                                 (Expr_name (Var_name State)))))))))))))
            ((c_lhs
               ((Pattern_binding (Var_name Msg))
                 (Pattern_binding (Var_name Parent))
                 (Pattern_binding (Var_name Name))
                 (Pattern_binding (Var_name State))
                 (Pattern_binding (Var_name Mod))
                 (Pattern_binding (Var_name HibernateAfterTimeout))))
              (c_guard ())
              (c_rhs
                (Expr_let
                  ((lb_lhs (Pattern_binding (Var_name Reply)))
                    (lb_rhs
                      (Expr_apply
                        ((fa_name (Expr_name (Atom_name (Atom try_dispatch))))
                          (fa_args
                            ((Expr_name (Var_name Msg))
                              (Expr_name (Var_name Mod))
                              (Expr_name (Var_name State))))))))
                  (Expr_apply
                    ((fa_name
                       (Expr_name (Atom_name (Atom handle_common_reply))))
                      (fa_args
                        ((Expr_name (Var_name Reply))
                          (Expr_name (Var_name Parent))
                          (Expr_name (Var_name Name))
                          (Expr_literal (Lit_atom (Atom undefined)))
                          (Expr_name (Var_name Msg)) (Expr_name (Var_name Mod))
                          (Expr_name (Var_name HibernateAfterTimeout))
                          (Expr_name (Var_name State)))))))))))
        (fd_spec ())))
    (Function_decl
      ((fd_name (Atom handle_msg)) (fd_arity 7)
        (fd_cases
          (((c_lhs
              ((Pattern_tuple
                 ((Pattern_match (Lit_atom (Atom '$gen_call')))
                   (Pattern_binding (Var_name From))
                   (Pattern_binding (Var_name Msg))))
                (Pattern_binding (Var_name Parent))
                (Pattern_binding (Var_name Name))
                (Pattern_binding (Var_name State))
                (Pattern_binding (Var_name Mod))
                (Pattern_binding (Var_name HibernateAfterTimeout))
                (Pattern_binding (Var_name Debug))))
             (c_guard ())
             (c_rhs
               (Expr_let
                 ((lb_lhs (Pattern_binding (Var_name Result)))
                   (lb_rhs
                     (Expr_apply
                       ((fa_name
                          (Expr_name (Atom_name (Atom try_handle_call))))
                         (fa_args
                           ((Expr_name (Var_name Mod))
                             (Expr_name (Var_name Msg))
                             (Expr_name (Var_name From))
                             (Expr_name (Var_name State))))))))
                 (Expr_case (Expr_name (Var_name Result))
                   (((c_lhs
                       ((Pattern_tuple
                          ((Pattern_match (Lit_atom (Atom ok)))
                            (Pattern_tuple
                              ((Pattern_match (Lit_atom (Atom reply)))
                                (Pattern_binding (Var_name Reply))
                                (Pattern_binding (Var_name NState))))))))
                      (c_guard ())
                      (c_rhs
                        (Expr_let
                          ((lb_lhs (Pattern_binding (Var_name Debug1)))
                            (lb_rhs
                              (Expr_apply
                                ((fa_name (Expr_name (Atom_name (Atom reply))))
                                  (fa_args
                                    ((Expr_name (Var_name Name))
                                      (Expr_name (Var_name From))
                                      (Expr_name (Var_name Reply))
                                      (Expr_name (Var_name NState))
                                      (Expr_name (Var_name Debug))))))))
                          (Expr_apply
                            ((fa_name (Expr_name (Atom_name (Atom loop))))
                              (fa_args
                                ((Expr_name (Var_name Parent))
                                  (Expr_name (Var_name Name))
                                  (Expr_name (Var_name NState))
                                  (Expr_name (Var_name Mod))
                                  (Expr_literal (Lit_atom (Atom infinity)))
                                  (Expr_name (Var_name HibernateAfterTimeout))
                                  (Expr_name (Var_name Debug1)))))))))
                     ((c_lhs
                        ((Pattern_tuple
                           ((Pattern_match (Lit_atom (Atom ok)))
                             (Pattern_tuple
                               ((Pattern_match (Lit_atom (Atom reply)))
                                 (Pattern_binding (Var_name Reply))
                                 (Pattern_binding (Var_name NState))
                                 (Pattern_binding (Var_name Time1))))))))
                       (c_guard ())
                       (c_rhs
                         (Expr_let
                           ((lb_lhs (Pattern_binding (Var_name Debug1)))
                             (lb_rhs
                               (Expr_apply
                                 ((fa_name
                                    (Expr_name (Atom_name (Atom reply))))
                                   (fa_args
                                     ((Expr_name (Var_name Name))
                                       (Expr_name (Var_name From))
                                       (Expr_name (Var_name Reply))
                                       (Expr_name (Var_name NState))
                                       (Expr_name (Var_name Debug))))))))
                           (Expr_apply
                             ((fa_name (Expr_name (Atom_name (Atom loop))))
                               (fa_args
                                 ((Expr_name (Var_name Parent))
                                   (Expr_name (Var_name Name))
                                   (Expr_name (Var_name NState))
                                   (Expr_name (Var_name Mod))
                                   (Expr_name (Var_name Time1))
                                   (Expr_name (Var_name HibernateAfterTimeout))
                                   (Expr_name (Var_name Debug1)))))))))
                     ((c_lhs
                        ((Pattern_tuple
                           ((Pattern_match (Lit_atom (Atom ok)))
                             (Pattern_tuple
                               ((Pattern_match (Lit_atom (Atom noreply)))
                                 (Pattern_binding (Var_name NState))))))))
                       (c_guard ())
                       (c_rhs
                         (Expr_let
                           ((lb_lhs (Pattern_binding (Var_name Debug1)))
                             (lb_rhs
                               (Expr_apply
                                 ((fa_name
                                    (Expr_name
                                      (Qualified_name
                                        (n_mod (Atom_name (Atom sys)))
                                        (n_name
                                          (Atom_name (Atom handle_debug))))))
                                   (fa_args
                                     ((Expr_name (Var_name Debug))
                                       (Expr_fun_ref
                                         (fref_name
                                           (Atom_name (Atom print_event)))
                                         (fref_arity 3))
                                       (Expr_name (Var_name Name))
                                       (Expr_tuple
                                         ((Expr_literal
                                            (Lit_atom (Atom noreply)))
                                           (Expr_name (Var_name NState))))))))))
                           (Expr_apply
                             ((fa_name (Expr_name (Atom_name (Atom loop))))
                               (fa_args
                                 ((Expr_name (Var_name Parent))
                                   (Expr_name (Var_name Name))
                                   (Expr_name (Var_name NState))
                                   (Expr_name (Var_name Mod))
                                   (Expr_literal (Lit_atom (Atom infinity)))
                                   (Expr_name (Var_name HibernateAfterTimeout))
                                   (Expr_name (Var_name Debug1)))))))))
                     ((c_lhs
                        ((Pattern_tuple
                           ((Pattern_match (Lit_atom (Atom ok)))
                             (Pattern_tuple
                               ((Pattern_match (Lit_atom (Atom noreply)))
                                 (Pattern_binding (Var_name NState))
                                 (Pattern_binding (Var_name Time1))))))))
                       (c_guard ())
                       (c_rhs
                         (Expr_let
                           ((lb_lhs (Pattern_binding (Var_name Debug1)))
                             (lb_rhs
                               (Expr_apply
                                 ((fa_name
                                    (Expr_name
                                      (Qualified_name
                                        (n_mod (Atom_name (Atom sys)))
                                        (n_name
                                          (Atom_name (Atom handle_debug))))))
                                   (fa_args
                                     ((Expr_name (Var_name Debug))
                                       (Expr_fun_ref
                                         (fref_name
                                           (Atom_name (Atom print_event)))
                                         (fref_arity 3))
                                       (Expr_name (Var_name Name))
                                       (Expr_tuple
                                         ((Expr_literal
                                            (Lit_atom (Atom noreply)))
                                           (Expr_name (Var_name NState))))))))))
                           (Expr_apply
                             ((fa_name (Expr_name (Atom_name (Atom loop))))
                               (fa_args
                                 ((Expr_name (Var_name Parent))
                                   (Expr_name (Var_name Name))
                                   (Expr_name (Var_name NState))
                                   (Expr_name (Var_name Mod))
                                   (Expr_name (Var_name Time1))
                                   (Expr_name (Var_name HibernateAfterTimeout))
                                   (Expr_name (Var_name Debug1)))))))))
                     ((c_lhs
                        ((Pattern_tuple
                           ((Pattern_match (Lit_atom (Atom ok)))
                             (Pattern_tuple
                               ((Pattern_match (Lit_atom (Atom stop)))
                                 (Pattern_binding (Var_name Reason))
                                 (Pattern_binding (Var_name Reply))
                                 (Pattern_binding (Var_name NState))))))))
                       (c_guard ())
                       (c_rhs
                         (Expr_try
                           ((try_expr
                              (Expr_apply
                                ((fa_name
                                   (Expr_name (Atom_name (Atom terminate))))
                                  (fa_args
                                    ((Expr_name (Var_name Reason))
                                      (Expr_apply
                                        ((fa_name (Expr_macro ?STACKTRACE))
                                          (fa_args ())))
                                      (Expr_name (Var_name Name))
                                      (Expr_name (Var_name From))
                                      (Expr_name (Var_name Msg))
                                      (Expr_name (Var_name Mod))
                                      (Expr_name (Var_name NState))
                                      (Expr_name (Var_name Debug)))))))
                             (try_catch ())
                             (try_after
                               ((Expr_let
                                  ((lb_lhs (Pattern_binding (Var_name _)))
                                    (lb_rhs
                                      (Expr_apply
                                        ((fa_name
                                           (Expr_name (Atom_name (Atom reply))))
                                          (fa_args
                                            ((Expr_name (Var_name Name))
                                              (Expr_name (Var_name From))
                                              (Expr_name (Var_name Reply))
                                              (Expr_name (Var_name NState))
                                              (Expr_name (Var_name Debug))))))))
                                  (Expr_name (Var_name _)))))))))
                     ((c_lhs ((Pattern_binding (Var_name Other)))) (c_guard ())
                       (c_rhs
                         (Expr_apply
                           ((fa_name
                              (Expr_name
                                (Atom_name (Atom handle_common_reply))))
                             (fa_args
                               ((Expr_name (Var_name Other))
                                 (Expr_name (Var_name Parent))
                                 (Expr_name (Var_name Name))
                                 (Expr_name (Var_name From))
                                 (Expr_name (Var_name Msg))
                                 (Expr_name (Var_name Mod))
                                 (Expr_name (Var_name HibernateAfterTimeout))
                                 (Expr_name (Var_name State))
                                 (Expr_name (Var_name Debug)))))))))))))
            ((c_lhs
               ((Pattern_binding (Var_name Msg))
                 (Pattern_binding (Var_name Parent))
                 (Pattern_binding (Var_name Name))
                 (Pattern_binding (Var_name State))
                 (Pattern_binding (Var_name Mod))
                 (Pattern_binding (Var_name HibernateAfterTimeout))
                 (Pattern_binding (Var_name Debug))))
              (c_guard ())
              (c_rhs
                (Expr_let
                  ((lb_lhs (Pattern_binding (Var_name Reply)))
                    (lb_rhs
                      (Expr_apply
                        ((fa_name (Expr_name (Atom_name (Atom try_dispatch))))
                          (fa_args
                            ((Expr_name (Var_name Msg))
                              (Expr_name (Var_name Mod))
                              (Expr_name (Var_name State))))))))
                  (Expr_apply
                    ((fa_name
                       (Expr_name (Atom_name (Atom handle_common_reply))))
                      (fa_args
                        ((Expr_name (Var_name Reply))
                          (Expr_name (Var_name Parent))
                          (Expr_name (Var_name Name))
                          (Expr_literal (Lit_atom (Atom undefined)))
                          (Expr_name (Var_name Msg)) (Expr_name (Var_name Mod))
                          (Expr_name (Var_name HibernateAfterTimeout))
                          (Expr_name (Var_name State))
                          (Expr_name (Var_name Debug)))))))))))
        (fd_spec ())))
    (Function_decl
      ((fd_name (Atom handle_common_reply)) (fd_arity 8)
        (fd_cases
          (((c_lhs
              ((Pattern_binding (Var_name Reply))
                (Pattern_binding (Var_name Parent))
                (Pattern_binding (Var_name Name))
                (Pattern_binding (Var_name From))
                (Pattern_binding (Var_name Msg))
                (Pattern_binding (Var_name Mod))
                (Pattern_binding (Var_name HibernateAfterTimeout))
                (Pattern_binding (Var_name State))))
             (c_guard ())
             (c_rhs
               (Expr_case (Expr_name (Var_name Reply))
                 (((c_lhs
                     ((Pattern_tuple
                        ((Pattern_match (Lit_atom (Atom ok)))
                          (Pattern_tuple
                            ((Pattern_match (Lit_atom (Atom noreply)))
                              (Pattern_binding (Var_name NState))))))))
                    (c_guard ())
                    (c_rhs
                      (Expr_apply
                        ((fa_name (Expr_name (Atom_name (Atom loop))))
                          (fa_args
                            ((Expr_name (Var_name Parent))
                              (Expr_name (Var_name Name))
                              (Expr_name (Var_name NState))
                              (Expr_name (Var_name Mod))
                              (Expr_literal (Lit_atom (Atom infinity)))
                              (Expr_name (Var_name HibernateAfterTimeout))
                              (Expr_list ())))))))
                   ((c_lhs
                      ((Pattern_tuple
                         ((Pattern_match (Lit_atom (Atom ok)))
                           (Pattern_tuple
                             ((Pattern_match (Lit_atom (Atom noreply)))
                               (Pattern_binding (Var_name NState))
                               (Pattern_binding (Var_name Time1))))))))
                     (c_guard ())
                     (c_rhs
                       (Expr_apply
                         ((fa_name (Expr_name (Atom_name (Atom loop))))
                           (fa_args
                             ((Expr_name (Var_name Parent))
                               (Expr_name (Var_name Name))
                               (Expr_name (Var_name NState))
                               (Expr_name (Var_name Mod))
                               (Expr_name (Var_name Time1))
                               (Expr_name (Var_name HibernateAfterTimeout))
                               (Expr_list ())))))))
                   ((c_lhs
                      ((Pattern_tuple
                         ((Pattern_match (Lit_atom (Atom ok)))
                           (Pattern_tuple
                             ((Pattern_match (Lit_atom (Atom stop)))
                               (Pattern_binding (Var_name Reason))
                               (Pattern_binding (Var_name NState))))))))
                     (c_guard ())
                     (c_rhs
                       (Expr_apply
                         ((fa_name (Expr_name (Atom_name (Atom terminate))))
                           (fa_args
                             ((Expr_name (Var_name Reason))
                               (Expr_apply
                                 ((fa_name (Expr_macro ?STACKTRACE))
                                   (fa_args ())))
                               (Expr_name (Var_name Name))
                               (Expr_name (Var_name From))
                               (Expr_name (Var_name Msg))
                               (Expr_name (Var_name Mod))
                               (Expr_name (Var_name NState)) (Expr_list ())))))))
                   ((c_lhs
                      ((Pattern_tuple
                         ((Pattern_match (Lit_atom (Atom 'EXIT')))
                           (Pattern_binding (Var_name Class))
                           (Pattern_binding (Var_name Reason))
                           (Pattern_binding (Var_name Stacktrace))))))
                     (c_guard ())
                     (c_rhs
                       (Expr_apply
                         ((fa_name (Expr_name (Atom_name (Atom terminate))))
                           (fa_args
                             ((Expr_name (Var_name Class))
                               (Expr_name (Var_name Reason))
                               (Expr_name (Var_name Stacktrace))
                               (Expr_name (Var_name Name))
                               (Expr_name (Var_name From))
                               (Expr_name (Var_name Msg))
                               (Expr_name (Var_name Mod))
                               (Expr_name (Var_name State)) (Expr_list ())))))))
                   ((c_lhs
                      ((Pattern_tuple
                         ((Pattern_match (Lit_atom (Atom ok)))
                           (Pattern_binding (Var_name BadReply))))))
                     (c_guard ())
                     (c_rhs
                       (Expr_apply
                         ((fa_name (Expr_name (Atom_name (Atom terminate))))
                           (fa_args
                             ((Expr_tuple
                                ((Expr_literal
                                   (Lit_atom (Atom bad_return_value)))
                                  (Expr_name (Var_name BadReply))))
                               (Expr_apply
                                 ((fa_name (Expr_macro ?STACKTRACE))
                                   (fa_args ())))
                               (Expr_name (Var_name Name))
                               (Expr_name (Var_name From))
                               (Expr_name (Var_name Msg))
                               (Expr_name (Var_name Mod))
                               (Expr_name (Var_name State)) (Expr_list ())))))))))))))
        (fd_spec ())))
    (Function_decl
      ((fd_name (Atom handle_common_reply)) (fd_arity 9)
        (fd_cases
          (((c_lhs
              ((Pattern_binding (Var_name Reply))
                (Pattern_binding (Var_name Parent))
                (Pattern_binding (Var_name Name))
                (Pattern_binding (Var_name From))
                (Pattern_binding (Var_name Msg))
                (Pattern_binding (Var_name Mod))
                (Pattern_binding (Var_name HibernateAfterTimeout))
                (Pattern_binding (Var_name State))
                (Pattern_binding (Var_name Debug))))
             (c_guard ())
             (c_rhs
               (Expr_case (Expr_name (Var_name Reply))
                 (((c_lhs
                     ((Pattern_tuple
                        ((Pattern_match (Lit_atom (Atom ok)))
                          (Pattern_tuple
                            ((Pattern_match (Lit_atom (Atom noreply)))
                              (Pattern_binding (Var_name NState))))))))
                    (c_guard ())
                    (c_rhs
                      (Expr_let
                        ((lb_lhs (Pattern_binding (Var_name Debug1)))
                          (lb_rhs
                            (Expr_apply
                              ((fa_name
                                 (Expr_name
                                   (Qualified_name
                                     (n_mod (Atom_name (Atom sys)))
                                     (n_name (Atom_name (Atom handle_debug))))))
                                (fa_args
                                  ((Expr_name (Var_name Debug))
                                    (Expr_fun_ref
                                      (fref_name
                                        (Atom_name (Atom print_event)))
                                      (fref_arity 3))
                                    (Expr_name (Var_name Name))
                                    (Expr_tuple
                                      ((Expr_literal (Lit_atom (Atom noreply)))
                                        (Expr_name (Var_name NState))))))))))
                        (Expr_apply
                          ((fa_name (Expr_name (Atom_name (Atom loop))))
                            (fa_args
                              ((Expr_name (Var_name Parent))
                                (Expr_name (Var_name Name))
                                (Expr_name (Var_name NState))
                                (Expr_name (Var_name Mod))
                                (Expr_literal (Lit_atom (Atom infinity)))
                                (Expr_name (Var_name HibernateAfterTimeout))
                                (Expr_name (Var_name Debug1)))))))))
                   ((c_lhs
                      ((Pattern_tuple
                         ((Pattern_match (Lit_atom (Atom ok)))
                           (Pattern_tuple
                             ((Pattern_match (Lit_atom (Atom noreply)))
                               (Pattern_binding (Var_name NState))
                               (Pattern_binding (Var_name Time1))))))))
                     (c_guard ())
                     (c_rhs
                       (Expr_let
                         ((lb_lhs (Pattern_binding (Var_name Debug1)))
                           (lb_rhs
                             (Expr_apply
                               ((fa_name
                                  (Expr_name
                                    (Qualified_name
                                      (n_mod (Atom_name (Atom sys)))
                                      (n_name (Atom_name (Atom handle_debug))))))
                                 (fa_args
                                   ((Expr_name (Var_name Debug))
                                     (Expr_fun_ref
                                       (fref_name
                                         (Atom_name (Atom print_event)))
                                       (fref_arity 3))
                                     (Expr_name (Var_name Name))
                                     (Expr_tuple
                                       ((Expr_literal
                                          (Lit_atom (Atom noreply)))
                                         (Expr_name (Var_name NState))))))))))
                         (Expr_apply
                           ((fa_name (Expr_name (Atom_name (Atom loop))))
                             (fa_args
                               ((Expr_name (Var_name Parent))
                                 (Expr_name (Var_name Name))
                                 (Expr_name (Var_name NState))
                                 (Expr_name (Var_name Mod))
                                 (Expr_name (Var_name Time1))
                                 (Expr_name (Var_name HibernateAfterTimeout))
                                 (Expr_name (Var_name Debug1)))))))))
                   ((c_lhs
                      ((Pattern_tuple
                         ((Pattern_match (Lit_atom (Atom ok)))
                           (Pattern_tuple
                             ((Pattern_match (Lit_atom (Atom stop)))
                               (Pattern_binding (Var_name Reason))
                               (Pattern_binding (Var_name NState))))))))
                     (c_guard ())
                     (c_rhs
                       (Expr_apply
                         ((fa_name (Expr_name (Atom_name (Atom terminate))))
                           (fa_args
                             ((Expr_name (Var_name Reason))
                               (Expr_apply
                                 ((fa_name (Expr_macro ?STACKTRACE))
                                   (fa_args ())))
                               (Expr_name (Var_name Name))
                               (Expr_name (Var_name From))
                               (Expr_name (Var_name Msg))
                               (Expr_name (Var_name Mod))
                               (Expr_name (Var_name NState))
                               (Expr_name (Var_name Debug))))))))
                   ((c_lhs
                      ((Pattern_tuple
                         ((Pattern_match (Lit_atom (Atom 'EXIT')))
                           (Pattern_binding (Var_name Class))
                           (Pattern_binding (Var_name Reason))
                           (Pattern_binding (Var_name Stacktrace))))))
                     (c_guard ())
                     (c_rhs
                       (Expr_apply
                         ((fa_name (Expr_name (Atom_name (Atom terminate))))
                           (fa_args
                             ((Expr_name (Var_name Class))
                               (Expr_name (Var_name Reason))
                               (Expr_name (Var_name Stacktrace))
                               (Expr_name (Var_name Name))
                               (Expr_name (Var_name From))
                               (Expr_name (Var_name Msg))
                               (Expr_name (Var_name Mod))
                               (Expr_name (Var_name State))
                               (Expr_name (Var_name Debug))))))))
                   ((c_lhs
                      ((Pattern_tuple
                         ((Pattern_match (Lit_atom (Atom ok)))
                           (Pattern_binding (Var_name BadReply))))))
                     (c_guard ())
                     (c_rhs
                       (Expr_apply
                         ((fa_name (Expr_name (Atom_name (Atom terminate))))
                           (fa_args
                             ((Expr_tuple
                                ((Expr_literal
                                   (Lit_atom (Atom bad_return_value)))
                                  (Expr_name (Var_name BadReply))))
                               (Expr_apply
                                 ((fa_name (Expr_macro ?STACKTRACE))
                                   (fa_args ())))
                               (Expr_name (Var_name Name))
                               (Expr_name (Var_name From))
                               (Expr_name (Var_name Msg))
                               (Expr_name (Var_name Mod))
                               (Expr_name (Var_name State))
                               (Expr_name (Var_name Debug))))))))))))))
        (fd_spec ())))
    (Function_decl
      ((fd_name (Atom reply)) (fd_arity 5)
        (fd_cases
          (((c_lhs
              ((Pattern_binding (Var_name Name))
                (Pattern_binding (Var_name From))
                (Pattern_binding (Var_name Reply))
                (Pattern_binding (Var_name State))
                (Pattern_binding (Var_name Debug))))
             (c_guard ())
             (c_rhs
               (Expr_comment
                 (Comment " FIXME: ignored let bindings are not supported yet")
                 (Expr_let
                   ((lb_lhs (Pattern_binding (Var_name _)))
                     (lb_rhs
                       (Expr_apply
                         ((fa_name (Expr_name (Atom_name (Atom reply))))
                           (fa_args
                             ((Expr_name (Var_name From))
                               (Expr_name (Var_name Reply))))))))
                   (Expr_apply
                     ((fa_name
                        (Expr_name
                          (Qualified_name (n_mod (Atom_name (Atom sys)))
                            (n_name (Atom_name (Atom handle_debug))))))
                       (fa_args
                         ((Expr_name (Var_name Debug))
                           (Expr_fun_ref
                             (fref_name (Atom_name (Atom print_event)))
                             (fref_arity 3))
                           (Expr_name (Var_name Name))
                           (Expr_tuple
                             ((Expr_literal (Lit_atom (Atom out)))
                               (Expr_name (Var_name Reply))
                               (Expr_name (Var_name From))
                               (Expr_name (Var_name State))))))))))))))
        (fd_spec ())))
    (Module_comment
      (Comment
        %-----------------------------------------------------------------))
    (Module_comment
      (Comment "% Callback functions for system messages handling."))
    (Module_comment
      (Comment
        %-----------------------------------------------------------------))
    (Function_decl
      ((fd_name (Atom system_continue)) (fd_arity 3)
        (fd_cases
          (((c_lhs
              ((Pattern_binding (Var_name Parent))
                (Pattern_binding (Var_name Debug))
                (Pattern_list
                  ((Pattern_binding (Var_name Name))
                    (Pattern_binding (Var_name State))
                    (Pattern_binding (Var_name Mod))
                    (Pattern_binding (Var_name Time))
                    (Pattern_binding (Var_name HibernateAfterTimeout))))))
             (c_guard ())
             (c_rhs
               (Expr_apply
                 ((fa_name (Expr_name (Atom_name (Atom loop))))
                   (fa_args
                     ((Expr_name (Var_name Parent)) (Expr_name (Var_name Name))
                       (Expr_name (Var_name State)) (Expr_name (Var_name Mod))
                       (Expr_name (Var_name Time))
                       (Expr_name (Var_name HibernateAfterTimeout))
                       (Expr_name (Var_name Debug))))))))))
        (fd_spec ())))
    (Type_decl
      ((typ_expr
         (Type_constr ((tc_name (Atom_name (Atom no_return))) (tc_args ()))))
        (typ_kind Spec) (typ_name (Atom system_terminate))
        (typ_params
          ((Type_variable (Var_name _)) (Type_variable (Var_name _))
            (Type_variable (Var_name _))
            (Type_list (Type_variable (Var_name _)))))))
    (Function_decl
      ((fd_name (Atom system_terminate)) (fd_arity 4)
        (fd_cases
          (((c_lhs
              ((Pattern_binding (Var_name Reason))
                (Pattern_binding (Var_name _Parent))
                (Pattern_binding (Var_name Debug))
                (Pattern_list
                  ((Pattern_binding (Var_name Name))
                    (Pattern_binding (Var_name State))
                    (Pattern_binding (Var_name Mod))
                    (Pattern_binding (Var_name _Time))
                    (Pattern_binding (Var_name _HibernateAfterTimeout))))))
             (c_guard ())
             (c_rhs
               (Expr_apply
                 ((fa_name (Expr_name (Atom_name (Atom terminate))))
                   (fa_args
                     ((Expr_name (Var_name Reason))
                       (Expr_apply
                         ((fa_name (Expr_macro ?STACKTRACE)) (fa_args ())))
                       (Expr_name (Var_name Name))
                       (Expr_literal (Lit_atom (Atom undefined)))
                       (Expr_list ()) (Expr_name (Var_name Mod))
                       (Expr_name (Var_name State))
                       (Expr_name (Var_name Debug))))))))))
        (fd_spec ())))
    (Function_decl
      ((fd_name (Atom system_code_change)) (fd_arity 4)
        (fd_cases
          (((c_lhs
              ((Pattern_list
                 ((Pattern_binding (Var_name Name))
                   (Pattern_binding (Var_name State))
                   (Pattern_binding (Var_name Mod))
                   (Pattern_binding (Var_name Time))
                   (Pattern_binding (Var_name HibernateAfterTimeout))))
                (Pattern_binding (Var_name _Module))
                (Pattern_binding (Var_name OldVsn))
                (Pattern_binding (Var_name Extra))))
             (c_guard ())
             (c_rhs
               (Expr_case
                 (Expr_catch
                   (Expr_apply
                     ((fa_name
                        (Expr_name
                          (Qualified_name (n_mod (Var_name Mod))
                            (n_name (Atom_name (Atom code_change))))))
                       (fa_args
                         ((Expr_name (Var_name OldVsn))
                           (Expr_name (Var_name State))
                           (Expr_name (Var_name Extra)))))))
                 (((c_lhs
                     ((Pattern_tuple
                        ((Pattern_match (Lit_atom (Atom ok)))
                          (Pattern_binding (Var_name NewState))))))
                    (c_guard ())
                    (c_rhs
                      (Expr_tuple
                        ((Expr_literal (Lit_atom (Atom ok)))
                          (Expr_list
                            ((Expr_name (Var_name Name))
                              (Expr_name (Var_name NewState))
                              (Expr_name (Var_name Mod))
                              (Expr_name (Var_name Time))
                              (Expr_name (Var_name HibernateAfterTimeout))))))))
                   ((c_lhs ((Pattern_binding (Var_name Else)))) (c_guard ())
                     (c_rhs (Expr_name (Var_name Else))))))))))
        (fd_spec ())))
    (Function_decl
      ((fd_name (Atom system_get_state)) (fd_arity 1)
        (fd_cases
          (((c_lhs
              ((Pattern_list
                 ((Pattern_binding (Var_name _Name))
                   (Pattern_binding (Var_name State))
                   (Pattern_binding (Var_name _Mod))
                   (Pattern_binding (Var_name _Time))
                   (Pattern_binding (Var_name _HibernateAfterTimeout))))))
             (c_guard ())
             (c_rhs
               (Expr_tuple
                 ((Expr_literal (Lit_atom (Atom ok)))
                   (Expr_name (Var_name State))))))))
        (fd_spec ())))
    (Function_decl
      ((fd_name (Atom system_replace_state)) (fd_arity 2)
        (fd_cases
          (((c_lhs
              ((Pattern_binding (Var_name StateFun))
                (Pattern_list
                  ((Pattern_binding (Var_name Name))
                    (Pattern_binding (Var_name State))
                    (Pattern_binding (Var_name Mod))
                    (Pattern_binding (Var_name Time))
                    (Pattern_binding (Var_name HibernateAfterTimeout))))))
             (c_guard ())
             (c_rhs
               (Expr_let
                 ((lb_lhs (Pattern_binding (Var_name NState)))
                   (lb_rhs
                     (Expr_apply
                       ((fa_name (Expr_name (Var_name StateFun)))
                         (fa_args ((Expr_name (Var_name State))))))))
                 (Expr_tuple
                   ((Expr_literal (Lit_atom (Atom ok)))
                     (Expr_name (Var_name NState))
                     (Expr_list
                       ((Expr_name (Var_name Name))
                         (Expr_name (Var_name NState))
                         (Expr_name (Var_name Mod)) (Expr_name (Var_name Time))
                         (Expr_name (Var_name HibernateAfterTimeout)))))))))))
        (fd_spec ())))
    (Module_comment
      (Comment
        %-----------------------------------------------------------------))
    (Module_comment
      (Comment
        "% Format debug messages.  Print them as the call-back module sees"))
    (Module_comment
      (Comment "% them, not as the real erlang messages.  Use trace for that."))
    (Module_comment
      (Comment
        %-----------------------------------------------------------------))
    (Function_decl
      ((fd_name (Atom print_event)) (fd_arity 3)
        (fd_cases
          (((c_lhs
              ((Pattern_binding (Var_name Dev))
                (Pattern_tuple
                  ((Pattern_match (Lit_atom (Atom in)))
                    (Pattern_binding (Var_name Msg))))
                (Pattern_binding (Var_name Name))))
             (c_guard ())
             (c_rhs
               (Expr_case (Expr_name (Var_name Msg))
                 (((c_lhs
                     ((Pattern_tuple
                        ((Pattern_match (Lit_atom (Atom '$gen_call')))
                          (Pattern_tuple
                            ((Pattern_binding (Var_name From))
                              (Pattern_binding (Var_name _Tag))))
                          (Pattern_binding (Var_name Call))))))
                    (c_guard ())
                    (c_rhs
                      (Expr_apply
                        ((fa_name
                           (Expr_name
                             (Qualified_name (n_mod (Atom_name (Atom io)))
                               (n_name (Atom_name (Atom format))))))
                          (fa_args
                            ((Expr_name (Var_name Dev))
                              (Expr_literal
                                (Lit_string
                                  "*DBG* ~tp got call ~tp from ~tw~n"))
                              (Expr_list
                                ((Expr_name (Var_name Name))
                                  (Expr_name (Var_name Call))
                                  (Expr_name (Var_name From))))))))))
                   ((c_lhs
                      ((Pattern_tuple
                         ((Pattern_match (Lit_atom (Atom '$gen_cast')))
                           (Pattern_binding (Var_name Cast))))))
                     (c_guard ())
                     (c_rhs
                       (Expr_apply
                         ((fa_name
                            (Expr_name
                              (Qualified_name (n_mod (Atom_name (Atom io)))
                                (n_name (Atom_name (Atom format))))))
                           (fa_args
                             ((Expr_name (Var_name Dev))
                               (Expr_literal
                                 (Lit_string "*DBG* ~tp got cast ~tp~n"))
                               (Expr_list
                                 ((Expr_name (Var_name Name))
                                   (Expr_name (Var_name Cast))))))))))
                   ((c_lhs ((Pattern_binding (Var_name _)))) (c_guard ())
                     (c_rhs
                       (Expr_apply
                         ((fa_name
                            (Expr_name
                              (Qualified_name (n_mod (Atom_name (Atom io)))
                                (n_name (Atom_name (Atom format))))))
                           (fa_args
                             ((Expr_name (Var_name Dev))
                               (Expr_literal
                                 (Lit_string "*DBG* ~tp got ~tp~n"))
                               (Expr_list
                                 ((Expr_name (Var_name Name))
                                   (Expr_name (Var_name Msg))))))))))))))
            ((c_lhs
               ((Pattern_binding (Var_name Dev))
                 (Pattern_tuple
                   ((Pattern_match (Lit_atom (Atom out)))
                     (Pattern_binding (Var_name Msg))
                     (Pattern_tuple
                       ((Pattern_binding (Var_name To))
                         (Pattern_binding (Var_name _Tag))))
                     (Pattern_binding (Var_name State))))
                 (Pattern_binding (Var_name Name))))
              (c_guard ())
              (c_rhs
                (Expr_apply
                  ((fa_name
                     (Expr_name
                       (Qualified_name (n_mod (Atom_name (Atom io)))
                         (n_name (Atom_name (Atom format))))))
                    (fa_args
                      ((Expr_name (Var_name Dev))
                        (Expr_literal
                          (Lit_string
                            "*DBG* ~tp sent ~tp to ~tw, new state ~tp~n"))
                        (Expr_list
                          ((Expr_name (Var_name Name))
                            (Expr_name (Var_name Msg))
                            (Expr_name (Var_name To))
                            (Expr_name (Var_name State))))))))))
            ((c_lhs
               ((Pattern_binding (Var_name Dev))
                 (Pattern_tuple
                   ((Pattern_match (Lit_atom (Atom noreply)))
                     (Pattern_binding (Var_name State))))
                 (Pattern_binding (Var_name Name))))
              (c_guard ())
              (c_rhs
                (Expr_apply
                  ((fa_name
                     (Expr_name
                       (Qualified_name (n_mod (Atom_name (Atom io)))
                         (n_name (Atom_name (Atom format))))))
                    (fa_args
                      ((Expr_name (Var_name Dev))
                        (Expr_literal (Lit_string "*DBG* ~tp new state ~tp~n"))
                        (Expr_list
                          ((Expr_name (Var_name Name))
                            (Expr_name (Var_name State))))))))))
            ((c_lhs
               ((Pattern_binding (Var_name Dev))
                 (Pattern_binding (Var_name Event))
                 (Pattern_binding (Var_name Name))))
              (c_guard ())
              (c_rhs
                (Expr_apply
                  ((fa_name
                     (Expr_name
                       (Qualified_name (n_mod (Atom_name (Atom io)))
                         (n_name (Atom_name (Atom format))))))
                    (fa_args
                      ((Expr_name (Var_name Dev))
                        (Expr_literal (Lit_string "*DBG* ~tp dbg  ~tp~n"))
                        (Expr_list
                          ((Expr_name (Var_name Name))
                            (Expr_name (Var_name Event))))))))))))
        (fd_spec ())))
    (Module_comment
      (Comment "%% ---------------------------------------------------"))
    (Module_comment (Comment "%% Terminate the server."))
    (Module_comment (Comment %%))
    (Module_comment
      (Comment "%% terminate/8 is triggered by {stop, Reason} or bad"))
    (Module_comment
      (Comment "%% return values. The stacktrace is generated via the"))
    (Module_comment
      (Comment "%% ?STACKTRACE() macro and the ReportReason must not"))
    (Module_comment (Comment "%% be wrapped in tuples."))
    (Module_comment (Comment %%))
    (Module_comment
      (Comment "%% terminate/9 is triggered in case of error/exit in"))
    (Module_comment
      (Comment "%% the user callback. In this case the report reason"))
    (Module_comment (Comment "%% always includes the user stacktrace."))
    (Module_comment (Comment %%))
    (Module_comment
      (Comment "%% The reason received in the terminate/2 callbacks"))
    (Module_comment
      (Comment "%% always includes the stacktrace for errors and never"))
    (Module_comment (Comment "%% for exits."))
    (Module_comment
      (Comment "%% ---------------------------------------------------"))
    (Type_decl
      ((typ_expr
         (Type_constr ((tc_name (Atom_name (Atom no_return))) (tc_args ()))))
        (typ_kind Spec) (typ_name (Atom terminate))
        (typ_params
          ((Type_variable (Var_name _)) (Type_variable (Var_name _))
            (Type_variable (Var_name _)) (Type_variable (Var_name _))
            (Type_variable (Var_name _)) (Type_variable (Var_name _))
            (Type_variable (Var_name _)) (Type_variable (Var_name _))))))
    (Function_decl
      ((fd_name (Atom terminate)) (fd_arity 8)
        (fd_cases
          (((c_lhs
              ((Pattern_binding (Var_name Reason))
                (Pattern_binding (Var_name Stacktrace))
                (Pattern_binding (Var_name Name))
                (Pattern_binding (Var_name From))
                (Pattern_binding (Var_name Msg))
                (Pattern_binding (Var_name Mod))
                (Pattern_binding (Var_name State))
                (Pattern_binding (Var_name Debug))))
             (c_guard ())
             (c_rhs
               (Expr_apply
                 ((fa_name (Expr_name (Atom_name (Atom terminate))))
                   (fa_args
                     ((Expr_literal (Lit_atom (Atom exit)))
                       (Expr_name (Var_name Reason))
                       (Expr_name (Var_name Stacktrace))
                       (Expr_name (Var_name Reason))
                       (Expr_name (Var_name Name)) (Expr_name (Var_name From))
                       (Expr_name (Var_name Msg)) (Expr_name (Var_name Mod))
                       (Expr_name (Var_name State))
                       (Expr_name (Var_name Debug))))))))))
        (fd_spec ())))
    (Type_decl
      ((typ_expr
         (Type_constr ((tc_name (Atom_name (Atom no_return))) (tc_args ()))))
        (typ_kind Spec) (typ_name (Atom terminate))
        (typ_params
          ((Type_variable (Var_name _)) (Type_variable (Var_name _))
            (Type_variable (Var_name _)) (Type_variable (Var_name _))
            (Type_variable (Var_name _)) (Type_variable (Var_name _))
            (Type_variable (Var_name _)) (Type_variable (Var_name _))
            (Type_variable (Var_name _))))))
    (Function_decl
      ((fd_name (Atom terminate)) (fd_arity 9)
        (fd_cases
          (((c_lhs
              ((Pattern_binding (Var_name Class))
                (Pattern_binding (Var_name Reason))
                (Pattern_binding (Var_name Stacktrace))
                (Pattern_binding (Var_name Name))
                (Pattern_binding (Var_name From))
                (Pattern_binding (Var_name Msg))
                (Pattern_binding (Var_name Mod))
                (Pattern_binding (Var_name State))
                (Pattern_binding (Var_name Debug))))
             (c_guard ())
             (c_rhs
               (Expr_let
                 ((lb_lhs (Pattern_binding (Var_name ReportReason)))
                   (lb_rhs
                     (Expr_tuple
                       ((Expr_name (Var_name Reason))
                         (Expr_name (Var_name Stacktrace))))))
                 (Expr_apply
                   ((fa_name (Expr_name (Atom_name (Atom terminate))))
                     (fa_args
                       ((Expr_name (Var_name Class))
                         (Expr_name (Var_name Reason))
                         (Expr_name (Var_name Stacktrace))
                         (Expr_name (Var_name ReportReason))
                         (Expr_name (Var_name Name))
                         (Expr_name (Var_name From)) (Expr_name (Var_name Msg))
                         (Expr_name (Var_name Mod))
                         (Expr_name (Var_name State))
                         (Expr_name (Var_name Debug)))))))))))
        (fd_spec ())))
    (Type_decl
      ((typ_expr
         (Type_constr ((tc_name (Atom_name (Atom no_return))) (tc_args ()))))
        (typ_kind Spec) (typ_name (Atom terminate))
        (typ_params
          ((Type_variable (Var_name _)) (Type_variable (Var_name _))
            (Type_variable (Var_name _)) (Type_variable (Var_name _))
            (Type_variable (Var_name _)) (Type_variable (Var_name _))
            (Type_variable (Var_name _)) (Type_variable (Var_name _))
            (Type_variable (Var_name _)) (Type_variable (Var_name _))))))
    (Function_decl
      ((fd_name (Atom terminate)) (fd_arity 10)
        (fd_cases
          (((c_lhs
              ((Pattern_binding (Var_name Class))
                (Pattern_binding (Var_name Reason))
                (Pattern_binding (Var_name Stacktrace))
                (Pattern_binding (Var_name ReportReason))
                (Pattern_binding (Var_name Name))
                (Pattern_binding (Var_name From))
                (Pattern_binding (Var_name Msg))
                (Pattern_binding (Var_name Mod))
                (Pattern_binding (Var_name State))
                (Pattern_binding (Var_name Debug))))
             (c_guard ())
             (c_rhs
               (Expr_let
                 ((lb_lhs (Pattern_binding (Var_name Reply)))
                   (lb_rhs
                     (Expr_apply
                       ((fa_name (Expr_name (Atom_name (Atom try_terminate))))
                         (fa_args
                           ((Expr_name (Var_name Mod))
                             (Expr_apply
                               ((fa_name
                                  (Expr_name
                                    (Atom_name (Atom terminate_reason))))
                                 (fa_args
                                   ((Expr_name (Var_name Class))
                                     (Expr_name (Var_name Reason))
                                     (Expr_name (Var_name Stacktrace))))))
                             (Expr_name (Var_name State))))))))
                 (Expr_comment
                   (Comment
                     " FIXME: ignored let bindings are not supported yet")
                   (Expr_let
                     ((lb_lhs (Pattern_binding (Var_name _)))
                       (lb_rhs
                         (Expr_case (Expr_name (Var_name Reply))
                           (((c_lhs
                               ((Pattern_tuple
                                  ((Pattern_match (Lit_atom (Atom 'EXIT')))
                                    (Pattern_binding (Var_name C))
                                    (Pattern_binding (Var_name R))
                                    (Pattern_binding (Var_name S))))))
                              (c_guard ())
                              (c_rhs
                                (Expr_comment
                                  (Comment
                                    " FIXME: ignored let bindings are not supported yet")
                                  (Expr_let
                                    ((lb_lhs (Pattern_binding (Var_name _)))
                                      (lb_rhs
                                        (Expr_apply
                                          ((fa_name
                                             (Expr_name
                                               (Atom_name (Atom error_info))))
                                            (fa_args
                                              ((Expr_tuple
                                                 ((Expr_name (Var_name R))
                                                   (Expr_name (Var_name S))))
                                                (Expr_name (Var_name Name))
                                                (Expr_name (Var_name From))
                                                (Expr_name (Var_name Msg))
                                                (Expr_name (Var_name Mod))
                                                (Expr_name (Var_name State))
                                                (Expr_name (Var_name Debug))))))))
                                    (Expr_apply
                                      ((fa_name
                                         (Expr_name
                                           (Qualified_name
                                             (n_mod (Atom_name (Atom erlang)))
                                             (n_name (Atom_name (Atom raise))))))
                                        (fa_args
                                          ((Expr_name (Var_name C))
                                            (Expr_name (Var_name R))
                                            (Expr_name (Var_name S))))))))))
                             ((c_lhs ((Pattern_binding (Var_name _))))
                               (c_guard ())
                               (c_rhs
                                 (Expr_case
                                   (Expr_tuple
                                     ((Expr_name (Var_name Class))
                                       (Expr_name (Var_name Reason))))
                                   (((c_lhs
                                       ((Pattern_tuple
                                          ((Pattern_match
                                             (Lit_atom (Atom exit)))
                                            (Pattern_match
                                              (Lit_atom (Atom normal)))))))
                                      (c_guard ())
                                      (c_rhs
                                        (Expr_literal (Lit_atom (Atom ok)))))
                                     ((c_lhs
                                        ((Pattern_tuple
                                           ((Pattern_match
                                              (Lit_atom (Atom exit)))
                                             (Pattern_match
                                               (Lit_atom (Atom shutdown)))))))
                                       (c_guard ())
                                       (c_rhs
                                         (Expr_literal (Lit_atom (Atom ok)))))
                                     ((c_lhs
                                        ((Pattern_tuple
                                           ((Pattern_match
                                              (Lit_atom (Atom exit)))
                                             (Pattern_tuple
                                               ((Pattern_match
                                                  (Lit_atom (Atom shutdown)))
                                                 (Pattern_binding (Var_name _))))))))
                                       (c_guard ())
                                       (c_rhs
                                         (Expr_literal (Lit_atom (Atom ok)))))
                                     ((c_lhs ((Pattern_binding (Var_name _))))
                                       (c_guard ())
                                       (c_rhs
                                         (Expr_apply
                                           ((fa_name
                                              (Expr_name
                                                (Atom_name (Atom error_info))))
                                             (fa_args
                                               ((Expr_name
                                                  (Var_name ReportReason))
                                                 (Expr_name (Var_name Name))
                                                 (Expr_name (Var_name From))
                                                 (Expr_name (Var_name Msg))
                                                 (Expr_name (Var_name Mod))
                                                 (Expr_name (Var_name State))
                                                 (Expr_name (Var_name Debug))))))))))))))))
                     (Expr_comment
                       (Comment
                         " FIXME: ignored let bindings are not supported yet")
                       (Expr_let
                         ((lb_lhs (Pattern_binding (Var_name _)))
                           (lb_rhs
                             (Expr_case (Expr_name (Var_name Stacktrace))
                               (((c_lhs ((Pattern_list ()))) (c_guard ())
                                  (c_rhs
                                    (Expr_apply
                                      ((fa_name
                                         (Expr_name
                                           (Qualified_name
                                             (n_mod (Atom_name (Atom erlang)))
                                             (n_name (Var_name Class)))))
                                        (fa_args
                                          ((Expr_name (Var_name Reason))))))))
                                 ((c_lhs ((Pattern_binding (Var_name _))))
                                   (c_guard ())
                                   (c_rhs
                                     (Expr_apply
                                       ((fa_name
                                          (Expr_name
                                            (Qualified_name
                                              (n_mod (Atom_name (Atom erlang)))
                                              (n_name (Atom_name (Atom raise))))))
                                         (fa_args
                                           ((Expr_name (Var_name Class))
                                             (Expr_name (Var_name Reason))
                                             (Expr_name (Var_name Stacktrace))))))))))))
                         (Expr_name (Var_name _)))))))))))
        (fd_spec ())))
    (Function_decl
      ((fd_name (Atom terminate_reason)) (fd_arity 3)
        (fd_cases
          (((c_lhs
              ((Pattern_match (Lit_atom (Atom error)))
                (Pattern_binding (Var_name Reason))
                (Pattern_binding (Var_name Stacktrace))))
             (c_guard ())
             (c_rhs
               (Expr_tuple
                 ((Expr_name (Var_name Reason))
                   (Expr_name (Var_name Stacktrace))))))
            ((c_lhs
               ((Pattern_match (Lit_atom (Atom exit)))
                 (Pattern_binding (Var_name Reason))
                 (Pattern_binding (Var_name _Stacktrace))))
              (c_guard ()) (c_rhs (Expr_name (Var_name Reason))))))
        (fd_spec ())))
    (Function_decl
      ((fd_name (Atom error_info)) (fd_arity 7)
        (fd_cases
          (((c_lhs
              ((Pattern_binding (Var_name _Reason))
                (Pattern_match (Lit_atom (Atom application_controller)))
                (Pattern_binding (Var_name _From))
                (Pattern_binding (Var_name _Msg))
                (Pattern_binding (Var_name _Mod))
                (Pattern_binding (Var_name _State))
                (Pattern_binding (Var_name _Debug))))
             (c_guard ())
             (c_rhs
               (Expr_comment
                 (Comment
                   "% OTP-5811 Don't send an error report if it's the system process")
                 (Expr_comment
                   (Comment
                     "% application_controller which is terminating - let init take care")
                   (Expr_comment (Comment "% of it instead")
                     (Expr_literal (Lit_atom (Atom ok))))))))
            ((c_lhs
               ((Pattern_binding (Var_name Reason))
                 (Pattern_binding (Var_name Name))
                 (Pattern_binding (Var_name From))
                 (Pattern_binding (Var_name Msg))
                 (Pattern_binding (Var_name Mod))
                 (Pattern_binding (Var_name State))
                 (Pattern_binding (Var_name Debug))))
              (c_guard ())
              (c_rhs
                (Expr_let
                  ((lb_lhs (Pattern_binding (Var_name Log)))
                    (lb_rhs
                      (Expr_apply
                        ((fa_name
                           (Expr_name
                             (Qualified_name (n_mod (Atom_name (Atom sys)))
                               (n_name (Atom_name (Atom get_log))))))
                          (fa_args ((Expr_name (Var_name Debug))))))))
                  (Expr_comment
                    (Comment
                      " FIXME: ignored let bindings are not supported yet")
                    (Expr_let
                      ((lb_lhs (Pattern_binding (Var_name _)))
                        (lb_rhs
                          (Expr_apply
                            ((fa_name (Expr_macro ?LOG_ERROR))
                              (fa_args
                                ((Expr_map
                                   (((mf_name
                                       (Expr_literal (Lit_atom (Atom label))))
                                      (mf_value
                                        (Expr_tuple
                                          ((Expr_literal
                                             (Lit_atom (Atom gen_server)))
                                            (Expr_literal
                                              (Lit_atom (Atom terminate)))))))
                                     ((mf_name
                                        (Expr_literal (Lit_atom (Atom name))))
                                       (mf_value (Expr_name (Var_name Name))))
                                     ((mf_name
                                        (Expr_literal
                                          (Lit_atom (Atom last_message))))
                                       (mf_value (Expr_name (Var_name Msg))))
                                     ((mf_name
                                        (Expr_literal (Lit_atom (Atom state))))
                                       (mf_value
                                         (Expr_apply
                                           ((fa_name
                                              (Expr_name
                                                (Atom_name
                                                  (Atom format_status))))
                                             (fa_args
                                               ((Expr_literal
                                                  (Lit_atom (Atom terminate)))
                                                 (Expr_name (Var_name Mod))
                                                 (Expr_apply
                                                   ((fa_name
                                                      (Expr_name
                                                        (Atom_name (Atom get))))
                                                     (fa_args ())))
                                                 (Expr_name (Var_name State))))))))
                                     ((mf_name
                                        (Expr_literal (Lit_atom (Atom log))))
                                       (mf_value
                                         (Expr_apply
                                           ((fa_name
                                              (Expr_name
                                                (Atom_name
                                                  (Atom format_log_state))))
                                             (fa_args
                                               ((Expr_name (Var_name Mod))
                                                 (Expr_name (Var_name Log))))))))
                                     ((mf_name
                                        (Expr_literal (Lit_atom (Atom reason))))
                                       (mf_value (Expr_name (Var_name Reason))))
                                     ((mf_name
                                        (Expr_literal
                                          (Lit_atom (Atom client_info))))
                                       (mf_value
                                         (Expr_apply
                                           ((fa_name
                                              (Expr_name
                                                (Atom_name
                                                  (Atom client_stacktrace))))
                                             (fa_args
                                               ((Expr_name (Var_name From))))))))))
                                  (Expr_map
                                    (((mf_name
                                        (Expr_literal (Lit_atom (Atom domain))))
                                       (mf_value
                                         (Expr_list
                                           ((Expr_literal
                                              (Lit_atom (Atom otp)))))))
                                      ((mf_name
                                         (Expr_literal
                                           (Lit_atom (Atom report_cb))))
                                        (mf_value
                                          (Expr_fun_ref
                                            (fref_name
                                              (Qualified_name
                                                (n_mod
                                                  (Atom_name (Atom gen_server)))
                                                (n_name
                                                  (Atom_name (Atom format_log)))))
                                            (fref_arity 2))))
                                      ((mf_name
                                         (Expr_literal
                                           (Lit_atom (Atom error_logger))))
                                        (mf_value
                                          (Expr_map
                                            (((mf_name
                                                (Expr_literal
                                                  (Lit_atom (Atom tag))))
                                               (mf_value
                                                 (Expr_literal
                                                   (Lit_atom (Atom error)))))
                                              ((mf_name
                                                 (Expr_literal
                                                   (Lit_atom (Atom report_cb))))
                                                (mf_value
                                                  (Expr_fun_ref
                                                    (fref_name
                                                      (Qualified_name
                                                        (n_mod
                                                          (Atom_name
                                                            (Atom gen_server)))
                                                        (n_name
                                                          (Atom_name
                                                            (Atom format_log)))))
                                                    (fref_arity 1))))))))))))))))
                      (Expr_literal (Lit_atom (Atom ok))))))))))
        (fd_spec ())))
    (Function_decl
      ((fd_name (Atom client_stacktrace)) (fd_arity 1)
        (fd_cases
          (((c_lhs ((Pattern_match (Lit_atom (Atom undefined))))) (c_guard ())
             (c_rhs (Expr_literal (Lit_atom (Atom undefined)))))
            ((c_lhs
               ((Pattern_tuple
                  ((Pattern_binding (Var_name From))
                    (Pattern_binding (Var_name _Tag))))))
              (c_guard ())
              (c_rhs
                (Expr_apply
                  ((fa_name (Expr_name (Atom_name (Atom client_stacktrace))))
                    (fa_args ((Expr_name (Var_name From))))))))
            ((c_lhs ((Pattern_binding (Var_name From))))
              (c_guard
                (((Expr_apply
                    ((fa_name (Expr_name (Atom_name (Atom is_pid))))
                      (fa_args ((Expr_name (Var_name From))))))
                   (Expr_apply
                     ((fa_name
                        (Expr_name
                          (Qualified_name (n_mod (Atom_name (Atom erlang)))
                            (n_name (Atom_name (Atom '=:='))))))
                       (fa_args
                         ((Expr_apply
                            ((fa_name (Expr_name (Atom_name (Atom node))))
                              (fa_args ((Expr_name (Var_name From))))))
                           (Expr_apply
                             ((fa_name (Expr_name (Atom_name (Atom node))))
                               (fa_args ()))))))))))
              (c_rhs
                (Expr_case
                  (Expr_apply
                    ((fa_name (Expr_name (Atom_name (Atom process_info))))
                      (fa_args
                        ((Expr_name (Var_name From))
                          (Expr_list
                            ((Expr_literal
                               (Lit_atom (Atom current_stacktrace)))
                              (Expr_literal (Lit_atom (Atom registered_name)))))))))
                  (((c_lhs ((Pattern_match (Lit_atom (Atom undefined)))))
                     (c_guard ())
                     (c_rhs
                       (Expr_tuple
                         ((Expr_name (Var_name From))
                           (Expr_literal (Lit_atom (Atom dead)))))))
                    ((c_lhs
                       ((Pattern_list
                          ((Pattern_tuple
                             ((Pattern_match
                                (Lit_atom (Atom current_stacktrace)))
                               (Pattern_binding (Var_name Stacktrace))))
                            (Pattern_tuple
                              ((Pattern_match
                                 (Lit_atom (Atom registered_name)))
                                (Pattern_list ())))))))
                      (c_guard ())
                      (c_rhs
                        (Expr_tuple
                          ((Expr_name (Var_name From))
                            (Expr_tuple
                              ((Expr_name (Var_name From))
                                (Expr_name (Var_name Stacktrace))))))))
                    ((c_lhs
                       ((Pattern_list
                          ((Pattern_tuple
                             ((Pattern_match
                                (Lit_atom (Atom current_stacktrace)))
                               (Pattern_binding (Var_name Stacktrace))))
                            (Pattern_tuple
                              ((Pattern_match
                                 (Lit_atom (Atom registered_name)))
                                (Pattern_binding (Var_name Name))))))))
                      (c_guard ())
                      (c_rhs
                        (Expr_tuple
                          ((Expr_name (Var_name From))
                            (Expr_tuple
                              ((Expr_name (Var_name Name))
                                (Expr_name (Var_name Stacktrace))))))))))))
            ((c_lhs ((Pattern_binding (Var_name From))))
              (c_guard
                (((Expr_apply
                    ((fa_name (Expr_name (Atom_name (Atom is_pid))))
                      (fa_args ((Expr_name (Var_name From)))))))))
              (c_rhs
                (Expr_tuple
                  ((Expr_name (Var_name From))
                    (Expr_literal (Lit_atom (Atom remote)))))))))
        (fd_spec ())))
    (Module_comment
      (Comment "% format_log/1 is the report callback used by Logger handler"))
    (Module_comment
      (Comment
        "% error_logger only. It is kept for backwards compatibility with"))
    (Module_comment
      (Comment
        "% legacy error_logger event handlers. This function must always"))
    (Module_comment
      (Comment
        "% return {Format,Args} compatible with the arguments in this module's"))
    (Module_comment (Comment "% calls to error_logger prior to OTP-21.0."))
    (Function_decl
      ((fd_name (Atom format_log)) (fd_arity 1)
        (fd_cases
          (((c_lhs ((Pattern_binding (Var_name Report)))) (c_guard ())
             (c_rhs
               (Expr_let
                 ((lb_lhs (Pattern_binding (Var_name Depth)))
                   (lb_rhs
                     (Expr_apply
                       ((fa_name
                          (Expr_name
                            (Qualified_name
                              (n_mod (Atom_name (Atom error_logger)))
                              (n_name (Atom_name (Atom get_format_depth))))))
                         (fa_args ())))))
                 (Expr_let
                   ((lb_lhs (Pattern_binding (Var_name FormatOpts)))
                     (lb_rhs
                       (Expr_map
                         (((mf_name
                             (Expr_literal (Lit_atom (Atom chars_limit))))
                            (mf_value
                              (Expr_literal (Lit_atom (Atom unlimited)))))
                           ((mf_name (Expr_literal (Lit_atom (Atom depth))))
                             (mf_value (Expr_name (Var_name Depth))))
                           ((mf_name
                              (Expr_literal (Lit_atom (Atom single_line))))
                             (mf_value (Expr_literal (Lit_atom (Atom false)))))
                           ((mf_name (Expr_literal (Lit_atom (Atom encoding))))
                             (mf_value (Expr_literal (Lit_atom (Atom utf8)))))))))
                   (Expr_apply
                     ((fa_name (Expr_name (Atom_name (Atom format_log_multi))))
                       (fa_args
                         ((Expr_apply
                            ((fa_name
                               (Expr_name (Atom_name (Atom limit_report))))
                              (fa_args
                                ((Expr_name (Var_name Report))
                                  (Expr_name (Var_name Depth))))))
                           (Expr_name (Var_name FormatOpts))))))))))))
        (fd_spec ())))
    (Function_decl
      ((fd_name (Atom limit_report)) (fd_arity 2)
        (fd_cases
          (((c_lhs
              ((Pattern_binding (Var_name Report))
                (Pattern_match (Lit_atom (Atom unlimited)))))
             (c_guard ()) (c_rhs (Expr_name (Var_name Report))))
            ((c_lhs
               ((Pattern_with_name
                  (Pattern_map
                    (((Pattern_match (Lit_atom (Atom label)))
                       (Pattern_tuple
                         ((Pattern_match (Lit_atom (Atom gen_server)))
                           (Pattern_match (Lit_atom (Atom terminate))))))
                      ((Pattern_match (Lit_atom (Atom last_message)))
                        (Pattern_binding (Var_name Msg)))
                      ((Pattern_match (Lit_atom (Atom state)))
                        (Pattern_binding (Var_name State)))
                      ((Pattern_match (Lit_atom (Atom log)))
                        (Pattern_binding (Var_name Log)))
                      ((Pattern_match (Lit_atom (Atom reason)))
                        (Pattern_binding (Var_name Reason)))
                      ((Pattern_match (Lit_atom (Atom client_info)))
                        (Pattern_binding (Var_name Client)))))
                  (Pattern_binding (Var_name Report)))))
              (c_guard ())
              (c_rhs
                (Expr_map_update (Expr_name (Var_name Report))
                  (((mf_name (Expr_literal (Lit_atom (Atom last_message))))
                     (mf_value
                       (Expr_apply
                         ((fa_name
                            (Expr_name
                              (Qualified_name (n_mod (Atom_name (Atom io_lib)))
                                (n_name (Atom_name (Atom limit_term))))))
                           (fa_args
                             ((Expr_name (Var_name Msg))
                               (Expr_name (Var_name Depth))))))))
                    ((mf_name (Expr_literal (Lit_atom (Atom state))))
                      (mf_value
                        (Expr_apply
                          ((fa_name
                             (Expr_name
                               (Qualified_name
                                 (n_mod (Atom_name (Atom io_lib)))
                                 (n_name (Atom_name (Atom limit_term))))))
                            (fa_args
                              ((Expr_name (Var_name State))
                                (Expr_name (Var_name Depth))))))))
                    ((mf_name
                       (Expr_comment
                         (Comment
                           " FIXME: list comprehensions are not yet supported")
                         (Expr_comment
                           (Comment
                             " log=>[io_lib:limit_term(L,Depth)||L<-Log],")
                           (Expr_literal (Lit_atom (Atom reason))))))
                      (mf_value
                        (Expr_apply
                          ((fa_name
                             (Expr_name
                               (Qualified_name
                                 (n_mod (Atom_name (Atom io_lib)))
                                 (n_name (Atom_name (Atom limit_term))))))
                            (fa_args
                              ((Expr_name (Var_name Reason))
                                (Expr_name (Var_name Depth))))))))
                    ((mf_name (Expr_literal (Lit_atom (Atom client_info))))
                      (mf_value
                        (Expr_apply
                          ((fa_name
                             (Expr_name (Atom_name (Atom limit_client_report))))
                            (fa_args
                              ((Expr_name (Var_name Client))
                                (Expr_name (Var_name Depth))))))))))))
            ((c_lhs
               ((Pattern_with_name
                  (Pattern_map
                    (((Pattern_match (Lit_atom (Atom label)))
                       (Pattern_tuple
                         ((Pattern_match (Lit_atom (Atom gen_server)))
                           (Pattern_match (Lit_atom (Atom no_handle_info))))))
                      ((Pattern_match (Lit_atom (Atom message)))
                        (Pattern_binding (Var_name Msg)))))
                  (Pattern_binding (Var_name Report)))))
              (c_guard ())
              (c_rhs
                (Expr_map_update (Expr_name (Var_name Report))
                  (((mf_name (Expr_literal (Lit_atom (Atom message))))
                     (mf_value
                       (Expr_apply
                         ((fa_name
                            (Expr_name
                              (Qualified_name (n_mod (Atom_name (Atom io_lib)))
                                (n_name (Atom_name (Atom limit_term))))))
                           (fa_args
                             ((Expr_name (Var_name Msg))
                               (Expr_name (Var_name Depth))))))))))))))
        (fd_spec ())))
    (Function_decl
      ((fd_name (Atom limit_client_report)) (fd_arity 2)
        (fd_cases
          (((c_lhs
              ((Pattern_tuple
                 ((Pattern_binding (Var_name From))
                   (Pattern_tuple
                     ((Pattern_binding (Var_name Name))
                       (Pattern_binding (Var_name Stacktrace))))))
                (Pattern_binding (Var_name Depth))))
             (c_guard ())
             (c_rhs
               (Expr_tuple
                 ((Expr_name (Var_name From))
                   (Expr_tuple
                     ((Expr_name (Var_name Name))
                       (Expr_apply
                         ((fa_name
                            (Expr_name
                              (Qualified_name (n_mod (Atom_name (Atom io_lib)))
                                (n_name (Atom_name (Atom limit_term))))))
                           (fa_args
                             ((Expr_name (Var_name Stacktrace))
                               (Expr_name (Var_name Depth))))))))))))
            ((c_lhs
               ((Pattern_binding (Var_name Client))
                 (Pattern_binding (Var_name _))))
              (c_guard ()) (c_rhs (Expr_name (Var_name Client))))))
        (fd_spec ())))
    (Module_comment
      (Comment
        "% format_log/2 is the report callback for any Logger handler, except"))
    (Module_comment (Comment "% error_logger."))
    (Function_decl
      ((fd_name (Atom format_log)) (fd_arity 2)
        (fd_cases
          (((c_lhs
              ((Pattern_binding (Var_name Report))
                (Pattern_binding (Var_name FormatOpts0))))
             (c_guard ())
             (c_rhs
               (Expr_let
                 ((lb_lhs (Pattern_binding (Var_name Default)))
                   (lb_rhs
                     (Expr_map
                       (((mf_name (Expr_literal (Lit_atom (Atom chars_limit))))
                          (mf_value (Expr_literal (Lit_atom (Atom unlimited)))))
                         ((mf_name (Expr_literal (Lit_atom (Atom depth))))
                           (mf_value
                             (Expr_literal (Lit_atom (Atom unlimited)))))
                         ((mf_name
                            (Expr_literal (Lit_atom (Atom single_line))))
                           (mf_value (Expr_literal (Lit_atom (Atom false)))))
                         ((mf_name (Expr_literal (Lit_atom (Atom encoding))))
                           (mf_value (Expr_literal (Lit_atom (Atom utf8)))))))))
                 (Expr_let
                   ((lb_lhs (Pattern_binding (Var_name FormatOpts)))
                     (lb_rhs
                       (Expr_apply
                         ((fa_name
                            (Expr_name
                              (Qualified_name (n_mod (Atom_name (Atom maps)))
                                (n_name (Atom_name (Atom merge))))))
                           (fa_args
                             ((Expr_name (Var_name Default))
                               (Expr_name (Var_name FormatOpts0))))))))
                   (Expr_let
                     ((lb_lhs (Pattern_binding (Var_name IoOpts)))
                       (lb_rhs
                         (Expr_case (Expr_name (Var_name FormatOpts))
                           (((c_lhs
                               ((Pattern_map
                                  (((Pattern_match
                                      (Lit_atom (Atom chars_limit)))
                                     (Pattern_match
                                       (Lit_atom (Atom unlimited))))))))
                              (c_guard ()) (c_rhs (Expr_list ())))
                             ((c_lhs
                                ((Pattern_map
                                   (((Pattern_match
                                       (Lit_atom (Atom chars_limit)))
                                      (Pattern_binding (Var_name Limit)))))))
                               (c_guard ())
                               (c_rhs
                                 (Expr_list
                                   ((Expr_tuple
                                      ((Expr_literal
                                         (Lit_atom (Atom chars_limit)))
                                        (Expr_name (Var_name Limit))))))))))))
                     (Expr_let
                       ((lb_lhs
                          (Pattern_tuple
                            ((Pattern_binding (Var_name Format))
                              (Pattern_binding (Var_name Args)))))
                         (lb_rhs
                           (Expr_apply
                             ((fa_name
                                (Expr_name
                                  (Atom_name (Atom format_log_single))))
                               (fa_args
                                 ((Expr_name (Var_name Report))
                                   (Expr_name (Var_name FormatOpts))))))))
                       (Expr_apply
                         ((fa_name
                            (Expr_name
                              (Qualified_name (n_mod (Atom_name (Atom io_lib)))
                                (n_name (Atom_name (Atom format))))))
                           (fa_args
                             ((Expr_name (Var_name Format))
                               (Expr_name (Var_name Args))
                               (Expr_name (Var_name IoOpts))))))))))))))
        (fd_spec ())))
    (Function_decl
      ((fd_name (Atom format_log_single)) (fd_arity 2)
        (fd_cases
          (((c_lhs
              ((Pattern_map
                 (((Pattern_match (Lit_atom (Atom label)))
                    (Pattern_tuple
                      ((Pattern_match (Lit_atom (Atom gen_server)))
                        (Pattern_match (Lit_atom (Atom terminate))))))
                   ((Pattern_match (Lit_atom (Atom name)))
                     (Pattern_binding (Var_name Name)))
                   ((Pattern_match (Lit_atom (Atom last_message)))
                     (Pattern_binding (Var_name Msg)))
                   ((Pattern_match (Lit_atom (Atom state)))
                     (Pattern_binding (Var_name State)))
                   ((Pattern_match (Lit_atom (Atom log)))
                     (Pattern_binding (Var_name Log)))
                   ((Pattern_match (Lit_atom (Atom reason)))
                     (Pattern_binding (Var_name Reason)))
                   ((Pattern_match (Lit_atom (Atom client_info)))
                     (Pattern_binding (Var_name Client)))))
                (Pattern_with_name
                  (Pattern_map
                    (((Pattern_match (Lit_atom (Atom single_line)))
                       (Pattern_match (Lit_atom (Atom true))))
                      ((Pattern_match (Lit_atom (Atom depth)))
                        (Pattern_binding (Var_name Depth)))))
                  (Pattern_binding (Var_name FormatOpts)))))
             (c_guard ())
             (c_rhs
               (Expr_let
                 ((lb_lhs (Pattern_binding (Var_name P)))
                   (lb_rhs
                     (Expr_apply
                       ((fa_name (Expr_name (Atom_name (Atom p))))
                         (fa_args ((Expr_name (Var_name FormatOpts))))))))
                 (Expr_let
                   ((lb_lhs (Pattern_binding (Var_name Format1)))
                     (lb_rhs
                       (Expr_apply
                         ((fa_name
                            (Expr_name
                              (Qualified_name (n_mod (Atom_name (Atom lists)))
                                (n_name (Atom_name (Atom append))))))
                           (fa_args
                             ((Expr_list
                                ((Expr_literal (Lit_string "Generic server "))
                                  (Expr_name (Var_name P))
                                  (Expr_literal
                                    (Lit_string " terminating. Reason: "))
                                  (Expr_name (Var_name P))
                                  (Expr_literal
                                    (Lit_string ". Last message: "))
                                  (Expr_name (Var_name P))
                                  (Expr_literal (Lit_string ". State: "))
                                  (Expr_name (Var_name P))
                                  (Expr_literal (Lit_string .))))))))))
                   (Expr_let
                     ((lb_lhs
                        (Pattern_tuple
                          ((Pattern_binding (Var_name ServerLogFormat))
                            (Pattern_binding (Var_name ServerLogArgs)))))
                       (lb_rhs
                         (Expr_apply
                           ((fa_name
                              (Expr_name
                                (Atom_name (Atom format_server_log_single))))
                             (fa_args
                               ((Expr_name (Var_name Log))
                                 (Expr_name (Var_name FormatOpts))))))))
                     (Expr_let
                       ((lb_lhs
                          (Pattern_tuple
                            ((Pattern_binding (Var_name ClientLogFormat))
                              (Pattern_binding (Var_name ClientLogArgs)))))
                         (lb_rhs
                           (Expr_apply
                             ((fa_name
                                (Expr_name
                                  (Atom_name (Atom format_client_log_single))))
                               (fa_args
                                 ((Expr_name (Var_name Client))
                                   (Expr_name (Var_name FormatOpts))))))))
                       (Expr_let
                         ((lb_lhs (Pattern_binding (Var_name Args1)))
                           (lb_rhs
                             (Expr_case (Expr_name (Var_name Depth))
                               (((c_lhs
                                   ((Pattern_match (Lit_atom (Atom unlimited)))))
                                  (c_guard ())
                                  (c_rhs
                                    (Expr_list
                                      ((Expr_name (Var_name Name))
                                        (Expr_apply
                                          ((fa_name
                                             (Expr_name
                                               (Atom_name (Atom fix_reason))))
                                            (fa_args
                                              ((Expr_name (Var_name Reason))))))
                                        (Expr_name (Var_name Msg))
                                        (Expr_name (Var_name State))))))
                                 ((c_lhs ((Pattern_binding (Var_name _))))
                                   (c_guard ())
                                   (c_rhs
                                     (Expr_list
                                       ((Expr_name (Var_name Name))
                                         (Expr_name (Var_name Depth))
                                         (Expr_apply
                                           ((fa_name
                                              (Expr_name
                                                (Atom_name (Atom fix_reason))))
                                             (fa_args
                                               ((Expr_name (Var_name Reason))))))
                                         (Expr_name (Var_name Depth))
                                         (Expr_name (Var_name Msg))
                                         (Expr_name (Var_name Depth))
                                         (Expr_name (Var_name State))
                                         (Expr_name (Var_name Depth))))))))))
                         (Expr_tuple
                           ((Expr_apply
                              ((fa_name
                                 (Expr_name
                                   (Qualified_name
                                     (n_mod (Atom_name (Atom erlang)))
                                     (n_name (Atom_name (Atom '++'))))))
                                (fa_args
                                  ((Expr_name (Var_name Format1))
                                    (Expr_apply
                                      ((fa_name
                                         (Expr_name
                                           (Qualified_name
                                             (n_mod (Atom_name (Atom erlang)))
                                             (n_name (Atom_name (Atom '++'))))))
                                        (fa_args
                                          ((Expr_name
                                             (Var_name ServerLogFormat))
                                            (Expr_name
                                              (Var_name ClientLogFormat))))))))))
                             (Expr_apply
                               ((fa_name
                                  (Expr_name
                                    (Qualified_name
                                      (n_mod (Atom_name (Atom erlang)))
                                      (n_name (Atom_name (Atom '++'))))))
                                 (fa_args
                                   ((Expr_name (Var_name Args1))
                                     (Expr_apply
                                       ((fa_name
                                          (Expr_name
                                            (Qualified_name
                                              (n_mod (Atom_name (Atom erlang)))
                                              (n_name (Atom_name (Atom '++'))))))
                                         (fa_args
                                           ((Expr_name
                                              (Var_name ServerLogArgs))
                                             (Expr_name
                                               (Var_name ClientLogArgs)))))))))))))))))))
            ((c_lhs
               ((Pattern_map
                  (((Pattern_match (Lit_atom (Atom label)))
                     (Pattern_tuple
                       ((Pattern_match (Lit_atom (Atom gen_server)))
                         (Pattern_match (Lit_atom (Atom no_handle_info))))))
                    ((Pattern_match (Lit_atom (Atom module)))
                      (Pattern_binding (Var_name Mod)))
                    ((Pattern_match (Lit_atom (Atom message)))
                      (Pattern_binding (Var_name Msg)))))
                 (Pattern_with_name
                   (Pattern_map
                     (((Pattern_match (Lit_atom (Atom single_line)))
                        (Pattern_match (Lit_atom (Atom true))))
                       ((Pattern_match (Lit_atom (Atom depth)))
                         (Pattern_binding (Var_name Depth)))))
                   (Pattern_binding (Var_name FormatOpts)))))
              (c_guard ())
              (c_rhs
                (Expr_let
                  ((lb_lhs (Pattern_binding (Var_name P)))
                    (lb_rhs
                      (Expr_apply
                        ((fa_name (Expr_name (Atom_name (Atom p))))
                          (fa_args ((Expr_name (Var_name FormatOpts))))))))
                  (Expr_let
                    ((lb_lhs (Pattern_binding (Var_name Format)))
                      (lb_rhs
                        (Expr_apply
                          ((fa_name
                             (Expr_name
                               (Qualified_name (n_mod (Atom_name (Atom lists)))
                                 (n_name (Atom_name (Atom append))))))
                            (fa_args
                              ((Expr_list
                                 ((Expr_literal
                                    (Lit_string "Undefined handle_info in "))
                                   (Expr_name (Var_name P))
                                   (Expr_literal
                                     (Lit_string ". Unhandled message: "))
                                   (Expr_name (Var_name P))
                                   (Expr_literal (Lit_string .))))))))))
                    (Expr_let
                      ((lb_lhs (Pattern_binding (Var_name Args)))
                        (lb_rhs
                          (Expr_case (Expr_name (Var_name Depth))
                            (((c_lhs
                                ((Pattern_match (Lit_atom (Atom unlimited)))))
                               (c_guard ())
                               (c_rhs
                                 (Expr_list
                                   ((Expr_name (Var_name Mod))
                                     (Expr_name (Var_name Msg))))))
                              ((c_lhs ((Pattern_binding (Var_name _))))
                                (c_guard ())
                                (c_rhs
                                  (Expr_list
                                    ((Expr_name (Var_name Mod))
                                      (Expr_name (Var_name Depth))
                                      (Expr_name (Var_name Msg))
                                      (Expr_name (Var_name Depth))))))))))
                      (Expr_tuple
                        ((Expr_name (Var_name Format))
                          (Expr_name (Var_name Args)))))))))
            ((c_lhs
               ((Pattern_binding (Var_name Report))
                 (Pattern_binding (Var_name FormatOpts))))
              (c_guard ())
              (c_rhs
                (Expr_apply
                  ((fa_name (Expr_name (Atom_name (Atom format_log_multi))))
                    (fa_args
                      ((Expr_name (Var_name Report))
                        (Expr_name (Var_name FormatOpts))))))))))
        (fd_spec ())))
    (Function_decl
      ((fd_name (Atom format_log_multi)) (fd_arity 2)
        (fd_cases
          (((c_lhs
              ((Pattern_map
                 (((Pattern_match (Lit_atom (Atom label)))
                    (Pattern_tuple
                      ((Pattern_match (Lit_atom (Atom gen_server)))
                        (Pattern_match (Lit_atom (Atom terminate))))))
                   ((Pattern_match (Lit_atom (Atom name)))
                     (Pattern_binding (Var_name Name)))
                   ((Pattern_match (Lit_atom (Atom last_message)))
                     (Pattern_binding (Var_name Msg)))
                   ((Pattern_match (Lit_atom (Atom state)))
                     (Pattern_binding (Var_name State)))
                   ((Pattern_match (Lit_atom (Atom log)))
                     (Pattern_binding (Var_name Log)))
                   ((Pattern_match (Lit_atom (Atom reason)))
                     (Pattern_binding (Var_name Reason)))
                   ((Pattern_match (Lit_atom (Atom client_info)))
                     (Pattern_binding (Var_name Client)))))
                (Pattern_with_name
                  (Pattern_map
                    (((Pattern_match (Lit_atom (Atom depth)))
                       (Pattern_binding (Var_name Depth)))))
                  (Pattern_binding (Var_name FormatOpts)))))
             (c_guard ())
             (c_rhs
               (Expr_let
                 ((lb_lhs (Pattern_binding (Var_name Reason1)))
                   (lb_rhs
                     (Expr_apply
                       ((fa_name (Expr_name (Atom_name (Atom fix_reason))))
                         (fa_args ((Expr_name (Var_name Reason))))))))
                 (Expr_let
                   ((lb_lhs
                      (Pattern_tuple
                        ((Pattern_binding (Var_name ClientFmt))
                          (Pattern_binding (Var_name ClientArgs)))))
                     (lb_rhs
                       (Expr_apply
                         ((fa_name
                            (Expr_name (Atom_name (Atom format_client_log))))
                           (fa_args
                             ((Expr_name (Var_name Client))
                               (Expr_name (Var_name FormatOpts))))))))
                   (Expr_let
                     ((lb_lhs (Pattern_binding (Var_name P)))
                       (lb_rhs
                         (Expr_apply
                           ((fa_name (Expr_name (Atom_name (Atom p))))
                             (fa_args ((Expr_name (Var_name FormatOpts))))))))
                     (Expr_let
                       ((lb_lhs (Pattern_binding (Var_name Format)))
                         (lb_rhs
                           (Expr_apply
                             ((fa_name
                                (Expr_name
                                  (Qualified_name
                                    (n_mod (Atom_name (Atom erlang)))
                                    (n_name (Atom_name (Atom '++'))))))
                               (fa_args
                                 ((Expr_apply
                                    ((fa_name
                                       (Expr_name
                                         (Qualified_name
                                           (n_mod (Atom_name (Atom lists)))
                                           (n_name (Atom_name (Atom append))))))
                                      (fa_args
                                        ((Expr_comment
                                           (Comment
                                             "% FIXME: multi-line strings are not supported yet")
                                           (Expr_apply
                                             ((fa_name
                                                (Expr_name
                                                  (Qualified_name
                                                    (n_mod
                                                      (Atom_name (Atom erlang)))
                                                    (n_name
                                                      (Atom_name (Atom '++'))))))
                                               (fa_args
                                                 ((Expr_list
                                                    ((Expr_literal
                                                       (Lit_string
                                                         "** Generic server "))
                                                      (Expr_name (Var_name P))
                                                      (Expr_literal
                                                        (Lit_string
                                                          " terminating \n"))
                                                      (Expr_literal
                                                        (Lit_string
                                                          "** Last message in was "))
                                                      (Expr_name (Var_name P))
                                                      (Expr_literal
                                                        (Lit_string ~n))
                                                      (Expr_literal
                                                        (Lit_string
                                                          "** When Server state == "))
                                                      (Expr_name (Var_name P))
                                                      (Expr_literal
                                                        (Lit_string ~n))
                                                      (Expr_literal
                                                        (Lit_string
                                                          "** Reason for termination ==~n** "))
                                                      (Expr_name (Var_name P))
                                                      (Expr_literal
                                                        (Lit_string ~n))))
                                                   (Expr_case
                                                     (Expr_name (Var_name Log))
                                                     (((c_lhs
                                                         ((Pattern_list ())))
                                                        (c_guard ())
                                                        (c_rhs (Expr_list ())))
                                                       ((c_lhs
                                                          ((Pattern_binding
                                                             (Var_name _))))
                                                         (c_guard ())
                                                         (c_rhs
                                                           (Expr_apply
                                                             ((fa_name
                                                                (Expr_name
                                                                  (Qualified_name
                                                                    (n_mod
                                                                      (Atom_name
                                                                      (Atom
                                                                      erlang)))
                                                                    (n_name
                                                                      (Atom_name
                                                                      (Atom
                                                                      '++'))))))
                                                               (fa_args
                                                                 ((Expr_cons
                                                                    ((Expr_literal
                                                                      (Lit_string
                                                                      "** Log ==~n** [")))
                                                                    (Expr_apply
                                                                      ((fa_name
                                                                      (Expr_name
                                                                      (Qualified_name
                                                                      (n_mod
                                                                      (Atom_name
                                                                      (Atom
                                                                      lists)))
                                                                      (n_name
                                                                      (Atom_name
                                                                      (Atom
                                                                      join))))))
                                                                      (fa_args
                                                                      ((Expr_literal
                                                                      (Lit_string
                                                                      ",~n    "))
                                                                      (Expr_apply
                                                                      ((fa_name
                                                                      (Expr_name
                                                                      (Qualified_name
                                                                      (n_mod
                                                                      (Atom_name
                                                                      (Atom
                                                                      lists)))
                                                                      (n_name
                                                                      (Atom_name
                                                                      (Atom
                                                                      duplicate))))))
                                                                      (fa_args
                                                                      ((Expr_apply
                                                                      ((fa_name
                                                                      (Expr_name
                                                                      (Atom_name
                                                                      (Atom
                                                                      length))))
                                                                      (fa_args
                                                                      ((Expr_name
                                                                      (Var_name
                                                                      Log))))))
                                                                      (Expr_name
                                                                      (Var_name
                                                                      P)))))))))))
                                                                   (Expr_list
                                                                     ((Expr_literal
                                                                      (Lit_string
                                                                      ]~n)))))))))))))))))))))
                                   (Expr_name (Var_name ClientFmt))))))))
                       (Expr_let
                         ((lb_lhs (Pattern_binding (Var_name Args)))
                           (lb_rhs
                             (Expr_case (Expr_name (Var_name Depth))
                               (((c_lhs
                                   ((Pattern_match (Lit_atom (Atom unlimited)))))
                                  (c_guard ())
                                  (c_rhs
                                    (Expr_apply
                                      ((fa_name
                                         (Expr_name
                                           (Qualified_name
                                             (n_mod (Atom_name (Atom erlang)))
                                             (n_name (Atom_name (Atom '++'))))))
                                        (fa_args
                                          ((Expr_list
                                             ((Expr_name (Var_name Name))
                                               (Expr_name (Var_name Msg))
                                               (Expr_name (Var_name State))
                                               (Expr_name (Var_name Reason1))))
                                            (Expr_apply
                                              ((fa_name
                                                 (Expr_name
                                                   (Qualified_name
                                                     (n_mod
                                                       (Atom_name
                                                         (Atom erlang)))
                                                     (n_name
                                                       (Atom_name (Atom '++'))))))
                                                (fa_args
                                                  ((Expr_case
                                                     (Expr_name (Var_name Log))
                                                     (((c_lhs
                                                         ((Pattern_list ())))
                                                        (c_guard ())
                                                        (c_rhs (Expr_list ())))
                                                       ((c_lhs
                                                          ((Pattern_binding
                                                             (Var_name _))))
                                                         (c_guard ())
                                                         (c_rhs
                                                           (Expr_name
                                                             (Var_name Log))))))
                                                    (Expr_name
                                                      (Var_name ClientArgs))))))))))))
                                 ((c_lhs ((Pattern_binding (Var_name _))))
                                   (c_guard ())
                                   (c_rhs
                                     (Expr_apply
                                       ((fa_name
                                          (Expr_name
                                            (Qualified_name
                                              (n_mod (Atom_name (Atom erlang)))
                                              (n_name (Atom_name (Atom '++'))))))
                                         (fa_args
                                           ((Expr_list
                                              ((Expr_name (Var_name Name))
                                                (Expr_name (Var_name Depth))
                                                (Expr_name (Var_name Msg))
                                                (Expr_name (Var_name Depth))
                                                (Expr_name (Var_name State))
                                                (Expr_name (Var_name Depth))
                                                (Expr_name (Var_name Reason1))
                                                (Expr_name (Var_name Depth))))
                                             (Expr_apply
                                               ((fa_name
                                                  (Expr_name
                                                    (Qualified_name
                                                      (n_mod
                                                        (Atom_name
                                                          (Atom erlang)))
                                                      (n_name
                                                        (Atom_name (Atom '++'))))))
                                                 (fa_args
                                                   ((Expr_case
                                                      (Expr_name
                                                        (Var_name Log))
                                                      (((c_lhs
                                                          ((Pattern_list ())))
                                                         (c_guard ())
                                                         (c_rhs (Expr_list ())))
                                                        ((c_lhs
                                                           ((Pattern_binding
                                                              (Var_name _))))
                                                          (c_guard ())
                                                          (c_rhs
                                                            (Expr_apply
                                                              ((fa_name
                                                                 (Expr_name
                                                                   (Qualified_name
                                                                     (n_mod
                                                                      (Atom_name
                                                                      (Atom
                                                                      lists)))
                                                                     (n_name
                                                                      (Atom_name
                                                                      (Atom
                                                                      flatmap))))))
                                                                (fa_args
                                                                  ((Expr_fun
                                                                     (((c_lhs
                                                                      ((Pattern_binding
                                                                      (Var_name
                                                                      L))))
                                                                      (c_guard
                                                                      ())
                                                                      (c_rhs
                                                                      (Expr_list
                                                                      ((Expr_name
                                                                      (Var_name
                                                                      L))
                                                                      (Expr_name
                                                                      (Var_name
                                                                      Depth))))))))
                                                                    (Expr_name
                                                                      (Var_name
                                                                      Log))))))))))
                                                     (Expr_name
                                                       (Var_name ClientArgs))))))))))))))))
                         (Expr_tuple
                           ((Expr_name (Var_name Format))
                             (Expr_name (Var_name Args)))))))))))
            ((c_lhs
               ((Pattern_map
                  (((Pattern_match (Lit_atom (Atom label)))
                     (Pattern_tuple
                       ((Pattern_match (Lit_atom (Atom gen_server)))
                         (Pattern_match (Lit_atom (Atom no_handle_info))))))
                    ((Pattern_match (Lit_atom (Atom module)))
                      (Pattern_binding (Var_name Mod)))
                    ((Pattern_match (Lit_atom (Atom message)))
                      (Pattern_binding (Var_name Msg)))))
                 (Pattern_with_name
                   (Pattern_map
                     (((Pattern_match (Lit_atom (Atom depth)))
                        (Pattern_binding (Var_name Depth)))))
                   (Pattern_binding (Var_name FormatOpts)))))
              (c_guard ())
              (c_rhs
                (Expr_let
                  ((lb_lhs (Pattern_binding (Var_name P)))
                    (lb_rhs
                      (Expr_apply
                        ((fa_name (Expr_name (Atom_name (Atom p))))
                          (fa_args ((Expr_name (Var_name FormatOpts))))))))
                  (Expr_let
                    ((lb_lhs (Pattern_binding (Var_name Format)))
                      (lb_rhs
                        (Expr_comment
                          (Comment
                            "% FIXME: multi-line strings are not supported yet")
                          (Expr_comment
                            (Comment
                              "% this should be broken before the second **")
                            (Expr_apply
                              ((fa_name
                                 (Expr_name
                                   (Qualified_name
                                     (n_mod (Atom_name (Atom erlang)))
                                     (n_name (Atom_name (Atom '++'))))))
                                (fa_args
                                  ((Expr_literal
                                     (Lit_string
                                       "** Undefined handle_info in ~p~n** Unhandled message: "))
                                    (Expr_apply
                                      ((fa_name
                                         (Expr_name
                                           (Qualified_name
                                             (n_mod (Atom_name (Atom erlang)))
                                             (n_name (Atom_name (Atom '++'))))))
                                        (fa_args
                                          ((Expr_name (Var_name P))
                                            (Expr_literal (Lit_string ~n))))))))))))))
                    (Expr_let
                      ((lb_lhs (Pattern_binding (Var_name Args)))
                        (lb_rhs
                          (Expr_case (Expr_name (Var_name Depth))
                            (((c_lhs
                                ((Pattern_match (Lit_atom (Atom unlimited)))))
                               (c_guard ())
                               (c_rhs
                                 (Expr_list
                                   ((Expr_name (Var_name Mod))
                                     (Expr_name (Var_name Msg))))))
                              ((c_lhs ((Pattern_binding (Var_name _))))
                                (c_guard ())
                                (c_rhs
                                  (Expr_list
                                    ((Expr_name (Var_name Mod))
                                      (Expr_name (Var_name Msg))
                                      (Expr_name (Var_name Depth))))))))))
                      (Expr_tuple
                        ((Expr_name (Var_name Format))
                          (Expr_name (Var_name Args)))))))))))
        (fd_spec ())))
    (Function_decl
      ((fd_name (Atom fix_reason)) (fd_arity 1)
        (fd_cases
          (((c_lhs
              ((Pattern_with_name
                 (Pattern_tuple
                   ((Pattern_match (Lit_atom (Atom undef)))
                     (Pattern_cons
                       ((Pattern_tuple
                          ((Pattern_binding (Var_name M))
                            (Pattern_binding (Var_name F))
                            (Pattern_binding (Var_name A))
                            (Pattern_binding (Var_name L)))))
                       (Pattern_binding (Var_name MFAs)))))
                 (Pattern_binding (Var_name Reason)))))
             (c_guard ())
             (c_rhs
               (Expr_case
                 (Expr_apply
                   ((fa_name
                      (Expr_name
                        (Qualified_name (n_mod (Atom_name (Atom code)))
                          (n_name (Atom_name (Atom is_loaded))))))
                     (fa_args ((Expr_name (Var_name M))))))
                 (((c_lhs ((Pattern_match (Lit_atom (Atom false)))))
                    (c_guard ())
                    (c_rhs
                      (Expr_tuple
                        ((Expr_literal
                           (Lit_atom (Atom "module could not be loaded")))
                          (Expr_cons
                            ((Expr_tuple
                               ((Expr_name (Var_name M))
                                 (Expr_name (Var_name F))
                                 (Expr_name (Var_name A))
                                 (Expr_name (Var_name L)))))
                            (Expr_name (Var_name MFAs)))))))
                   ((c_lhs ((Pattern_binding (Var_name _)))) (c_guard ())
                     (c_rhs
                       (Expr_case
                         (Expr_apply
                           ((fa_name
                              (Expr_name
                                (Qualified_name
                                  (n_mod (Atom_name (Atom erlang)))
                                  (n_name (Atom_name (Atom function_exported))))))
                             (fa_args
                               ((Expr_name (Var_name M))
                                 (Expr_name (Var_name F))
                                 (Expr_apply
                                   ((fa_name
                                      (Expr_name (Atom_name (Atom length))))
                                     (fa_args ((Expr_name (Var_name A))))))))))
                         (((c_lhs ((Pattern_match (Lit_atom (Atom true)))))
                            (c_guard ()) (c_rhs (Expr_name (Var_name Reason))))
                           ((c_lhs ((Pattern_match (Lit_atom (Atom false)))))
                             (c_guard ())
                             (c_rhs
                               (Expr_tuple
                                 ((Expr_literal
                                    (Lit_atom (Atom "function not exported")))
                                   (Expr_cons
                                     ((Expr_tuple
                                        ((Expr_name (Var_name M))
                                          (Expr_name (Var_name F))
                                          (Expr_name (Var_name A))
                                          (Expr_name (Var_name L)))))
                                     (Expr_name (Var_name MFAs)))))))))))))))
            ((c_lhs ((Pattern_binding (Var_name Reason)))) (c_guard ())
              (c_rhs (Expr_name (Var_name Reason))))))
        (fd_spec ())))
    (Function_decl
      ((fd_name (Atom format_server_log_single)) (fd_arity 2)
        (fd_cases
          (((c_lhs ((Pattern_list ()) (Pattern_binding (Var_name _))))
             (c_guard ())
             (c_rhs
               (Expr_tuple ((Expr_literal (Lit_string "")) (Expr_list ())))))
            ((c_lhs
               ((Pattern_binding (Var_name Log))
                 (Pattern_binding (Var_name FormatOpts))))
              (c_guard ())
              (c_rhs
                (Expr_let
                  ((lb_lhs (Pattern_binding (Var_name Args)))
                    (lb_rhs
                      (Expr_case
                        (Expr_apply
                          ((fa_name
                             (Expr_name
                               (Qualified_name (n_mod (Atom_name (Atom maps)))
                                 (n_name (Atom_name (Atom get))))))
                            (fa_args
                              ((Expr_literal (Lit_atom (Atom depth)))
                                (Expr_name (Var_name FormatOpts))))))
                        (((c_lhs ((Pattern_match (Lit_atom (Atom unlimited)))))
                           (c_guard ())
                           (c_rhs (Expr_list ((Expr_name (Var_name Log))))))
                          ((c_lhs ((Pattern_binding (Var_name Depth))))
                            (c_guard ())
                            (c_rhs
                              (Expr_list
                                ((Expr_name (Var_name Log))
                                  (Expr_name (Var_name Depth))))))))))
                  (Expr_tuple
                    ((Expr_apply
                       ((fa_name
                          (Expr_name
                            (Qualified_name (n_mod (Atom_name (Atom erlang)))
                              (n_name (Atom_name (Atom '++'))))))
                         (fa_args
                           ((Expr_literal (Lit_string " Log: "))
                             (Expr_apply
                               ((fa_name (Expr_name (Atom_name (Atom p))))
                                 (fa_args ((Expr_name (Var_name FormatOpts))))))))))
                      (Expr_name (Var_name Args)))))))))
        (fd_spec ())))
    (Function_decl
      ((fd_name (Atom format_client_log_single)) (fd_arity 2)
        (fd_cases
          (((c_lhs
              ((Pattern_match (Lit_atom (Atom undefined)))
                (Pattern_binding (Var_name _))))
             (c_guard ())
             (c_rhs
               (Expr_tuple ((Expr_literal (Lit_string "")) (Expr_list ())))))
            ((c_lhs
               ((Pattern_tuple
                  ((Pattern_binding (Var_name From))
                    (Pattern_match (Lit_atom (Atom dead)))))
                 (Pattern_binding (Var_name _))))
              (c_guard ())
              (c_rhs
                (Expr_tuple
                  ((Expr_literal (Lit_string " Client ~0p is dead."))
                    (Expr_list ((Expr_name (Var_name From))))))))
            ((c_lhs
               ((Pattern_tuple
                  ((Pattern_binding (Var_name From))
                    (Pattern_match (Lit_atom (Atom remote)))))
                 (Pattern_binding (Var_name _))))
              (c_guard ())
              (c_rhs
                (Expr_tuple
                  ((Expr_literal
                     (Lit_string " Client ~0p is remote on node ~0p."))
                    (Expr_list
                      ((Expr_name (Var_name From))
                        (Expr_apply
                          ((fa_name (Expr_name (Atom_name (Atom node))))
                            (fa_args ((Expr_name (Var_name From))))))))))))
            ((c_lhs
               ((Pattern_tuple
                  ((Pattern_binding (Var_name _From))
                    (Pattern_tuple
                      ((Pattern_binding (Var_name Name))
                        (Pattern_binding (Var_name Stacktrace0))))))
                 (Pattern_binding (Var_name FormatOpts))))
              (c_guard ())
              (c_rhs
                (Expr_let
                  ((lb_lhs (Pattern_binding (Var_name P)))
                    (lb_rhs
                      (Expr_apply
                        ((fa_name (Expr_name (Atom_name (Atom p))))
                          (fa_args ((Expr_name (Var_name FormatOpts))))))))
                  (Expr_comment
                    (Comment
                      "% Minimize the stacktrace a bit for single line reports. This is")
                    (Expr_comment
                      (Comment "% hopefully enough to point out the position.")
                      (Expr_let
                        ((lb_lhs (Pattern_binding (Var_name Stacktrace)))
                          (lb_rhs
                            (Expr_apply
                              ((fa_name
                                 (Expr_name
                                   (Qualified_name
                                     (n_mod (Atom_name (Atom lists)))
                                     (n_name (Atom_name (Atom sublist))))))
                                (fa_args
                                  ((Expr_name (Var_name Stacktrace0))
                                    (Expr_literal (Lit_integer 4))))))))
                        (Expr_let
                          ((lb_lhs (Pattern_binding (Var_name Args)))
                            (lb_rhs
                              (Expr_case
                                (Expr_apply
                                  ((fa_name
                                     (Expr_name
                                       (Qualified_name
                                         (n_mod (Atom_name (Atom maps)))
                                         (n_name (Atom_name (Atom get))))))
                                    (fa_args
                                      ((Expr_literal (Lit_atom (Atom depth)))
                                        (Expr_name (Var_name FormatOpts))))))
                                (((c_lhs
                                    ((Pattern_match
                                       (Lit_atom (Atom unlimited)))))
                                   (c_guard ())
                                   (c_rhs
                                     (Expr_list
                                       ((Expr_name (Var_name Name))
                                         (Expr_name (Var_name Stacktrace))))))
                                  ((c_lhs ((Pattern_binding (Var_name Depth))))
                                    (c_guard ())
                                    (c_rhs
                                      (Expr_list
                                        ((Expr_name (Var_name Name))
                                          (Expr_name (Var_name Depth))
                                          (Expr_name (Var_name Stacktrace))
                                          (Expr_name (Var_name Depth))))))))))
                          (Expr_tuple
                            ((Expr_apply
                               ((fa_name
                                  (Expr_name
                                    (Qualified_name
                                      (n_mod (Atom_name (Atom erlang)))
                                      (n_name (Atom_name (Atom '++'))))))
                                 (fa_args
                                   ((Expr_literal (Lit_string " Client "))
                                     (Expr_apply
                                       ((fa_name
                                          (Expr_name
                                            (Qualified_name
                                              (n_mod (Atom_name (Atom erlang)))
                                              (n_name (Atom_name (Atom '++'))))))
                                         (fa_args
                                           ((Expr_name (Var_name P))
                                             (Expr_apply
                                               ((fa_name
                                                  (Expr_name
                                                    (Qualified_name
                                                      (n_mod
                                                        (Atom_name
                                                          (Atom erlang)))
                                                      (n_name
                                                        (Atom_name (Atom '++'))))))
                                                 (fa_args
                                                   ((Expr_literal
                                                      (Lit_string
                                                        " stacktrace: "))
                                                     (Expr_apply
                                                       ((fa_name
                                                          (Expr_name
                                                            (Qualified_name
                                                              (n_mod
                                                                (Atom_name
                                                                  (Atom erlang)))
                                                              (n_name
                                                                (Atom_name
                                                                  (Atom '++'))))))
                                                         (fa_args
                                                           ((Expr_name
                                                              (Var_name P))
                                                             (Expr_literal
                                                               (Lit_string .))))))))))))))))))
                              (Expr_name (Var_name Args)))))))))))))
        (fd_spec ())))
    (Function_decl
      ((fd_name (Atom format_client_log)) (fd_arity 2)
        (fd_cases
          (((c_lhs
              ((Pattern_match (Lit_atom (Atom undefined)))
                (Pattern_binding (Var_name _))))
             (c_guard ())
             (c_rhs
               (Expr_tuple ((Expr_literal (Lit_string "")) (Expr_list ())))))
            ((c_lhs
               ((Pattern_tuple
                  ((Pattern_binding (Var_name From))
                    (Pattern_match (Lit_atom (Atom dead)))))
                 (Pattern_binding (Var_name _))))
              (c_guard ())
              (c_rhs
                (Expr_tuple
                  ((Expr_literal (Lit_string "** Client ~p is dead~n"))
                    (Expr_list ((Expr_name (Var_name From))))))))
            ((c_lhs
               ((Pattern_tuple
                  ((Pattern_binding (Var_name From))
                    (Pattern_match (Lit_atom (Atom remote)))))
                 (Pattern_binding (Var_name _))))
              (c_guard ())
              (c_rhs
                (Expr_tuple
                  ((Expr_literal
                     (Lit_string "** Client ~p is remote on node ~p~n"))
                    (Expr_list
                      ((Expr_name (Var_name From))
                        (Expr_apply
                          ((fa_name (Expr_name (Atom_name (Atom node))))
                            (fa_args ((Expr_name (Var_name From))))))))))))
            ((c_lhs
               ((Pattern_tuple
                  ((Pattern_binding (Var_name _From))
                    (Pattern_tuple
                      ((Pattern_binding (Var_name Name))
                        (Pattern_binding (Var_name Stacktrace))))))
                 (Pattern_binding (Var_name FormatOpts))))
              (c_guard ())
              (c_rhs
                (Expr_let
                  ((lb_lhs (Pattern_binding (Var_name P)))
                    (lb_rhs
                      (Expr_apply
                        ((fa_name (Expr_name (Atom_name (Atom p))))
                          (fa_args ((Expr_name (Var_name FormatOpts))))))))
                  (Expr_let
                    ((lb_lhs (Pattern_binding (Var_name Format)))
                      (lb_rhs
                        (Expr_apply
                          ((fa_name
                             (Expr_name
                               (Qualified_name (n_mod (Atom_name (Atom lists)))
                                 (n_name (Atom_name (Atom append))))))
                            (fa_args
                              ((Expr_list
                                 ((Expr_literal (Lit_string "** Client "))
                                   (Expr_name (Var_name P))
                                   (Expr_literal (Lit_string " stacktrace~n"))
                                   (Expr_literal (Lit_string "** "))
                                   (Expr_name (Var_name P))
                                   (Expr_literal (Lit_string ~n))))))))))
                    (Expr_let
                      ((lb_lhs (Pattern_binding (Var_name Args)))
                        (lb_rhs
                          (Expr_case
                            (Expr_apply
                              ((fa_name
                                 (Expr_name
                                   (Qualified_name
                                     (n_mod (Atom_name (Atom maps)))
                                     (n_name (Atom_name (Atom get))))))
                                (fa_args
                                  ((Expr_literal (Lit_atom (Atom depth)))
                                    (Expr_name (Var_name FormatOpts))))))
                            (((c_lhs
                                ((Pattern_match (Lit_atom (Atom unlimited)))))
                               (c_guard ())
                               (c_rhs
                                 (Expr_list
                                   ((Expr_name (Var_name Name))
                                     (Expr_name (Var_name Stacktrace))))))
                              ((c_lhs ((Pattern_binding (Var_name Depth))))
                                (c_guard ())
                                (c_rhs
                                  (Expr_list
                                    ((Expr_name (Var_name Name))
                                      (Expr_name (Var_name Depth))
                                      (Expr_name (Var_name Stacktrace))
                                      (Expr_name (Var_name Depth))))))))))
                      (Expr_tuple
                        ((Expr_name (Var_name Format))
                          (Expr_name (Var_name Args)))))))))))
        (fd_spec ())))
    (Function_decl
      ((fd_name (Atom p)) (fd_arity 1)
        (fd_cases
          (((c_lhs
              ((Pattern_map
                 (((Pattern_match (Lit_atom (Atom single_line)))
                    (Pattern_binding (Var_name Single)))
                   ((Pattern_match (Lit_atom (Atom depth)))
                     (Pattern_binding (Var_name Depth)))
                   ((Pattern_match (Lit_atom (Atom encoding)))
                     (Pattern_binding (Var_name Enc)))))))
             (c_guard ())
             (c_rhs
               (Expr_apply
                 ((fa_name
                    (Expr_name
                      (Qualified_name (n_mod (Atom_name (Atom erlang)))
                        (n_name (Atom_name (Atom '++'))))))
                   (fa_args
                     ((Expr_literal (Lit_string ~))
                       (Expr_apply
                         ((fa_name
                            (Expr_name
                              (Qualified_name (n_mod (Atom_name (Atom erlang)))
                                (n_name (Atom_name (Atom '++'))))))
                           (fa_args
                             ((Expr_apply
                                ((fa_name
                                   (Expr_name (Atom_name (Atom single))))
                                  (fa_args ((Expr_name (Var_name Single))))))
                               (Expr_apply
                                 ((fa_name
                                    (Expr_name
                                      (Qualified_name
                                        (n_mod (Atom_name (Atom erlang)))
                                        (n_name (Atom_name (Atom '++'))))))
                                   (fa_args
                                     ((Expr_apply
                                        ((fa_name
                                           (Expr_name (Atom_name (Atom mod))))
                                          (fa_args
                                            ((Expr_name (Var_name Enc))))))
                                       (Expr_apply
                                         ((fa_name
                                            (Expr_name (Atom_name (Atom p))))
                                           (fa_args
                                             ((Expr_name (Var_name Depth))))))))))))))))))))
            ((c_lhs ((Pattern_match (Lit_atom (Atom unlimited))))) (c_guard ())
              (c_rhs (Expr_literal (Lit_string p))))
            ((c_lhs ((Pattern_binding (Var_name _Depth)))) (c_guard ())
              (c_rhs (Expr_literal (Lit_string P))))))
        (fd_spec ())))
    (Function_decl
      ((fd_name (Atom single)) (fd_arity 1)
        (fd_cases
          (((c_lhs ((Pattern_match (Lit_atom (Atom true))))) (c_guard ())
             (c_rhs (Expr_literal (Lit_string 0))))
            ((c_lhs ((Pattern_match (Lit_atom (Atom false))))) (c_guard ())
              (c_rhs (Expr_literal (Lit_string ""))))))
        (fd_spec ())))
    (Function_decl
      ((fd_name (Atom mod)) (fd_arity 1)
        (fd_cases
          (((c_lhs ((Pattern_match (Lit_atom (Atom latin1))))) (c_guard ())
             (c_rhs (Expr_literal (Lit_string ""))))
            ((c_lhs ((Pattern_binding (Var_name _)))) (c_guard ())
              (c_rhs (Expr_literal (Lit_string t))))))
        (fd_spec ())))
    (Module_comment
      (Comment
        %-----------------------------------------------------------------))
    (Module_comment (Comment "% Status information"))
    (Module_comment
      (Comment
        %-----------------------------------------------------------------))
    (Function_decl
      ((fd_name (Atom format_status)) (fd_arity 2)
        (fd_cases
          (((c_lhs
              ((Pattern_binding (Var_name Opt))
                (Pattern_binding (Var_name StatusData))))
             (c_guard ())
             (c_rhs
               (Expr_let
                 ((lb_lhs
                    (Pattern_list
                      ((Pattern_binding (Var_name PDict))
                        (Pattern_binding (Var_name SysState))
                        (Pattern_binding (Var_name Parent))
                        (Pattern_binding (Var_name Debug))
                        (Pattern_list
                          ((Pattern_binding (Var_name Name))
                            (Pattern_binding (Var_name State))
                            (Pattern_binding (Var_name Mod))
                            (Pattern_binding (Var_name _Time))
                            (Pattern_binding (Var_name _HibernateAfterTimeout)))))))
                   (lb_rhs (Expr_name (Var_name StatusData))))
                 (Expr_let
                   ((lb_lhs (Pattern_binding (Var_name Header)))
                     (lb_rhs
                       (Expr_apply
                         ((fa_name
                            (Expr_name
                              (Qualified_name (n_mod (Atom_name (Atom gen)))
                                (n_name
                                  (Atom_name (Atom format_status_header))))))
                           (fa_args
                             ((Expr_literal
                                (Lit_string "Status for generic server"))
                               (Expr_name (Var_name Name))))))))
                   (Expr_let
                     ((lb_lhs (Pattern_binding (Var_name Log)))
                       (lb_rhs
                         (Expr_apply
                           ((fa_name
                              (Expr_name
                                (Qualified_name (n_mod (Atom_name (Atom sys)))
                                  (n_name (Atom_name (Atom get_log))))))
                             (fa_args ((Expr_name (Var_name Debug))))))))
                     (Expr_let
                       ((lb_lhs (Pattern_binding (Var_name Specific)))
                         (lb_rhs
                           (Expr_case
                             (Expr_apply
                               ((fa_name
                                  (Expr_name (Atom_name (Atom format_status))))
                                 (fa_args
                                   ((Expr_name (Var_name Opt))
                                     (Expr_name (Var_name Mod))
                                     (Expr_name (Var_name PDict))
                                     (Expr_name (Var_name State))))))
                             (((c_lhs ((Pattern_binding (Var_name S))))
                                (c_guard
                                  (((Expr_apply
                                      ((fa_name
                                         (Expr_name (Atom_name (Atom is_list))))
                                        (fa_args ((Expr_name (Var_name S)))))))))
                                (c_rhs (Expr_name (Var_name S))))
                               ((c_lhs ((Pattern_binding (Var_name S))))
                                 (c_guard ())
                                 (c_rhs (Expr_list ((Expr_name (Var_name S))))))))))
                       (Expr_cons
                         ((Expr_tuple
                            ((Expr_literal (Lit_atom (Atom header)))
                              (Expr_name (Var_name Header))))
                           (Expr_tuple
                             ((Expr_literal (Lit_atom (Atom data)))
                               (Expr_list
                                 ((Expr_tuple
                                    ((Expr_literal (Lit_string Status))
                                      (Expr_name (Var_name SysState))))
                                   (Expr_tuple
                                     ((Expr_literal (Lit_string Parent))
                                       (Expr_name (Var_name Parent))))
                                   (Expr_tuple
                                     ((Expr_literal
                                        (Lit_string "Logged events"))
                                       (Expr_apply
                                         ((fa_name
                                            (Expr_name
                                              (Atom_name
                                                (Atom format_log_state))))
                                           (fa_args
                                             ((Expr_name (Var_name Mod))
                                               (Expr_name (Var_name Log)))))))))))))
                         (Expr_name (Var_name Specific)))))))))))
        (fd_spec ())))
    (Function_decl
      ((fd_name (Atom format_log_state)) (fd_arity 2)
        (fd_cases
          (((c_lhs
              ((Pattern_binding (Var_name Mod))
                (Pattern_binding (Var_name Log))))
             (c_guard ())
             (c_rhs
               (Expr_comment
                 (Comment "% FIXME: list comprehesions are not supported yet")
                 (Expr_comment (Comment " [case Event of")
                   (Expr_comment (Comment "      {out,Msg,From,State} ->")
                     (Expr_comment
                       (Comment
                         "          {out,Msg,From,format_status(terminate, Mod, get(), State)};")
                       (Expr_comment (Comment "      {noreply,State} ->")
                         (Expr_comment
                           (Comment
                             "          {noreply,format_status(terminate, Mod, get(), State)};")
                           (Expr_comment (Comment "      _ -> Event")
                             (Expr_comment (Comment "  end || Event <- Log].")
                               (Expr_list ())))))))))))))
        (fd_spec ())))
    (Function_decl
      ((fd_name (Atom format_status)) (fd_arity 4)
        (fd_cases
          (((c_lhs
              ((Pattern_binding (Var_name Opt))
                (Pattern_binding (Var_name Mod))
                (Pattern_binding (Var_name PDict))
                (Pattern_binding (Var_name State))))
             (c_guard ())
             (c_rhs
               (Expr_let
                 ((lb_lhs (Pattern_binding (Var_name DefStatus)))
                   (lb_rhs
                     (Expr_case (Expr_name (Var_name Opt))
                       (((c_lhs ((Pattern_match (Lit_atom (Atom terminate)))))
                          (c_guard ()) (c_rhs (Expr_name (Var_name State))))
                         ((c_lhs ((Pattern_binding (Var_name _)))) (c_guard ())
                           (c_rhs
                             (Expr_list
                               ((Expr_tuple
                                  ((Expr_literal (Lit_atom (Atom data)))
                                    (Expr_list
                                      ((Expr_tuple
                                         ((Expr_literal (Lit_string State))
                                           (Expr_name (Var_name State))))))))))))))))
                 (Expr_case
                   (Expr_apply
                     ((fa_name
                        (Expr_name
                          (Qualified_name (n_mod (Atom_name (Atom erlang)))
                            (n_name (Atom_name (Atom function_exported))))))
                       (fa_args
                         ((Expr_name (Var_name Mod))
                           (Expr_literal (Lit_atom (Atom format_status)))
                           (Expr_literal (Lit_integer 2))))))
                   (((c_lhs ((Pattern_match (Lit_atom (Atom true)))))
                      (c_guard ())
                      (c_rhs
                        (Expr_case
                          (Expr_catch
                            (Expr_apply
                              ((fa_name
                                 (Expr_name
                                   (Qualified_name (n_mod (Var_name Mod))
                                     (n_name (Atom_name (Atom format_status))))))
                                (fa_args
                                  ((Expr_name (Var_name Opt))
                                    (Expr_list
                                      ((Expr_name (Var_name PDict))
                                        (Expr_name (Var_name State)))))))))
                          (((c_lhs
                              ((Pattern_tuple
                                 ((Pattern_match (Lit_atom (Atom 'EXIT')))
                                   (Pattern_binding (Var_name _))))))
                             (c_guard ())
                             (c_rhs (Expr_name (Var_name DefStatus))))
                            ((c_lhs ((Pattern_binding (Var_name Else))))
                              (c_guard ()) (c_rhs (Expr_name (Var_name Else))))))))
                     ((c_lhs ((Pattern_binding (Var_name _)))) (c_guard ())
                       (c_rhs (Expr_name (Var_name DefStatus)))))))))))
        (fd_spec ()))))
