TK_EOF      <eof>
TK_ERROR    <error>
TK_IDENT    <ident>
TK_LET      let
TK_IN       in
TK_EXTERN   extern
TK_NODE     node
TK_SYSTEM   system
TK_RETURNS  returns
TK_EXIST    exist
TK_ASSERT   assert
TK_RAISE    raise
TK_TRY      try
TK_CATCH    catch
TK_TRAP     trap
TK_PARA     &>
TK_DO       do
TK_FBY      fby
TK_LOOP     loop
TK_WEIGHT   weight
TK_TYPE     type
TK_BOOL     bool
TK_INT      int
TK_REAL     real
TK_TRACE    trace
TK_REF      ref 
TK_EXCEPTION exception
TK_PRE       pre
TK_FALSE     false
TK_TRUE      true
TK_RCONST    <floating>
TK_ICONST    <integer>
TK_EQ        =
TK_NEQ       <>
TK_BARSUP    |>
TK_PLUS      +
TK_MINUS     -
TK_TIMES     *
TK_SLASH     /
TK_DIV       div
TK_MOD       mod
TK_LT        <
TK_LTE       <=
TK_GT        >
TK_GTE       >=
TK_BAR       |
TK_DOT       .
TK_COMA      ,
TK_SEMICOL   ;
TK_COLON     :
TK_TILDA     ~
TK_OPEN_BRACE        {
TK_CLOSE_BRACE       }
TK_OPEN_BRACKET      [
TK_CLOSE_BRACKET     ]
TK_OPEN_PAR          (
TK_CLOSE_PAR         )
TK_NOT         not
TK_OR          or
TK_NOR         nor
TK_XOR         xor
TK_NXOR        xor
TK_DIESE       #
TK_AND         and
TK_IMPL        =>
TK_ARROW       ->
TK_IF          if
TK_THEN        then
TK_ELSE        else
TK_RUN      run
TK_ERUN     erun
TK_ASSIGN   :=
TK_STRONG   strong
TK_WEAK     weak
TK_INCLUDE  include
TK_STRING   <string>