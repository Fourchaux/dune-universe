let between(x, min, max : real) : bool = 
	((min < x) and (x < max))

let abs(x : real) : real = 
    if x > 0.0 then x else -x


let up_and_down(x : real ref; min, max, delta : real) =

exist px :  real in
assert px = pre x in
  if (pre x < min) or (
		(pre x < max) and (pre px <= pre x)
	) then  (
		between(x, pre x, pre x + delta)
	) else (
		between(x, pre x - delta, pre x)
	) 


node main(Heat_on : bool) returns ( 
	T1 : real;
	T2 : real;
	T3 : real) =

exist T:real in
assert abs(T-T1) < 0.5 in
assert abs(T-T2) < 0.5 in
assert abs(T-T3) < 0.5 in

  loop [1] -- R1:  j'aimerais bien ecrire Loop 1 en fait...
     {
       (6.0 < T) and (T < 9.0)
     } 
  fby
loop { (if Heat_on then T > pre T else T < pre T) and (abs(T-pre T)<1.0) }

