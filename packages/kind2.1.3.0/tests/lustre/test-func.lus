
function sincos(in: real) returns (sin: real; cos: real);
--@const max = 1.0;
--@const pi = 3.14;
--@const tau = 2.0 * pi;
--@var min = - max;
--@require in <= 0.0 or in >= 0.0;
--@ensure min <= sin and sin <= max;

--@mode pos;
--@require 0.0 <= in and in <= tau;
--@ensure sin >= 0.0;

--@mode neg;
--@require - tau <= in and in <= 0.0;
--@ensure sin <= 0.0;

node X (in: real) returns (OK: bool);
let
  OK = exp(0.0 -> in, 1.0 -> in) > 0.0 or sincos(2.0 -> in) + sincos(2.0 -> in) = (0.0, 0.0);
  --%PROPERTY OK;
  --%MAIN ;
tel;

node id (in: real) returns (out: int);
let out = (int in); tel;

function exp (x, y: real) returns (out: real);
-- --@ensure out >= id(out);
-- --@ensure out <= sin(out);

function sin(in: real) returns (out: int);
