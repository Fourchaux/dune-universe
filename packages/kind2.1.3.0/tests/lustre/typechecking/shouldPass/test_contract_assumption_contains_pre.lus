contract B(x:bool) returns (y:int);
let
    mode m2
    ( require x;
      ensure pre y + 1 = y + 2;);    
tel

contract A(x:int) returns (y:int);
let
   mode m1
   (require (pre y = x););
   import B(::m1) returns (x);
   guarantee (::B::m2 = (pre y = x)); 
tel



node c (x:int) returns (y: int);
(*@contract
   assume  x = pre y;    -- OK
   import A(x)returns(y);
   guarantee ::A::m1;
*)
let
        y = 2 * x;
tel;