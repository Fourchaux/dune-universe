
node toto(a,b: int) returns (x,y,z: int);
let
	x = a + b;
	y = 0 fby y + 1;
	z = x fby z + a;
tel
node toto_nm(a,b: int) returns (x,y,z: int);
let
	x = a + b;
	y =   1;
	z =   a;
tel

node test_condact(c: bool; a,b:int) returns (x,y,z: int);
let
	(x, y, z) = condact<<toto, (11, 42, 12)>>(c, a, b);

--   (x, y, z) = m erge c (true -> toto(a, b)) (false -> (11, 42, 12) fby (x,y,z)) ;
tel
-- c